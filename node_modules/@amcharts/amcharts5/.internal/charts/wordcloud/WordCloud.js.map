{"version":3,"file":"WordCloud.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/wordcloud/WordCloud.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { CanvasLayer } from \"../../core/render/backend/CanvasRenderer\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Time } from \"../../core/util/Animation\";\n\nimport { WordCloudDefaultTheme } from \"./WordCloudDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate } from \"../../core/render/Series\";\nimport { Template } from \"../../core/util/Template\";\nimport { Label } from \"../../core/render/Label\";\nimport { Container } from \"../../core/render/Container\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport type { IBounds } from \"../../core/util/IBounds\";\n\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IWordCloudDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Category.\n\t */\n\tcategory: string;\n\n\t/**\n\t * Label.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Label.\n\t */\n\tghostLabel: Label;\n\n\t/**\n\t * Fill color used for the slice and related elements, e.g. legend marker.\n\t */\n\tfill: Color;\n\n\t/**\n\t * @ignore\n\t */\n\tset: number;\n\n\t/**\n\t * @ignore\n\t */\n\tangle: number;\n\n\t/**\n\t * @ignore\n\t */\n\tfontSize: number;\n}\n\nexport interface IWordCloudSettings extends ISeriesSettings {\n\n\t/**\n\t * Duration of word animation when chart resizes.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for word animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\t/**\n\t * @default false\n\t */\n\tautoFit?: boolean;\n\n\t/**\n\t * @readonly\n\t */\n\n\tprogress?: number;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for slices.\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * A field in data that holds category names.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field that holds color for slice fill.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * Source text from which words are extracted.\n\t */\n\ttext?: string;\n\n\t/**\n\t * Absolute or relative font size for the smallest words.\n\t */\n\tminFontSize?: number | Percent;\n\n\t/**\n\t * Absolute or relative font size for the biggest words.\n\t */\n\tmaxFontSize?: number | Percent;\n\n\t/**\n\t * Minimum occurances for a word to be included into cloud.\n\t */\n\tminValue?: number;\n\n\t/**\n\t * Maximum number of words to show.\n\t */\n\tmaxCount?: number;\n\n\t/**\n\t * Array of words  exclude from cloud.\n\t */\n\texcludeWords?: Array<string>;\n\n\t/**\n\t * Randomness of word placement (0-1).\n\t */\n\trandomness?: number;\n\n\t/**\n\t * Minimum number of characters for a word to be included in the cloud.\n\t */\n\tminWordLength?: number;\n\n\t/**\n\t * An array of possible rotation angles for words.\n\t */\n\tangles?: number[];\n\n\t/**\n\t * Step for next word placement.\n\t */\n\tstep?: number;\n}\n\nexport interface IWordCloudPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Indicates whether size of the font was adjusted for better fit.\n\t */\n\tadjustedFontSize: number;\n\n}\n\n/**\n * Creates a [[WordlCloud]] series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/word-cloud/} for more info\n * @important\n */\nexport class WordCloud extends Series {\n\n\tpublic static className: string = \"WordCloud\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([WordCloud.className]);\n\n\tdeclare public _settings: IWordCloudSettings;\n\tdeclare public _privateSettings: IWordCloudPrivate;\n\tdeclare public _dataItemSettings: IWordCloudDataItem;\n\n\tprotected _currentIndex: number = 0;\n\tprotected _timeoutDP?: IDisposer;\n\n\tprotected _ghostContainer = this.children.push(Container.new(this._root, { layer: 99, opacity: 0.01 }))\n\n\tprotected _pointSets: Array<Array<IPoint>> = [];\n\tprotected _sets: number = 3;\n\n\tprotected _process = false;\n\n\tprotected _buffer: Array<number> = [];\n\n\tprotected _boundsToAdd?: IBounds;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(WordCloudDefaultTheme.new(this._root));\n\n\t\tthis.fields.push(\"category\", \"fill\");\n\t\tthis._setDefault(\"valueField\", \"value\");\n\t\tthis._setDefault(\"categoryField\", \"category\");\n\t\tthis._setDefault(\"fillField\", \"fill\");\n\n\t\tsuper._afterNew();\n\n\t\tthis._root.events.on(\"frameended\", () => {\n\t\t\tthis.set(\"progress\", this._currentIndex / this.dataItems.length);\n\t\t})\n\t}\n\n\n\t/**\n\t * A [[ListTemplate]] of all labels in series.\n\t *\n\t * `labels.template` can also be used to configure labels.\n\t */\n\tpublic readonly labels: ListTemplate<Label> = this._makeLabels();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>): Label {\n\t\tconst label = this.children.push(this.labels.make());\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.set(\"fill\", dataItem.get(\"fill\"));\n\t\tlabel.set(\"x\", -999999); // do not change!\n\n\t\tdataItem.set(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tconst ghostLabel = this._ghostContainer.children.push(this.labels.make());\n\t\tghostLabel._setDataItem(dataItem);\n\t\tghostLabel.setAll({ fill: Color.fromHex(0x000000), fontWeight: \"900\" });\n\t\tdataItem.set(\"ghostLabel\", ghostLabel);\n\t\tthis.labels.push(ghostLabel);\n\n\t\treturn label;\n\t}\n\n\tprotected _makeLabels(): ListTemplate<Label> {\n\t\treturn new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Label._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"wordcloud\", \"series\"])\n\t\t\t}, [this.labels.template]),\n\t\t);\n\t}\n\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\n\t\tif (dataItem.get(\"fill\") == null) {\n\t\t\tlet colors = this.get(\"colors\");\n\t\t\tif (colors) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tthis.makeLabel(dataItem);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"text\")) {\n\t\t\tthis.data.setAll(this._getWords(this.get(\"text\")));\n\t\t\tthis._dirty[\"text\"] = false;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst resolution = this._root._renderer.resolution;\n\t\tconst cols = Math.round(this._root.width() * resolution);\n\t\t//const rows = Math.round(this._root.height() * resolution);\n\t\tlet step = this.get(\"step\", 1) * 2;\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isPrivateDirty(\"adjustedFontSize\")) {\n\t\t\tconst adjustedFontSize = this.getPrivate(\"adjustedFontSize\", 1);\n\n\t\t\tconst w = this.innerWidth();\n\t\t\tconst h = this.innerHeight();\n\n\t\t\tconst smaller = Math.min(w, h);\n\t\t\tconst bigger = Math.max(w, h);\n\n\t\t\tthis._buffer = Array(Math.ceil(this._root.width() * this._root.height() * resolution * resolution)).fill(0);\n\n\t\t\tif (smaller < 800) {\n\t\t\t\tstep = step / 2;\n\t\t\t}\n\n\t\t\tthis._ghostContainer._display.clear();\n\t\t\tthis._pointSets = [];\n\n\t\t\tfor (let i = 0; i < this._sets; i++) {\n\t\t\t\t// bigger step at the beginning\n\t\t\t\tconst setStep = step * (this._sets - i);\n\t\t\t\tconst points = this._spiralPoints(w / 2, h / 2, w, h, 0, setStep * h / bigger, setStep * w / bigger, 0, 0)\n\n\t\t\t\t// generated more points and remove those out of bounds\n\t\t\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet point = points[i];\n\n\t\t\t\t\tif (point.x < 0 || point.x > w || point.y < 0 || point.y > h) {\n\t\t\t\t\t\tpoints.splice(i, 1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._pointSets.push(points);\n\t\t\t}\n\n\t\t\tlet sum = 0;\n\t\t\tlet absSum = 0;\n\t\t\tlet valueHigh = 0;\n\t\t\tlet valueLow = Infinity;\n\t\t\tlet count = 0;\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tconst valueWorking = dataItem.get(\"valueWorking\", 0);\n\t\t\t\tsum += valueWorking;\n\t\t\t\tabsSum += Math.abs(valueWorking);\n\t\t\t});\n\n\t\t\tthis._dataItems.sort((a, b) => {\n\t\t\t\tlet aValue = a.get(\"value\");\n\t\t\t\tlet bValue = b.get(\"value\");\n\n\t\t\t\tif (aValue > bValue) return -1;\n\t\t\t\tif (aValue < bValue) return 1;\n\t\t\t\treturn 0;\n\n\t\t\t})\n\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\n\t\t\t\tconst value = dataItem.get(\"valueWorking\", 0);\n\n\t\t\t\tif (value >= absSum) {\n\t\t\t\t\tsum = dataItem.get(\"value\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (value > valueHigh) {\n\t\t\t\t\tvalueHigh = value;\n\t\t\t\t}\n\n\t\t\t\tif (value < valueLow) {\n\t\t\t\t\tvalueLow = value;\n\t\t\t\t}\n\n\t\t\t\tcount++;\n\t\t\t});\n\n\t\t\tthis.setPrivateRaw(\"valueLow\", valueLow);\n\t\t\tthis.setPrivateRaw(\"valueHigh\", valueHigh);\n\t\t\tthis.setPrivateRaw(\"valueSum\", sum);\n\t\t\tthis.setPrivateRaw(\"valueAverage\", sum / count);\n\t\t\tthis.setPrivateRaw(\"valueAbsoluteSum\", absSum);\n\n\t\t\tconst smallerSize = Math.min(w, h);\n\t\t\tconst minFontSize = $utils.relativeToValue(this.get(\"minFontSize\", 10), smallerSize) * adjustedFontSize;\n\t\t\tconst maxFontSize = $utils.relativeToValue(this.get(\"maxFontSize\", 100), smallerSize) * adjustedFontSize;\n\n\t\t\tconst angles = this.get(\"angles\", [0]);\n\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tconst value = dataItem.get(\"valueWorking\", 0);\n\t\t\t\tconst ghostLabel = dataItem.get(\"ghostLabel\");\n\t\t\t\tlet fontSize = minFontSize + (maxFontSize - minFontSize) * (value - valueLow) / (valueHigh - valueLow);\n\t\t\t\tif ($type.isNaN(fontSize)) {\n\t\t\t\t\tfontSize = maxFontSize;\n\t\t\t\t}\n\n\t\t\t\tconst set = this._sets - 1 - Math.floor((fontSize - minFontSize) / (maxFontSize - minFontSize) * (this._sets - 1));\n\n\t\t\t\tdataItem.setRaw(\"set\", set);\n\t\t\t\tdataItem.setRaw(\"fontSize\", fontSize);\n\n\t\t\t\tlet angle = angles[Math.floor(Math.random() * (angles.length))];\n\n\t\t\t\tdataItem.setRaw(\"angle\", angle);\n\n\t\t\t\tghostLabel.setAll({ fontSize: fontSize, rotation: angle, x: -10000 });\n\t\t\t})\n\n\t\t\tthis._process = false;\n\t\t\tthis._currentIndex = 0;\n\n\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\tthis._process = true;\n\t\t\t\t\tthis._markDirtyKey(\"progress\");\n\t\t\t\t}, 50)\n\t\t\t})\n\t\t}\n\n\t\tconst boundsToAdd = this._boundsToAdd;\n\t\tif (boundsToAdd) {\n\t\t\tconst context = (this._ghostContainer._display.getLayer() as CanvasLayer).context;\n\t\t\tconst y = Math.round(boundsToAdd.top);\n\t\t\tconst x = Math.round(boundsToAdd.left);\n\t\t\tconst w = Math.round(boundsToAdd.right - boundsToAdd.left);\n\t\t\tconst h = Math.round(boundsToAdd.bottom - boundsToAdd.top);\n\n\t\t\tconst imageData = context.getImageData(x, y, w, h).data;\n\t\t\tconst buffer = this._buffer;\n\n\t\t\tlet n = 3;\n\t\t\tfor (let r = y; r < y + h; r++) {\n\t\t\t\tfor (let c = x; c < x + w; c++) {\n\t\t\t\t\tlet i = ((r + 1) * cols - (cols - c));\n\t\t\t\t\tif (imageData[n] != 0) {\n\t\t\t\t\t\tbuffer[i] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tn += 4;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._boundsToAdd = undefined;\n\t\t}\n\n\t\tif (this._process && this.isDirty(\"progress\")) {\n\t\t\tthis._processItem();\n\t\t}\n\t}\n\n\tprotected _processItem() {\n\t\tthis._boundsToAdd = undefined;\n\n\t\tif (this._currentIndex < this.dataItems.length) {\n\t\t\tconst dataItem = this.dataItems[this._currentIndex];\n\t\t\tconst label = dataItem.get(\"label\");\n\t\t\tconst ghostLabel = dataItem.get(\"ghostLabel\");\n\n\t\t\tconst resolution = this._root._renderer.resolution;\n\n\t\t\tlet lw = ghostLabel.width();\n\t\t\tlet lh = ghostLabel.height();\n\n\t\t\tconst context = (ghostLabel._display.getLayer() as CanvasLayer).context;\n\t\t\tconst set = dataItem.get(\"set\");\n\n\t\t\tconst points = this._pointSets[set];\n\n\t\t\tconst w = this.innerWidth();\n\t\t\tconst h = this.innerHeight();\n\n\t\t\tconst cols = Math.round(this._root.width() * resolution);\n\n\t\t\tconst x = this.x();\n\t\t\tconst y = this.y();\n\n\t\t\tconst angles = this.get(\"angles\", [0]);\n\t\t\tif (w > h) {\n\t\t\t\tif (lw >= w / 2) {\n\t\t\t\t\t$array.each(angles, (angle) => {\n\t\t\t\t\t\tif (angle == 0 && dataItem.get(\"angle\") != 0) {\n\t\t\t\t\t\t\tdataItem.setRaw(\"angle\", 0);\n\t\t\t\t\t\t\tghostLabel.set(\"rotation\", 0);\n\t\t\t\t\t\t\t[lw, lh] = [lh, lw];\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (h > w) {\n\t\t\t\tif (lw >= w / 2) {\n\t\t\t\t\t$array.each(angles, (angle) => {\n\t\t\t\t\t\tif (Math.abs(angle) == 90 && dataItem.get(\"angle\") == 0) {\n\t\t\t\t\t\t\tdataItem.setRaw(\"angle\", angle);\n\t\t\t\t\t\t\tghostLabel.set(\"rotation\", angle);\n\t\t\t\t\t\t\t[lw, lh] = [lh, lw];\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst rw = Math.ceil(lw * resolution);\n\t\t\tconst rh = Math.ceil(lh * resolution);\n\n\t\t\tif (context && lw > 0 && lh > 0) {\n\t\t\t\tlet pIndex = Math.round(Math.random() * points.length * this.get(\"randomness\", 0));\n\n\t\t\t\tlet intersects = true;\n\n\t\t\t\twhile (intersects) {\n\n\t\t\t\t\tlet p = points[pIndex];\n\t\t\t\t\tif (p) {\n\t\t\t\t\t\tintersects = false;\n\n\t\t\t\t\t\tif (this._currentIndex > 0) {\n\t\t\t\t\t\t\tlet cx = Math.round((p.x + x) * resolution - rw / 2);\n\t\t\t\t\t\t\tlet cy = Math.round((p.y + y) * resolution - rh / 2);\n\t\t\t\t\t\t\tintersects = this._hasColor(cx, cy, rw, rh, cols);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (p.x - lw / 2 < 0 || p.x + lw / 2 > w || p.y - lh / 2 < 0 || p.y + lh / 2 > h) {\n\t\t\t\t\t\t\tpIndex++;\n\t\t\t\t\t\t\tintersects = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (!intersects) {\n\t\t\t\t\t\t\t\tconst angle = dataItem.get(\"angle\", 0);\n\t\t\t\t\t\t\t\tconst fontSize = dataItem.get(\"fontSize\", 0);\n\t\t\t\t\t\t\t\tif (label.get(\"x\") != -999999) {\n\t\t\t\t\t\t\t\t\tlabel.animate({ key: \"x\", to: p.x, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") })\n\t\t\t\t\t\t\t\t\tlabel.animate({ key: \"y\", to: p.y, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") })\n\t\t\t\t\t\t\t\t\tlabel.animate({ key: \"rotation\", to: angle, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") })\n\t\t\t\t\t\t\t\t\tlabel.animate({ key: \"fontSize\", to: fontSize, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tlabel.setAll({ x: p.x, y: p.y, rotation: angle, fontSize: fontSize });\n\t\t\t\t\t\t\t\t\tlabel.appear();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tghostLabel.setAll({ x: p.x, y: p.y });\n\n\t\t\t\t\t\t\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\tlet point = points[i]\n\t\t\t\t\t\t\t\t\tif (point.x >= p.x - lw / 2 && point.x <= p.x + lw / 2 && point.y >= p.y - lh / 2 && point.y <= p.y + lh / 2) {\n\t\t\t\t\t\t\t\t\t\tpoints.splice(i, 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._boundsToAdd = { left: (p.x + x - lw / 2) * resolution, right: (p.x + x + lw / 2) * resolution, top: (p.y + y - lh / 2) * resolution, bottom: (p.y + y + lh / 2) * resolution };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tpIndex += 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (this.get(\"autoFit\")) {\n\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\tthis.setPrivate(\"adjustedFontSize\", this.getPrivate(\"adjustedFontSize\", 1) * 0.9);\n\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel.set(\"x\", -999999);\n\t\t\t\t\t\tintersects = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._currentIndex++;\n\t\t}\n\t}\n\t/**\n* @ignore\n*/\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst ghostLabel = dataItem.get(\"ghostLabel\");\n\t\tif (ghostLabel) {\n\t\t\tthis.labels.removeValue(ghostLabel);\n\t\t\tghostLabel.dispose();\n\t\t}\n\t}\n\t/**\n* Extracts words and number of their appearances from a text.\n*\n* @ignore\n* @param  input  Source text\n*/\n\tprotected _getWords(input?: string): Array<{ category: string, value: number }> {\n\t\tlet words: Array<{ category: string, value: number }> = [];\n\n\t\tif (input) {\n\t\t\tconst chars = \"\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06E5-\\u06E6\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58-\\u0C59\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E46\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC0-9@+\";\n\t\t\tconst reg = new RegExp(\"([\" + chars + \"]+[\\-\" + chars + \"]*[\" + chars + \"]+)|([\" + chars + \"]+)\", \"ig\");\n\t\t\tlet res = input.match(reg);\n\t\t\tif (!res) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tlet word;\n\t\t\twhile (true) {\n\t\t\t\tword = res.pop();\n\n\t\t\t\tif (!word) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet item;\n\t\t\t\tfor (let i = 0; i < words.length; i++) {\n\t\t\t\t\tif (words[i].category.toLowerCase() == word.toLowerCase()) {\n\t\t\t\t\t\titem = words[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (item) {\n\t\t\t\t\titem.value++;\n\t\t\t\t\tif (!this.isCapitalized(word)) {\n\t\t\t\t\t\titem.category = word;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twords.push({\n\t\t\t\t\t\tcategory: word,\n\t\t\t\t\t\tvalue: 1\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet excludeWords = this.get(\"excludeWords\");\n\n\t\t\tconst minValue = this.get(\"minValue\", 1);\n\t\t\tconst minWordLength = this.get(\"minWordLength\", 1);\n\n\t\t\tif (minValue > 1 || minWordLength > 1 || (excludeWords && excludeWords.length > 0)) {\n\t\t\t\tfor (let i = words.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet w = words[i];\n\t\t\t\t\tlet word = w.category;\n\n\t\t\t\t\tif (w.value < minValue) {\n\t\t\t\t\t\twords.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (word.length < minWordLength) {\n\t\t\t\t\t\twords.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (excludeWords && excludeWords.indexOf(word) !== -1) {\n\t\t\t\t\t\twords.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twords.sort(function(a, b) {\n\t\t\t\tif (a.value == b.value) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\telse if (a.value > b.value) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst maxCount = this.get(\"maxCount\", Infinity);\n\t\t\tif (words.length > maxCount) {\n\t\t\t\twords = words.slice(0, maxCount);\n\t\t\t}\n\t\t}\n\n\t\treturn words;\n\t}\n\t/**\n* Checks if word is capitalized (starts with an uppercase) or not.\n*\n* @ignore\n* @param   word  Word\n* @return        Capitalized?\n*/\n\tpublic isCapitalized(word: string): boolean {\n\t\tlet lword = word.toLowerCase();\n\t\treturn word[0] != lword[0]\n\t\t\t&& word.substr(1) == lword.substr(1)\n\t\t\t&& word != lword;\n\t}\n\n\n\tpublic _spiralPoints(cx: number, cy: number, radius: number, radiusY: number, innerRadius: number, step: number, radiusStep: number, startAngle: number, endAngle: number): IPoint[] {\n\n\t\tlet r = innerRadius + 0.01;\n\t\tlet angle = startAngle * $math.RADIANS;\n\t\tlet points = [];\n\n\t\twhile (r < radius + radiusStep) {\n\n\t\t\tlet stepSize = step;\n\t\t\tif (stepSize / 2 > r) {\n\t\t\t\tstepSize = 2 * r;\n\t\t\t}\n\n\t\t\tangle += 2 * Math.asin(stepSize / 2 / r);\n\n\t\t\tif (angle * $math.DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet degrees = angle * $math.DEGREES;\n\n\t\t\tlet point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\n\t\t\tpoints.push(point);\n\n\t\t\tr = innerRadius + degrees / 360 * radiusStep;\n\t\t}\n\n\t\tpoints.shift();\n\n\t\treturn points;\n\t}\n\n\tprotected _hasColor(x: number, y: number, w: number, h: number, cols: number): boolean {\n\t\tconst buffer = this._buffer;\n\t\tif (buffer) {\n\t\t\tfor (let r = y; r < y + h; r += 4) {\n\t\t\t\tfor (let c = x; c < x + w; c += 4) {\n\t\t\t\t\tlet i = ((r + 1) * cols - (cols - c));\n\t\t\t\t\tif (buffer[i] != 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n}\n"]}