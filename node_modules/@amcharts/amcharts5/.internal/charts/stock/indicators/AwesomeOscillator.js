import { __extends } from "tslib";
import { Color } from "../../../core/util/Color";
import { ChartIndicator } from "./ChartIndicator";
import { ColumnSeries } from "../../xy/series/ColumnSeries";
import * as $array from "../../../core/util/Array";
/**
 * An implementation of a [[StockChart]] indicator.
 *
 * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info
 */
var AwesomeOscillator = /** @class */ (function (_super) {
    __extends(AwesomeOscillator, _super);
    function AwesomeOscillator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        Object.defineProperty(_this, "_editableSettings", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: [{
                    key: "increasingColor",
                    name: _this.root.language.translateAny("Increasing"),
                    type: "color"
                }, {
                    key: "decreasingColor",
                    name: _this.root.language.translateAny("Decreasing"),
                    type: "color"
                }]
        });
        Object.defineProperty(_this, "_themeTag", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "awesomeoscillator"
        });
        return _this;
    }
    Object.defineProperty(AwesomeOscillator.prototype, "_createSeries", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            return this.panel.series.push(ColumnSeries.new(this._root, {
                xAxis: this.xAxis,
                yAxis: this.yAxis,
                valueXField: "valueX",
                valueYField: "ao",
                stroke: this.get("seriesColor"),
                fill: undefined
            }));
        }
    });
    Object.defineProperty(AwesomeOscillator.prototype, "_updateChildren", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            _super.prototype._updateChildren.call(this);
            if (this.isDirty("increasingColor") || this.isDirty("decreasingColor")) {
                var template = this.series.columns.template;
                var increasing = this.get("increasingColor");
                var decreasing = this.get("decreasingColor");
                template.states.create("riseFromPrevious", { fill: increasing, stroke: increasing });
                template.states.create("dropFromPrevious", { fill: decreasing, stroke: decreasing });
                this._dataDirty = true;
            }
        }
    });
    /**
     * @ignore
     */
    Object.defineProperty(AwesomeOscillator.prototype, "prepareData", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            if (this.series) {
                this.set("field", "hl/2");
                var dataItems = this.get("stockSeries").dataItems;
                var decreasingColor_1 = this.get("decreasingColor", Color.fromHex(0xff0000)).toCSSHex();
                var increasingColor_1 = this.get("increasingColor", Color.fromHex(0x00ff00)).toCSSHex();
                var data = this._getDataArray(dataItems);
                var period_1 = 5;
                this._sma(data, 5, "value_y", "sma5");
                period_1 = 34;
                this._sma(data, 34, "value_y", "sma34");
                var po_1 = -Infinity;
                var i_1 = 0;
                $array.each(data, function (dataItem) {
                    i_1++;
                    if (i_1 >= period_1) {
                        var o = dataItem.sma5 - dataItem.sma34;
                        var color = increasingColor_1;
                        if (o < po_1) {
                            color = decreasingColor_1;
                        }
                        dataItem.ao = o;
                        dataItem.oscillatorColor = color;
                        po_1 = o;
                    }
                });
                this.series.data.setAll(data);
            }
        }
    });
    Object.defineProperty(AwesomeOscillator, "className", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: "AwesomeOscillator"
    });
    Object.defineProperty(AwesomeOscillator, "classNames", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: ChartIndicator.classNames.concat([AwesomeOscillator.className])
    });
    return AwesomeOscillator;
}(ChartIndicator));
export { AwesomeOscillator };
//# sourceMappingURL=AwesomeOscillator.js.map