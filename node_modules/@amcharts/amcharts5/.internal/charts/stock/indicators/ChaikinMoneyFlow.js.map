{"version":3,"file":"ChaikinMoneyFlow.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/ChaikinMoneyFlow.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IChaikinMoneyFlowSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Main volume series of the [[StockChart]].\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n\r\n}\r\n\r\nexport interface IChaikinMoneyFlowPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IChaikinMoneyFlowEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class ChaikinMoneyFlow extends ChartIndicator {\r\n\tpublic static className: string = \"ChaikinMoneyFlow\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([ChaikinMoneyFlow.className]);\r\n\r\n\tdeclare public _settings: IChaikinMoneyFlowSettings;\r\n\tdeclare public _privateSettings: IChaikinMoneyFlowPrivate;\r\n\tdeclare public _events: IChaikinMoneyFlowEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _themeTag: string = \"chaikinmoneyflow\";\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"cmf\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"volumeSeries\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\t\t\tlet i = 0;\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tlet close = dataItem.get(\"valueY\") as number;\r\n\t\t\t\tif (close != null) {\r\n\t\t\t\t\tlet low = dataItem.get(\"lowValueY\", close) as number;\r\n\t\t\t\t\tlet high = dataItem.get(\"highValueY\", close) as number;\r\n\r\n\t\t\t\t\tlet volume = 1;\r\n\r\n\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\tvolume = volumeDI.get(\"valueY\", 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet mf = ((close - low) - (high - close)) / (high - low)\r\n\t\t\t\t\tif (high == low) {\r\n\t\t\t\t\t\tmf = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet mfv = mf * volume;\r\n\t\t\t\t\tdata[i].mfv = mfv;\r\n\t\t\t\t\tdata[i].volume = volume;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tconst period = this.get(\"period\", 20);\r\n\t\t\ti = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tif (i >= period - 1) {\r\n\t\t\t\t\tlet mfv = 0;\r\n\t\t\t\t\tlet volume = 0;\r\n\r\n\t\t\t\t\tfor (let j = i; j > i - period; j--) {\r\n\t\t\t\t\t\tmfv += data[j].mfv;\r\n\t\t\t\t\t\tvolume += data[j].volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.cmf = mfv / volume;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}"]}