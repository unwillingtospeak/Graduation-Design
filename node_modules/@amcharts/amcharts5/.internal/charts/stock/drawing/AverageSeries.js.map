{"version":3,"file":"AverageSeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/AverageSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\nimport * as $math from \"../../../core/util/Math\";\r\n\r\nexport interface IAverageSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n\r\n}\r\n\r\nexport interface IAverageSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n\t/**\r\n\t * Value field to use for calculations.\r\n\t *\r\n\t * @default \"value\"\r\n\t */\r\n\tfield: \"open\" | \"value\" | \"low\" | \"high\";\r\n\r\n}\r\n\r\nexport interface IAverageSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n\r\n}\r\n\r\nexport class AverageSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"AverageSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([AverageSeries.className]);\r\n\r\n\tdeclare public _settings: IAverageSeriesSettings;\r\n\tdeclare public _privateSettings: IAverageSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IAverageSeriesDataItem;\r\n\r\n\tprotected _tag = \"average\";\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\t\tif (series) {\r\n\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\tconst min = xAxis.getPrivate(\"min\", 0) + 1;\r\n\t\t\tconst max = xAxis.getPrivate(\"max\", 1) - 1;\r\n\r\n\t\t\tlet x1 = $math.fitToRange(diP1.get(\"valueX\" as any), min, max);\r\n\t\t\tlet x2 = $math.fitToRange(diP2.get(\"valueX\" as any), min, max);\r\n\r\n\t\t\tconst di1 = xAxis.getSeriesItem(series, Math.max(0, xAxis.valueToPosition(x1)));\r\n\t\t\tconst di2 = xAxis.getSeriesItem(series, Math.min(1, xAxis.valueToPosition(x2)));\r\n\r\n\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\tif (di1 && di2) {\r\n\t\t\t\tlet i1 = series.dataItems.indexOf(di1);\r\n\t\t\t\tlet i2 = series.dataItems.indexOf(di2);\r\n\r\n\t\t\t\tif (i1 > i2) {\r\n\t\t\t\t\t[i1, i2] = [i2, i1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sum = 0;\r\n\t\t\t\tlet count = 0;\r\n\r\n\t\t\t\tfor (var i = i1; i <= i2; i++) {\r\n\t\t\t\t\tconst di = series.dataItems[i];\r\n\t\t\t\t\tconst value = di.get(field as any);\r\n\t\t\t\t\tif (value != null) {\r\n\t\t\t\t\t\tsum += value;\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst average = sum / count;\r\n\r\n\t\t\t\tdiP1.set(\"valueX\", x1);\r\n\t\t\t\tdiP2.set(\"valueX\", x2);\r\n\r\n\t\t\t\tdiP1.set(\"valueY\", average);\r\n\t\t\t\tdiP1.set(\"valueYWorking\", average);\r\n\r\n\t\t\t\tdiP2.set(\"valueY\", average);\r\n\t\t\t\tdiP2.set(\"valueYWorking\", average);\r\n\r\n\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// need to override so that location would not be set\r\n\tprotected _setXLocation() {\r\n\r\n\t}\r\n}"]}