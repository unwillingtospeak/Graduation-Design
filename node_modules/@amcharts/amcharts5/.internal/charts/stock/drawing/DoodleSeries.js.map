{"version":3,"file":"DoodleSeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/DoodleSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport { DrawingSeries, IDrawingSeriesSettings, IDrawingSeriesPrivate, IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\n\r\nexport interface IDoodleSeriesDataItem extends IDrawingSeriesDataItem {\r\n}\r\n\r\nexport interface IDoodleSeriesSettings extends IDrawingSeriesSettings {\r\n\r\n}\r\n\r\nexport interface IDoodleSeriesPrivate extends IDrawingSeriesPrivate {\r\n}\r\n\r\nexport class DoodleSeries extends DrawingSeries {\r\n\tpublic static className: string = \"DoodleSeries\";\r\n\tpublic static classNames: Array<string> = DrawingSeries.classNames.concat([DoodleSeries.className]);\r\n\r\n\tdeclare public _settings: IDoodleSeriesSettings;\r\n\tdeclare public _privateSettings: IDoodleSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IDoodleSeriesDataItem;\r\n\r\n\tprotected _panX?: boolean;\r\n\tprotected _panY?: boolean;\r\n\r\n\t// point index in segment\r\n\tprotected _pIndex: number = 0;\r\n\r\n\tprotected _tag = \"doodle\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.addTag(\"doodle\");\r\n\t\tthis.bullets.clear();\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerMove(event);\r\n\r\n\t\tif (this._drawingEnabled && this._isPointerDown) {\r\n\t\t\tthis._handleBulletPosition(event);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletPosition(event: ISpritePointerEvent) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\r\n\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(point.x)));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)));\r\n\r\n\t\t\tthis.data.push({ valueY: valueY, valueX: valueX });\r\n\t\t\tconst len = this.dataItems.length;\r\n\r\n\t\t\tconst dataItem = this.dataItems[len - 1];\r\n\t\t\tconst index = this._index;\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tthis._setXLocation(dataItem, valueX);\r\n\t\t\t\tthis._addContextInfo(index);\r\n\t\t\t}\r\n\t\t\tlet segmentItems = this._di[index];\r\n\t\t\tif (!segmentItems) {\r\n\t\t\t\tsegmentItems = {};\r\n\t\t\t}\r\n\t\t\tsegmentItems[this._pIndex] = dataItem;\r\n\t\t\tthis._di[index] = segmentItems;\r\n\t\t\tthis._pIndex++;\r\n\r\n\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleFillDragStart(e: ISpritePointerEvent, index: number) {\r\n\t\tif (!this._drawingEnabled) {\r\n\t\t\tsuper._handleFillDragStart(e, index);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerDown(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerDown(event);\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis._pIndex = 0;\r\n\r\n\t\t\tthis._panX = chart.get(\"panX\");\r\n\t\t\tthis._panY = chart.get(\"panY\");\r\n\r\n\t\t\tchart.set(\"panX\", false);\r\n\t\t\tchart.set(\"panY\", false);\r\n\r\n\t\t\tconst cursor = chart.get(\"cursor\");\r\n\t\t\tif (cursor) {\r\n\t\t\t\tcursor.setPrivate(\"visible\", false);\r\n\t\t\t}\r\n\r\n\t\t\tthis.data.push({ stroke: this._getStrokeTemplate() });\r\n\t\t\tthis._addContextInfo(this._index);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerUp(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerUp(event);\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis.setTimeout(() => {\r\n\t\t\t\tchart.set(\"panX\", this._panX);\r\n\t\t\t\tchart.set(\"panY\", this._panY);\r\n\t\t\t\tconst cursor = chart.get(\"cursor\");\r\n\t\t\t\tif (cursor) {\r\n\t\t\t\t\tcursor.setPrivate(\"visible\", true);\r\n\t\t\t\t}\r\n\t\t\t}, 100)\r\n\r\n\t\t\tthis._index++;\r\n\t\t}\r\n\t}\r\n}"]}