{"version":3,"file":"HorizontalRaySeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/HorizontalRaySeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\nimport type { Line } from \"../../../core/render/Line\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nimport * as $math from \"../../../core/util/Math\";\r\n\r\nexport interface IHorizontalRaySeriesDataItem extends ISimpleLineSeriesDataItem {\r\n\r\n}\r\n\r\nexport interface IHorizontalRaySeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n\t/**\r\n\t * Value field to use for calculations.\r\n\t *\r\n\t * @default \"value\"\r\n\t */\r\n\tfield: \"open\" | \"value\" | \"low\" | \"high\";\r\n\r\n}\r\n\r\nexport interface IHorizontalRaySeriesPrivate extends ISimpleLineSeriesPrivate {\r\n\r\n}\r\n\r\nexport class HorizontalRaySeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"HorizontalRaySeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([HorizontalRaySeries.className]);\r\n\r\n\tdeclare public _settings: IHorizontalRaySeriesSettings;\r\n\tdeclare public _privateSettings: IHorizontalRaySeriesPrivate;\r\n\tdeclare public _dataItemSettings: IHorizontalRaySeriesDataItem;\r\n\r\n\tprotected _tag = \"ray\";\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\t\tif (series) {\r\n\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\tconst min = xAxis.getPrivate(\"min\", 0) + 1;\r\n\t\t\tconst max = xAxis.getPrivate(\"max\", 1) - 1;\r\n\r\n\t\t\tlet x1 = $math.fitToRange(diP2.get(\"valueX\" as any), min, max);\r\n\t\t\tconst di1 = xAxis.getSeriesItem(series, Math.max(0, xAxis.valueToPosition(x1)));\r\n\r\n\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\tif (di1) {\r\n\t\t\t\tlet y1 = di1.get(field as any);\r\n\r\n\t\t\t\tdiP1.set(\"valueY\", y1);\r\n\t\t\t\tdiP1.set(\"valueYWorking\", y1);\r\n\r\n\t\t\t\tdiP2.set(\"valueY\", y1);\r\n\t\t\t\tdiP2.set(\"valueYWorking\", y1);\r\n\r\n\t\t\t\tdiP1.set(\"valueX\", x1);\r\n\t\t\t\tdiP2.set(\"valueX\", x1 + 0.01);\r\n\r\n\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateLine(line: Line, hitLine: Line, p11: IPoint, _p22: IPoint, p1: IPoint, _p2: IPoint) {\r\n\t\tline.set(\"points\", [p1, p11]);\r\n\t\thitLine.set(\"points\", [p1, p11]);\r\n\t}\r\n\r\n\t// need to override so that location would not be set\r\n\tprotected _setXLocation() {\r\n\r\n\t}\r\n\r\n\tprotected _handlePointerMoveReal() {\r\n\r\n\t}\r\n\r\n\tprotected _handlePointerClickReal(event: ISpritePointerEvent) {\r\n\t\tif (!this._isDragging) {\r\n\t\t\tthis._addPoints(event, this._index);\r\n\t\t\tthis._updateSegment(this._index);\r\n\t\t\tthis._index++;\r\n\t\t\tthis._isDrawing = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addPoints(event: ISpritePointerEvent, index: number): Line {\r\n\t\tlet line = super._addPoints(event, index);\r\n\t\tthis._updateExtentionLine(line);\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\t\tdiP2.set(\"valueX\", diP2.get(\"valueX\", 0) + 0.001);\r\n\t\tthis._isDrawing = false;\r\n\t\treturn line;\r\n\t}\r\n}"]}