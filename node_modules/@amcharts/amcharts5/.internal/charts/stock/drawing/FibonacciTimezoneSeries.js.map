{"version":3,"file":"FibonacciTimezoneSeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/FibonacciTimezoneSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { FibonacciSeries, IFibonacciSeriesSettings, IFibonacciSeriesPrivate, IFibonacciSeriesDataItem } from \"./FibonacciSeries\";\r\n\r\nexport interface IFibonacciTimezoneSeriesDataItem extends IFibonacciSeriesDataItem {\r\n\r\n}\r\n\r\nexport interface IFibonacciTimezoneSeriesSettings extends IFibonacciSeriesSettings {\r\n\t\r\n}\r\n\r\nexport interface IFibonacciTimezoneSeriesPrivate extends IFibonacciSeriesPrivate {\r\n\r\n}\r\n\r\n\r\nexport class FibonacciTimezoneSeries extends FibonacciSeries {\r\n\tpublic static className: string = \"FibonacciTimezoneSeries\";\r\n\tpublic static classNames: Array<string> = FibonacciSeries.classNames.concat([FibonacciTimezoneSeries.className]);\r\n\r\n\tdeclare public _settings: IFibonacciTimezoneSeriesSettings;\r\n\tdeclare public _privateSettings: IFibonacciTimezoneSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IFibonacciTimezoneSeriesDataItem;\r\n\r\n\tprotected _tag = \"fibonaccitimezone\";\r\n\r\n\tprotected _updateSegmentReal(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst valueY1 = diP1.get(\"valueY\", 0);\r\n\r\n\t\tdiP2.set(\"valueY\", valueY1)\r\n\t\tdiP2.set(\"valueYWorking\", valueY1)\r\n\r\n\t\tdiP1.setRaw(\"locationX\", 0)\r\n\t\tdiP2.setRaw(\"locationX\", 0)\r\n\t}\r\n\r\n\tprotected _setXLocation(dataItem: DataItem<this[\"_dataItemSettings\"]>, value: number) {\r\n\t\tthis._setXLocationReal(dataItem, value);\r\n\t}\r\n\r\n\tpublic _updateChildrenReal() {\r\n\t\tconst chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\r\n\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\tconst open1 = diP1[\"open\"];\r\n\t\t\t\t\tconst open2 = diP2[\"open\"];\r\n\r\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\t\tif (open1 && open2) {\r\n\t\t\t\t\t\tconst valueX1 = open1[\"valueX\"]\r\n\t\t\t\t\t\tconst valueX2 = open2[\"valueX\"]\r\n\t\t\t\t\t\tconst diff = valueX2 - valueX1;\r\n\r\n\t\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\t\tconst sequence = this.get(\"sequence\", []);\r\n\t\t\t\t\t\t\tconst labels = this._labels[i];\r\n\t\t\t\t\t\t\tconst fills = this._fills[i];\r\n\t\t\t\t\t\t\tconst strokes = this._strokes[i];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < sequence.length; i++) {\r\n\t\t\t\t\t\t\t\tconst value = sequence[i];\r\n\t\t\t\t\t\t\t\tconst label = labels[i];\r\n\t\t\t\t\t\t\t\tconst fill = fills[i];\r\n\t\t\t\t\t\t\t\tconst stroke = strokes[i];\r\n\r\n\t\t\t\t\t\t\t\tthis.mainContainer.children.moveValue(fill, 0);\r\n\r\n\t\t\t\t\t\t\t\tconst endValue = valueX1 + diff * value;\r\n\t\t\t\t\t\t\t\tconst x1 = p1.x;\r\n\t\t\t\t\t\t\t\tconst x2 = xAxis.get(\"renderer\").positionToCoordinate(xAxis.valueToPosition(endValue));\r\n\r\n\t\t\t\t\t\t\t\tconst y1 = 0;\r\n\t\t\t\t\t\t\t\tconst y2 = chart.plotContainer.height();\r\n\r\n\t\t\t\t\t\t\t\tfill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\t\t\t\t\tfill.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\t\tdisplay.moveTo(x1, y1);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x2, y1);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x2, y2);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x1, y2);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x1, y1);\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tstroke.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\t\tdisplay.moveTo(x2, y1);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x2, y2);\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tconst dataItem = label.dataItem;\r\n\t\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t\tdataItem.set(\"value\" as any, value);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlabel.setAll({ x: x2, y: y2 });\r\n\t\t\t\t\t\t\t\tlabel.text.markDirtyText();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"]}