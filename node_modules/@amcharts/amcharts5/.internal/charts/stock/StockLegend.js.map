{"version":3,"file":"StockLegend.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/stock/StockLegend.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\r\nimport type { StockChart } from \"./StockChart\";\r\nimport type { StockPanel } from \"./StockPanel\";\r\n\r\nimport { Legend, ILegendPrivate, ILegendSettings, ILegendEvents, ILegendDataItem } from \"../../core/render/Legend\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Indicator } from \"./indicators/Indicator\";\r\n\r\nimport * as $utils from \"../../core/util/Utils\";\r\n\r\nexport interface IStockLegendDataItem extends ILegendDataItem {\r\n\r\n\t/**\r\n\t * Legend item \"close\" [[Button]].\r\n\t */\r\n\tcloseButton: Button;\r\n\r\n\t/**\r\n\t * Legend item \"settings\" [[Button]].\r\n\t */\r\n\tsettingsButton: Button;\r\n\r\n\t/**\r\n\t * Target [[StockPanel]] legend item is attached to.\r\n\t */\r\n\tpanel: StockPanel;\r\n\r\n}\r\n\r\n\r\nexport interface IStockLegendSettings extends ILegendSettings {\r\n\r\n\t/**\r\n\t * A target [[StockChart]].\r\n\t */\r\n\tstockChart: StockChart;\r\n\r\n}\r\n\r\nexport interface IStockLegendPrivate extends ILegendPrivate {\r\n}\r\n\r\nexport interface IStockLegendEvents extends ILegendEvents {\r\n}\r\n\r\n/**\r\n * A legend, specifically designed for use in a [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/#Legend} for more info\r\n * @important\r\n */\r\nexport class StockLegend extends Legend {\r\n\r\n\tpublic static className: string = \"StockLegend\";\r\n\tpublic static classNames: Array<string> = Legend.classNames.concat([StockLegend.className]);\r\n\r\n\tdeclare public _settings: IStockLegendSettings;\r\n\tdeclare public _privateSettings: IStockLegendPrivate;\r\n\tdeclare public _events: IStockLegendEvents;\r\n\tdeclare public _dataItemSettings: IStockLegendDataItem;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"stocklegend\"]);\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeCloseButton(): Button {\r\n\t\tconst button = this.closeButtons.make();\r\n\t\tthis.closeButtons.push(button);\r\n\t\treturn button;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of \"close\" buttons in legend items.\r\n\t *\r\n\t * @default new ListTemplate<Button>()\r\n\t */\r\n\tpublic readonly closeButtons: ListTemplate<Button> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Button._new(this._root, {\r\n\t\t\tthemeTags: $utils.mergeTags(this.closeButtons.template.get(\"themeTags\", []), [\"control\", \"close\"]),\r\n\t\t\ticon: Graphics.new(this._root, {\r\n\t\t\t\tthemeTags: [\"icon\", \"button\"]\r\n\t\t\t})\r\n\t\t}, [this.closeButtons.template])\r\n\t);\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeSettingsButton(): Button {\r\n\t\tconst button = this.settingsButtons.make();\r\n\t\tthis.settingsButtons.push(button);\r\n\r\n\t\tbutton.events.on(\"click\", () => {\r\n\r\n\t\t\tconst dataItem = button.dataItem as DataItem<IStockLegendDataItem>;\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t\t\tif (stockChart) {\r\n\t\t\t\t\tconst indicator = button.getPrivate(\"customData\");\r\n\t\t\t\t\tif (indicator instanceof Indicator) {\r\n\t\t\t\t\t\tstockChart.getPrivate(\"settingsModal\").openIndicator(indicator);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstockChart.getPrivate(\"settingsModal\").openSeries(dataItem.dataContext as any);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn button;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of \"settings\" buttons in legend items.\r\n\t *\r\n\t * @default new ListTemplate<Button>()\r\n\t */\r\n\tpublic readonly settingsButtons: ListTemplate<Button> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Button._new(this._root, {\r\n\t\t\tthemeTags: $utils.mergeTags(this.settingsButtons.template.get(\"themeTags\", []), [\"control\", \"settings\"]),\r\n\t\t\ticon: Graphics.new(this._root, {\r\n\t\t\t\tthemeTags: [\"icon\", \"button\"]\r\n\t\t\t})\r\n\t\t}, [this.settingsButtons.template])\r\n\t);\r\n\r\n\r\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.processDataItem(dataItem);\r\n\r\n\t\tconst itemContainer = dataItem.get(\"itemContainer\");\r\n\r\n\t\tconst settingsButton = this.makeSettingsButton();\r\n\t\titemContainer.children.push(settingsButton);\r\n\t\tsettingsButton._setDataItem(dataItem);\r\n\t\tdataItem.set(\"settingsButton\", settingsButton);\r\n\r\n\t\tconst closeButton = this.makeCloseButton();\r\n\t\titemContainer.children.push(closeButton);\r\n\t\tcloseButton._setDataItem(dataItem);\r\n\t\tdataItem.set(\"closeButton\", closeButton);\r\n\t}\r\n}\r\n"]}