{"version":3,"file":"IconControl.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/toolbar/IconControl.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Percent } from \"../../../core/util/Percent\";\r\n\r\nimport { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IIcon {\r\n\tsvgPath: string;\r\n\tscale?: number;\r\n\tcenterX?: Percent;\r\n\tcenterY?: Percent;\r\n\tfillDisabled?: boolean;\r\n}\r\n\r\nexport interface IIconControlSettings extends IStockControlSettings {\r\n\ticons: IIcon[];\r\n}\r\n\r\nexport interface IIconControlPrivate extends IStockControlPrivate {\r\n\tlist?: DropdownList;\r\n}\r\n\r\nexport interface IIconControlEvents extends IStockControlEvents {\r\n\tselected: {\r\n\t\ticon: IIcon\r\n\t}\r\n}\r\n\r\n/**\r\n * Shows selection of icons to choose from for annotating [[StockChart]].\r\n *\r\n * This class is instantiated automatically, and should not be used standalone.\r\n */\r\nexport class IconControl extends StockControl {\r\n\tpublic static className: string = \"IconControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([IconControl.className]);\r\n\r\n\tdeclare public _settings: IIconControlSettings;\r\n\tdeclare public _privateSettings: IIconControlPrivate;\r\n\tdeclare public _events: IIconControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst list = DropdownList.new(this._root, {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\"),\r\n\t\t\tsearchable: false\r\n\t\t});\r\n\t\tthis.setPrivate(\"list\", list);\r\n\t\tlist.getPrivate(\"list\")!.className = \"am5stock-control-icons\";\r\n\r\n\t\tlist.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tlist.events.on(\"invoked\", (ev) => {\r\n\t\t\tconst item = <IIcon>JSON.parse(ev.item.id);\r\n\t\t\tlet icon: IIcon | undefined;\r\n\t\t\tconst icons = this.get(\"icons\");\r\n\t\t\t$array.each(icons, (listIcon) => {\r\n\t\t\t\tif (item.svgPath == listIcon.svgPath) {\r\n\t\t\t\t\ticon = listIcon;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (icon) {\r\n\t\t\t\tthis.setIcon(icon);\r\n\t\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\t\ttype: \"selected\",\r\n\t\t\t\t\ticon: icon,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => list.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._initIcons();\r\n\t}\r\n\r\n\tpublic setIcon(icon: IIcon): void {\r\n\t\tthis.getPrivate(\"icon\")!.innerHTML = \"\";\r\n\t\tthis.getPrivate(\"icon\")!.appendChild(this._getDrawingIcon(icon));\r\n\t\t//this.getPrivate(\"label\")!.style.display = \"none\";\r\n\t}\r\n\r\n\tprotected _initIcons(): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst icons = this.get(\"icons\");\r\n\t\tconst items: IDropdownListItem[] = [];\r\n\t\t$array.each(icons, (icon: IIcon) => {\r\n\t\t\titems.push({\r\n\t\t\t\tid: JSON.stringify(icon),\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\ticon: this._getDrawingIcon(icon)\r\n\t\t\t});\r\n\t\t})\r\n\t\tlist.set(\"items\", items);\r\n\t}\r\n\r\n\tpublic _getDrawingIcon(icon: IIcon): SVGElement {\r\n\t\treturn StockIcons._getSVG({ viewbox: \"0 0 50 50\", path: icon.svgPath});\r\n\t}\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\r\n\t\tif (this.isDirty(\"icons\")) {\r\n\t\t\tthis._initIcons();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\t}\r\n\r\n\r\n}\r\n"]}