import { __awaiter, __extends, __generator } from "tslib";
import { Dropdown } from "./Dropdown";
//import type { IDisposer } from "../../../core/util/Disposer";
import * as $array from "../../../core/util/Array";
import * as $utils from "../../../core/util/Utils";
/**
 * @todo revview
 */
var DropdownList = /** @class */ (function (_super) {
    __extends(DropdownList, _super);
    function DropdownList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // private _itemDisposers: Array<IDisposer> = [];
    Object.defineProperty(DropdownList.prototype, "_afterNew", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            _super.prototype._afterNew.call(this);
            this._root.addDisposer(this);
        }
    });
    Object.defineProperty(DropdownList.prototype, "_initElements", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            _super.prototype._initElements.call(this);
            // Create container
            var container = this.getPrivate("container");
            // Init search
            if (this.get("searchable")) {
                this._initSearch();
            }
            // Create list
            var list = document.createElement("ul");
            list.className = "am5stock-control-list";
            container.appendChild(list);
            this.setPrivate("list", list);
            this._initItems();
        }
    });
    Object.defineProperty(DropdownList.prototype, "_initItems", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function (items) {
            var _this = this;
            var list = this.getPrivate("list");
            list.innerHTML = "";
            if (!items) {
                items = this.get("items", []);
            }
            $array.each(items, function (item) {
                _this.addItem(item);
            });
        }
    });
    Object.defineProperty(DropdownList.prototype, "_initSearch", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            var _this = this;
            var searchBox = this.getPrivate("search");
            if (this.get("searchable")) {
                if (!searchBox) {
                    var container = this.getPrivate("container");
                    searchBox = document.createElement("div");
                    searchBox.className = "am5stock-list-search";
                    container.appendChild(searchBox);
                    this.setPrivate("search", searchBox);
                    var input_1 = document.createElement("input");
                    input_1.type = "text";
                    input_1.placeholder = this._root.language.translateAny("Search");
                    searchBox.appendChild(input_1);
                    this._disposers.push($utils.addEventListener(input_1, "input", function (_ev) {
                        _this._filterItems(input_1.value);
                    }));
                }
            }
            else if (searchBox) {
                searchBox.style.display = "none";
            }
        }
    });
    Object.defineProperty(DropdownList.prototype, "_beforeChanged", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            _super.prototype._beforeChanged.call(this);
            if (this.isDirty("items")) {
                this._initItems();
            }
            if (this.isDirty("searchable")) {
                this._initSearch();
            }
            if (this.isPrivateDirty("currentId")) {
                // @todo
            }
        }
    });
    Object.defineProperty(DropdownList.prototype, "_dispose", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            _super.prototype._dispose.call(this);
            // $array.each(this._itemDisposers, (x) => {
            // 	x.dispose();
            // });
        }
    });
    Object.defineProperty(DropdownList.prototype, "_filterItems", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function (search) {
            return __awaiter(this, void 0, void 0, function () {
                var searchCallback, maxItems, items, list, items;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            searchCallback = this.get("searchCallback");
                            if (!(searchCallback && search)) return [3 /*break*/, 2];
                            maxItems = this.get("maxSearchItems", 1000);
                            return [4 /*yield*/, searchCallback.call(this, search)];
                        case 1:
                            items = _a.sent();
                            if (maxItems && (items.length > maxItems)) {
                                items = items.slice(0, maxItems - 1);
                                items.push({
                                    id: "",
                                    className: "am5stock-list-info",
                                    label: this._root.language.translateAny("Seach results are limited to %1.", undefined, "" + maxItems)
                                });
                            }
                            this._initItems(items);
                            return [3 /*break*/, 3];
                        case 2:
                            list = this.getPrivate("list");
                            if (list) {
                                items = list.getElementsByTagName("li");
                                $array.each(items, function (item) {
                                    var regex = new RegExp(search || "", "i");
                                    if (!search || item.innerText.match(regex)) {
                                        item.style.display = "";
                                    }
                                    else {
                                        item.style.display = "none";
                                    }
                                });
                            }
                            _a.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        }
    });
    Object.defineProperty(DropdownList.prototype, "addItem", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function (info) {
            var _this = this;
            var list = this.getPrivate("list");
            var item = document.createElement("li");
            item.className = "am5stock-list-item";
            if (info.className) {
                item.className += " " + info.className;
            }
            if (info.icon) {
                item.appendChild(info.icon);
            }
            var inputId;
            ;
            if (info.form) {
                var input_2 = document.createElement("input");
                inputId = "am5stock-list-" + info.id;
                input_2.type = info.form;
                if (info.value) {
                    input_2.value = info.value;
                }
                if (info.form == "radio") {
                    input_2.name = info.id;
                    inputId += "-" + info.value;
                }
                if (info.checked) {
                    input_2.checked = true;
                }
                input_2.id = inputId;
                // this._disposers.push($utils.addEventListener(input, "change", (ev) => {
                // 	console.log("change")
                // 	ev.preventDefault();
                // 	this.events.dispatch("changed", {
                // 		type: "changed",
                // 		item: info,
                // 		value: input.checked,
                // 		checked: input.checked,
                // 		target: this
                // 	});
                // }));
                this._disposers.push($utils.addEventListener(item, "click", function (ev) {
                    //ev.preventDefault();
                    if (ev.target !== input_2) {
                        input_2.checked = !input_2.checked;
                    }
                    _this.events.dispatch("changed", {
                        type: "changed",
                        item: info,
                        value: input_2.checked,
                        checked: input_2.checked,
                        target: _this
                    });
                }));
                item.appendChild(input_2);
            }
            var label = document.createElement("label");
            label.innerHTML = info.label;
            if (info.label == "") {
                label.style.display = "none";
            }
            item.appendChild(label);
            if (info.subLabel) {
                var subLabel = document.createElement("label");
                subLabel.className = "am5stock-list-sub";
                subLabel.innerHTML = info.subLabel;
                item.appendChild(subLabel);
            }
            list.appendChild(item);
            // Add click event
            this._disposers.push($utils.addEventListener(item, "click", function (_ev) {
                _this.hide();
                _this.events.dispatch("invoked", {
                    type: "invoked",
                    item: info,
                    target: _this
                });
            }));
        }
    });
    Object.defineProperty(DropdownList.prototype, "hide", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            _super.prototype.hide.call(this);
            this._filterItems();
            var searchBox = this.getPrivate("search");
            if (searchBox) {
                var inputs = searchBox.getElementsByTagName("input");
                var isCustomSearch_1 = false;
                $array.each(inputs, function (input) {
                    if (input.value !== "") {
                        isCustomSearch_1 = true;
                        input.value = "";
                    }
                });
                if (this.get("searchCallback") && isCustomSearch_1) {
                    this._initItems();
                }
            }
        }
    });
    Object.defineProperty(DropdownList, "className", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: "DropdownList"
    });
    Object.defineProperty(DropdownList, "classNames", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: Dropdown.classNames.concat([DropdownList.className])
    });
    return DropdownList;
}(Dropdown));
export { DropdownList };
//# sourceMappingURL=DropdownList.js.map