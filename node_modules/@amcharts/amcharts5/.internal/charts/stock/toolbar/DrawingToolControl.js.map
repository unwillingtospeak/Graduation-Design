{"version":3,"file":"DrawingToolControl.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/toolbar/DrawingToolControl.ts"],"names":[],"mappings":"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","sourcesContent":["import { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport type DrawingTools = \"Average\" | \"Callout\" | \"Doodle\" | \"Ellipse\" | \"Fibonacci\" | \"Fibonacci Timezone\" | \"Horizontal Line\" | \"Horizontal Ray\" | \"Arrows &amp; Icons\" | \"Label\" | \"Line\" | \"Polyline\" | \"Quadrant Line\" | \"Rectangle\" | \"Regression\" | \"Trend Line\" | \"Vertical Line\";\r\n\r\nexport interface IDrawingToolControlSettings extends IStockControlSettings {\r\n\ttools: DrawingTools[];\r\n}\r\n\r\nexport interface IDrawingToolControlPrivate extends IStockControlPrivate {\r\n\tlist?: DropdownList;\r\n}\r\n\r\nexport interface IDrawingToolControlEvents extends IStockControlEvents {\r\n\tselected: {\r\n\t\ttool: DrawingTools\r\n\t}\r\n}\r\n\r\n/**\r\n * Control which allows selecting drawing tool.\r\n *\r\n * Should not be instantiated directly. Use [[DrawingControl]] instead.\r\n */\r\nexport class DrawingToolControl extends StockControl {\r\n\tpublic static className: string = \"DrawingToolControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([DrawingToolControl.className]);\r\n\r\n\tdeclare public _settings: IDrawingToolControlSettings;\r\n\tdeclare public _privateSettings: IDrawingToolControlPrivate;\r\n\tdeclare public _events: IDrawingToolControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst list = DropdownList.new(this._root, {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\")\r\n\t\t});\r\n\t\tthis.setPrivate(\"list\", list);\r\n\r\n\t\tlist.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tlist.events.on(\"invoked\", (ev) => {\r\n\t\t\tthis.setTool(<DrawingTools>ev.item.label);\r\n\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\ttype: \"selected\",\r\n\t\t\t\ttool: <DrawingTools>ev.item.id,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => list.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\r\n\t\tthis._initTools();\r\n\t}\r\n\r\n\tpublic setTool(tool: DrawingTools): void {\r\n\t\tthis.getPrivate(\"icon\")!.innerHTML = \"\";\r\n\t\tthis.getPrivate(\"icon\")!.appendChild(this._getToolIcon(tool));\r\n\t\t//this.getPrivate(\"label\")!.innerHTML = tool;\r\n\t\tthis._setLabel(tool);\r\n\t}\r\n\r\n\tprotected _initTools(): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst tools = this.get(\"tools\");\r\n\t\tconst items: IDropdownListItem[] = [];\r\n\t\t$array.each(tools, (tool: DrawingTools) => {\r\n\t\t\titems.push({\r\n\t\t\t\tid: tool,\r\n\t\t\t\tlabel: this._root.language.translateAny(tool),\r\n\t\t\t\ticon: this._getToolIcon(tool)\r\n\t\t\t});\r\n\t\t})\r\n\t\tlist.set(\"items\", items);\r\n\t}\r\n\r\n\tprotected _getToolIcon(tool: DrawingTools): SVGElement {\r\n\t\treturn StockIcons.getIcon(tool);\r\n\t}\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\r\n\t\tif (this.isDirty(\"tools\")) {\r\n\t\t\tthis._initTools();\r\n\t\t}\r\n\r\n\t\t// if (this.isDirty(\"name\")) {\r\n\t\t// \tthis.getPrivate(\"label\")!.innerHTML = this.get(\"name\", \"\");\r\n\t\t// }\r\n\r\n\t\t// todo icon\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\r\n\t\t// $array.each(this._itemDisposers, (x) => {\r\n\t\t// \tx.dispose();\r\n\t\t// });\r\n\t}\r\n\r\n\r\n}\r\n"]}