import { __extends } from "tslib";
import { StockControl } from "./StockControl";
import { StockIcons } from "./StockIcons";
/**
 * Reset control.
 *
 * Removes all drawings and indicators when clicked.
 *
 * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/reset-control/} for more info
 */
var ResetControl = /** @class */ (function (_super) {
    __extends(ResetControl, _super);
    function ResetControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ResetControl.prototype, "_afterNew", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            var _this = this;
            _super.prototype._afterNew.call(this);
            this.events.on("click", function () {
                var stockChart = _this.get("stockChart");
                stockChart.panels.each(function (panel) {
                    panel.drawings.clear();
                });
                stockChart.indicators.clear();
            });
        }
    });
    Object.defineProperty(ResetControl.prototype, "_getDefaultIcon", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            return StockIcons.getIcon("Reset");
        }
    });
    Object.defineProperty(ResetControl, "className", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: "ResetControl"
    });
    Object.defineProperty(ResetControl, "classNames", {
        enumerable: true,
        configurable: true,
        writable: true,
        value: StockControl.classNames.concat([ResetControl.className])
    });
    return ResetControl;
}(StockControl));
export { ResetControl };
//# sourceMappingURL=ResetControl.js.map