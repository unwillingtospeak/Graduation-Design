{"version":3,"file":"useHover.mjs","sources":["../../../../src/composables/useHover.ts"],"sourcesContent":["import { ref, watch, Ref } from 'vue'\n\nconst getEl = (el: any) => el.$el !== undefined ? el.$el : el\n\nexport function useHover (el?: Ref<HTMLElement | null | undefined>) {\n  const isHovered = ref(false)\n\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  if (el) {\n    watch(el, (n, o) => {\n      if (n) {\n        const newEl = getEl(n)\n        newEl.addEventListener('mouseenter', onMouseEnter)\n        newEl.addEventListener('mouseleave', onMouseLeave)\n      }\n      if (o) {\n        const oldEl = getEl(o)\n        oldEl.removeEventListener('mouseenter', onMouseEnter)\n        oldEl.removeEventListener('mouseleave', onMouseLeave)\n      }\n    })\n  }\n\n  return {\n    isHovered,\n    onMouseEnter,\n    onMouseLeave,\n  }\n}\n"],"names":["getEl","el","$el","useHover","isHovered","ref","onMouseEnter","value","onMouseLeave","watch","n","o","newEl","addEventListener","oldEl","removeEventListener"],"mappings":"qCAEA,MAAMA,MAASC,QAAuB,IAAXA,EAAGC,IAAoBD,EAAGC,IAAMD,EAEpD,SAAAE,SAAmBF,GAClB,MAAAG,EAAYC,GAAI,GAEhBC,aAAe,KAAQF,EAAUG,OAAQ,GACzCC,aAAe,KAAQJ,EAAUG,OAAQ,GAiBxC,OAfHN,GACIQ,EAAAR,GAAI,CAACS,EAAGC,KACZ,GAAID,EAAG,CACC,MAAAE,EAAQZ,MAAMU,GACdE,EAAAC,iBAAiB,aAAcP,cAC/BM,EAAAC,iBAAiB,aAAcL,cAEvC,GAAIG,EAAG,CACC,MAAAG,EAAQd,MAAMW,GACdG,EAAAC,oBAAoB,aAAcT,cAClCQ,EAAAC,oBAAoB,aAAcP,kBAKvC,CACLJ,UAAAA,EACAE,aAAAA,aACAE,aAAAA"}