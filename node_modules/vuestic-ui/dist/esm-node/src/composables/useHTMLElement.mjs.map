{"version":3,"file":"useHTMLElement.mjs","sources":["../../../../src/composables/useHTMLElement.ts"],"sourcesContent":["import { computed, getCurrentInstance, onBeforeUnmount, onMounted, onUpdated, isRef, Ref, shallowRef, DefineComponent } from 'vue'\n\nconst extractHTMLElement = (el: any): HTMLElement => el && '$el' in el ? el.$el : el\n\nexport const useTemplateRef = (key: string) => {\n  const vm = getCurrentInstance()!\n  const el = shallowRef<HTMLElement>()\n\n  const updateEl = () => {\n    el.value = vm.proxy?.$refs[key] as HTMLElement\n  }\n\n  onMounted(updateEl)\n  onUpdated(updateEl)\n  onBeforeUnmount(updateEl)\n\n  return el\n}\n\nexport const useHTMLElement = (key?: string | Ref<HTMLElement | DefineComponent | undefined>): Ref<HTMLElement> => {\n  if (isRef(key)) {\n    return computed({\n      get () { return extractHTMLElement(key.value) },\n      set (value) { key.value = value },\n    })\n  }\n\n  if (key) {\n    const el = useTemplateRef(key)\n    return computed({\n      get () { return extractHTMLElement(el.value) },\n      set (value) { el.value = value },\n    })\n  }\n\n  const el = shallowRef()\n  return computed({\n    set (value) {\n      el.value = extractHTMLElement(value)\n    },\n    get () { return el.value },\n  })\n}\n"],"names":["extractHTMLElement","el","$el","useHTMLElement","key","isRef","computed","get","value","set","el2","vm","getCurrentInstance","shallowRef","updateEl","_a","proxy","$refs","onMounted","onUpdated","onBeforeUnmount","useTemplateRef"],"mappings":"qIAEA,MAAMA,mBAAsBC,GAAyBA,GAAM,QAASA,EAAKA,EAAGC,IAAMD,EAiBrEE,eAAkBC,IACzB,GAAAC,EAAMD,GACR,OAAOE,EAAS,CACdC,IAAO,IAASP,mBAAmBI,EAAII,OACvCC,IAAKD,GAASJ,EAAII,MAAQA,KAI9B,GAAIJ,EAAK,CACD,MAAAM,EAxBoB,CAACN,IAC7B,MAAMO,EAAKC,IACLX,EAAKY,IAELC,SAAW,WACZb,EAAAO,MAAQ,OAAAO,EAAAJ,EAAGK,YAAH,EAAAD,EAAUE,MAAMb,IAOtB,OAJPc,EAAUJ,UACVK,EAAUL,UACVM,EAAgBN,UAETb,GAYMoB,CAAejB,GAC1B,OAAOE,EAAS,CACdC,IAAO,IAASP,mBAAmBU,EAAGF,OACtCC,IAAKD,GAASE,EAAGF,MAAQA,KAI7B,MAAMP,EAAKY,IACX,OAAOP,EAAS,CACdG,IAAKD,GACAP,EAAAO,MAAQR,mBAAmBQ,IAEhCD,IAAO,IAASN,EAAGO"}