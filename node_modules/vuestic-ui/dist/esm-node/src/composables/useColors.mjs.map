{"version":3,"file":"useColors.mjs","sources":["../../../../src/composables/useColors.ts"],"sourcesContent":["import { GlobalConfig, useGlobalConfigSafe } from '../services/global-config/global-config'\nimport {\n  getBoxShadowColor,\n  getHoverColor,\n  getFocusColor,\n  getGradientBackground,\n  isColor,\n  getTextColor,\n  shiftHSLAColor,\n  setHSLAColor,\n  isCSSVariable,\n} from '../services/color-config/color-functions'\n\nexport type CssColor = string\nexport type ColorConfig = { [colorName: string]: CssColor }\n\n/**\n * You can add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useColorProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning to make sure that component own props will be used instead in case of collision.\n */\nexport const useColorProps = {\n  color: {\n    type: String,\n    default: '',\n  },\n}\n\nexport const useColors = () => {\n  const globalConfig = useGlobalConfigSafe()\n\n  if (!globalConfig) {\n    throw new Error('useColors must be used in setup function or Vuestic GlobalConfigPlugin is not registered!')\n  }\n\n  const { setGlobalConfig, getGlobalConfig } = globalConfig\n\n  const setColors = (colors: ColorConfig): void => {\n    setGlobalConfig((config: GlobalConfig) => ({\n      ...config,\n      colors: { ...config.colors, ...colors },\n    }))\n  }\n\n  const getColors = (): ColorConfig => {\n    return getGlobalConfig().colors || {}\n  }\n\n  /**\n   * Returns color from config by name or return prop if color is a valid hex, hsl, hsla, rgb or rgba color.\n   * @param prop - should be color name or color in hex, hsl, hsla, rgb or rgba format.\n   * @param preferVariables - function should return (if possible) CSS variable instead of hex (hex is needed to set opacity).\n   * @param defaultColor - this color will be used if prop is invalid.\n   */\n  const getColor = (prop?: string, defaultColor?: string, preferVariables?: boolean): CssColor => {\n    if (!defaultColor) {\n      /**\n       * Most default color - fallback when nothing else is found.\n       */\n      defaultColor = getColors().primary\n    }\n\n    const colors = getColors()\n\n    if (!prop) {\n      prop = defaultColor\n    }\n\n    if (colors[prop]) {\n      return preferVariables ? `var(--va-${prop})` : colors[prop]\n    }\n\n    if (isColor(prop)) {\n      return prop\n    }\n\n    if (preferVariables && isCSSVariable(prop)) {\n      return prop\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`'${prop}' is not a proper color! Use HEX or default color themes\n      names (https://vuestic.dev/en/styles/colors#default-color-themes)`)\n    }\n\n    return defaultColor\n  }\n\n  const colorsToCSSVariable = (colors: { [colorName: string]: string | undefined }, prefix = 'va') => {\n    return Object\n      .keys(colors)\n      .filter((key) => colors[key] !== undefined)\n      .reduce((acc: Record<string, any>, colorName: string) => {\n        acc[`--${prefix}-${colorName}`] = getColor(colors[colorName], undefined, true)\n        return acc\n      }, {})\n  }\n\n  return {\n    setColors,\n    getColors,\n    getColor,\n    getBoxShadowColor,\n    getHoverColor,\n    getFocusColor,\n    getGradientBackground,\n    getTextColor,\n    shiftHSLAColor,\n    setHSLAColor,\n    colorsToCSSVariable,\n  }\n}\n"],"names":["useColorProps","color","type","String","default","useColors","globalConfig","useGlobalConfigSafe","Error","setGlobalConfig","getGlobalConfig","getColors","colors","getColor","prop","defaultColor","preferVariables","primary","isColor","isCSSVariable","setColors","config","__spreadProps","__spreadValues","getBoxShadowColor","getHoverColor","getFocusColor","getGradientBackground","getTextColor","shiftHSLAColor","setHSLAColor","colorsToCSSVariable","prefix","Object","keys","filter","key","reduce","acc","colorName"],"mappings":"0nBAsBO,MAAMA,EAAgB,CAC3BC,MAAO,CACLC,KAAMC,OACNC,QAAS,KAIAC,UAAY,KACvB,MAAMC,EAAeC,IAErB,IAAKD,EACG,MAAA,IAAIE,MAAM,6FAGZ,MAAAC,gBAAEA,kBAAiBC,GAAoBJ,EASvCK,UAAY,IACTD,IAAkBE,QAAU,GAS/BC,SAAW,CAACC,EAAeC,EAAuBC,KACjDD,IAIHA,EAAeJ,YAAYM,SAG7B,MAAML,EAASD,YAMf,OAJKG,IACIA,EAAAC,GAGLH,EAAOE,GACFE,EAAkB,YAAYF,KAAUF,EAAOE,GAGpDI,EAAQJ,IAIRE,GAAmBG,EAAcL,GAH5BA,EAYFC,GAaF,MAAA,CACLK,UA9DiBR,IACDH,GAACY,IAA0BC,SAAAC,eAAA,GACtCF,KADsC,CAEzCT,OAAQW,eAAKA,eAAA,GAAAF,EAAOT,QAAWA,0BA4DjCD,UAAAA,UACAE,SAAAA,SACAW,kBAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAC,sBAAAA,EACAC,aAAAA,EACAC,eAAAA,EACAC,aAAAA,EACAC,oBArB0B,CAACnB,EAAqDoB,EAAS,OAClFC,OACJC,KAAKtB,GACLuB,QAAQC,QAAwB,IAAhBxB,EAAOwB,KACvBC,QAAO,CAACC,EAA0BC,KACjCD,EAAI,KAAKN,KAAUO,KAAe1B,SAASD,EAAO2B,QAAY,GAAW,GAClED,IACN"}