{"version":3,"file":"useDebounce.mjs","sources":["../../../../src/composables/useDebounce.ts"],"sourcesContent":["import { isRef, Ref, unref, watch } from 'vue'\nimport debounce from 'lodash/debounce.js'\n\nexport const useDebounce = <T>(onUpdate: () => any, timeout: Ref<number> | number) => {\n  const createDebounced = () => {\n    return debounce(() => {\n      onUpdate()\n    }, unref(timeout))\n  }\n\n  let debounced = createDebounced()\n\n  if (isRef(timeout)) {\n    watch(timeout, () => { debounced = createDebounced() })\n  }\n\n  return {\n    // todo check if we need to create proxy here\n    debounced,\n  }\n}\n\n/** Used for debounced callbacks. Can be used to show cb near debounce call in code structure. */\nexport const useDebounceFn = (timeout: Ref<number> | number) => {\n  let callback: (() => void) | null = null\n  const createDebounced = () => {\n    return debounce(() => {\n      callback?.()\n      callback = null\n    }, unref(timeout))\n  }\n\n  let debounced = createDebounced()\n\n  if (isRef(timeout)) {\n    watch(timeout, () => { debounced = createDebounced() })\n  }\n\n  return {\n    // todo check if we need to create proxy here\n    debounced: (cb: (() => void)) => { callback = cb; debounced() },\n    cancel: () => debounced.cancel(),\n  }\n}\n"],"names":["useDebounceFn","timeout","callback","createDebounced","debounce","unref","debounced","isRef","watch","cb","cancel"],"mappings":"uFAuBa,MAAAA,cAAiBC,IAC5B,IAAIC,EAAgC,KACpC,MAAMC,gBAAkB,IACfC,GAAS,KACH,MAAAF,GAAAA,IACAA,EAAA,OACVG,EAAMJ,IAGX,IAAIK,EAAYH,kBAMT,OAJHI,EAAMN,IACRO,EAAMP,GAAS,KAAQK,EAAYH,qBAG9B,CAELG,UAAYG,IAAkCP,EAAAO,OAC9CC,OAAQ,IAAMJ,EAAUI"}