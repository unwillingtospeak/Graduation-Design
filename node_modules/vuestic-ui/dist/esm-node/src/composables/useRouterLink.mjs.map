{"version":3,"file":"useRouterLink.mjs","sources":["../../../../src/composables/useRouterLink.ts"],"sourcesContent":["import { computed, PropType, getCurrentInstance, ExtractPropTypes } from 'vue'\n\nexport const useRouterLinkProps = {\n  tag: { type: String, default: 'span' },\n  to: { type: [String, Object] as PropType<string | Record<string, any>>, default: '' },\n  replace: { type: Boolean, default: false },\n  append: { type: Boolean, default: false },\n  exact: { type: Boolean, default: false },\n  activeClass: { type: String, default: '' },\n  exactActiveClass: { type: String, default: '' },\n  href: { type: String, default: '' },\n  target: { type: String, default: '' },\n  disabled: { type: Boolean, default: false },\n}\n\nexport const useRouterLink = (props: ExtractPropTypes<typeof useRouterLinkProps>) => {\n  const globalProperties = computed(() => getCurrentInstance()?.appContext.config.globalProperties)\n  const isNuxt = computed(() => !!globalProperties.value?.$nuxt)\n  const vueRouter = computed(() => globalProperties.value?.$router)\n  const vueRoute = computed(() => globalProperties.value?.$route)\n\n  const tagComputed = computed(() => {\n    if (props.disabled) { return props.tag }\n\n    if (props.href && !props.to) { return 'a' }\n\n    if (props.to) { return isNuxt.value ? 'nuxt-link' : 'router-link' }\n\n    return props.tag\n  })\n\n  const isLinkTag = computed(() => ['a', 'router-link', 'nuxt-link'].includes(tagComputed.value))\n\n  const isActiveRouterLink = computed(() => {\n    if (!vueRouter.value || !props.to) { return false }\n\n    const to = vueRouter.value.resolve(props.to).href\n    const currentHref = vueRouter.value.currentRoute.value.path\n\n    return to.replace('#', '') === currentHref.replace('#', '')\n  })\n\n  const hrefComputed = computed(() => {\n    // to resolve href on server for SEO optimization\n    // https://github.com/nuxt/nuxt.js/issues/8204\n    // @ts-ignore\n    return props.href || (props.to ? vueRouter.value?.resolve(props.to, vueRoute.value).href : '')\n  })\n\n  return {\n    tagComputed,\n    isActiveRouterLink,\n    hrefComputed,\n    isLinkTag,\n  }\n}\n"],"names":["useRouterLinkProps","tag","type","String","default","to","Object","replace","Boolean","append","exact","activeClass","exactActiveClass","href","target","disabled","useRouterLink","props","globalProperties","computed","_a","getCurrentInstance","appContext","config","isNuxt","value","$nuxt","vueRouter","$router","vueRoute","$route","tagComputed","isLinkTag","includes","isActiveRouterLink","resolve","currentHref","currentRoute","path","hrefComputed"],"mappings":"uDAEO,MAAMA,EAAqB,CAChCC,IAAK,CAAEC,KAAMC,OAAQC,QAAS,QAC9BC,GAAI,CAAEH,KAAM,CAACC,OAAQG,QAAmDF,QAAS,IACjFG,QAAS,CAAEL,KAAMM,QAASJ,SAAS,GACnCK,OAAQ,CAAEP,KAAMM,QAASJ,SAAS,GAClCM,MAAO,CAAER,KAAMM,QAASJ,SAAS,GACjCO,YAAa,CAAET,KAAMC,OAAQC,QAAS,IACtCQ,iBAAkB,CAAEV,KAAMC,OAAQC,QAAS,IAC3CS,KAAM,CAAEX,KAAMC,OAAQC,QAAS,IAC/BU,OAAQ,CAAEZ,KAAMC,OAAQC,QAAS,IACjCW,SAAU,CAAEb,KAAMM,QAASJ,SAAS,IAGzBY,cAAiBC,IACtB,MAAAC,EAAmBC,GAAS,WAA4B,OAAtB,OAAsBC,EAAAC,UAAA,EAAAD,EAAAE,WAAWC,OAAOL,oBAC1EM,EAASL,GAAS,WAAO,SAAC,OAAiBC,EAAAF,EAAAO,YAAO,EAAAL,EAAAM,UAClDC,EAAYR,GAAS,WAAM,OAAA,OAAAC,EAAAF,EAAiBO,YAAO,EAAAL,EAAAQ,WACnDC,EAAWV,GAAS,WAAM,OAAA,OAAAC,EAAAF,EAAiBO,YAAO,EAAAL,EAAAU,UAElDC,EAAcZ,GAAS,IACvBF,EAAMF,SAAmBE,EAAMhB,IAE/BgB,EAAMJ,OAASI,EAAMZ,GAAa,IAElCY,EAAMZ,GAAamB,EAAOC,MAAQ,YAAc,cAE7CR,EAAMhB,MAGT+B,EAAYb,GAAS,IAAM,CAAC,IAAK,cAAe,aAAac,SAASF,EAAYN,SAElFS,EAAqBf,GAAS,KAClC,IAAKQ,EAAUF,QAAUR,EAAMZ,GAAa,OAAA,EAE5C,MAAMA,EAAKsB,EAAUF,MAAMU,QAAQlB,EAAMZ,IAAIQ,KACvCuB,EAAcT,EAAUF,MAAMY,aAAaZ,MAAMa,KAEhD,OAAAjC,EAAGE,QAAQ,IAAK,MAAQ6B,EAAY7B,QAAQ,IAAK,OAGpDgC,EAAepB,GAAS,WAI5B,OAAOF,EAAMJ,OAAeI,EAAAZ,GAAK,OAAUe,EAAAO,EAAAF,YAAO,EAAAL,EAAAe,QAAQlB,EAAMZ,GAAIwB,EAASJ,OAAOZ,KAAO,OAGtF,MAAA,CACLkB,YAAAA,EACAG,mBAAAA,EACAK,aAAAA,EACAP,UAAAA"}