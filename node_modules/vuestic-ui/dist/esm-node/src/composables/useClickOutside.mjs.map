{"version":3,"file":"useClickOutside.mjs","sources":["../../../../src/composables/useClickOutside.ts"],"sourcesContent":["import { Ref, unref } from 'vue'\nimport { useCaptureEvent } from './useCaptureEvent'\n\nconst checkIfElementChild = (parent: HTMLElement, child: HTMLElement | null | undefined): boolean => {\n  if (!child) { return false }\n  if (child.parentElement === parent) { return true }\n\n  return parent.contains(child)\n}\n\ntype MaybeRef<T> = T | Ref<T>\ntype MaybeArray<T> = T | T[]\n\nconst safeArray = <T>(a: MaybeArray<T>) => Array.isArray(a) ? a : [a]\n\nexport const useClickOutside = (elements: MaybeArray<MaybeRef<HTMLElement | undefined>>, cb: (el: HTMLElement) => void) => {\n  useCaptureEvent('click', (event: MouseEvent) => {\n    const clickTarget = event.target as HTMLElement\n\n    const isClickInside = safeArray(elements)\n      .some((element) => unref(element) && checkIfElementChild(unref(element) as HTMLElement, clickTarget))\n\n    if (!isClickInside) { cb(clickTarget) }\n  })\n}\n"],"names":["useClickOutside","elements","cb","useCaptureEvent","event","clickTarget","target","a","Array","isArray","some","element","unref","parent","child","parentElement","contains"],"mappings":"sEAGA,MAYaA,gBAAkB,CAACC,EAAyDC,KACvEC,EAAA,SAAUC,IACxB,MAAMC,EAAcD,EAAME,OAJZ,IAAIC,GAAAA,EAMcN,EANOO,MAAMC,QAAQF,GAAKA,EAAI,CAACA,IAO5DG,MAAMC,IAAYC,OAAAA,EAAMD,KAjBFE,EAiBkCD,EAAMD,MAjBnBG,EAiB4CT,KAfxFS,EAAMC,gBAAkBF,GAErBA,EAAOG,SAASF,KAJG,IAACD,EAAqBC,MAmBxBZ,EAAGG"}