import{computed as e,getCurrentInstance as t}from"vue";const a={tag:{type:String,default:"span"},to:{type:[String,Object],default:""},replace:{type:Boolean,default:!1},append:{type:Boolean,default:!1},exact:{type:Boolean,default:!1},activeClass:{type:String,default:""},exactActiveClass:{type:String,default:""},href:{type:String,default:""},target:{type:String,default:""},disabled:{type:Boolean,default:!1}},useRouterLink=a=>{const r=e((()=>{var e;return null==(e=t())?void 0:e.appContext.config.globalProperties})),l=e((()=>{var e;return!!(null==(e=r.value)?void 0:e.$nuxt)})),u=e((()=>{var e;return null==(e=r.value)?void 0:e.$router})),n=e((()=>{var e;return null==(e=r.value)?void 0:e.$route})),o=e((()=>a.disabled?a.tag:a.href&&!a.to?"a":a.to?l.value?"nuxt-link":"router-link":a.tag)),i=e((()=>["a","router-link","nuxt-link"].includes(o.value))),v=e((()=>{if(!u.value||!a.to)return!1;const e=u.value.resolve(a.to).href,t=u.value.currentRoute.value.path;return e.replace("#","")===t.replace("#","")})),p=e((()=>{var e;return a.href||(a.to?null==(e=u.value)?void 0:e.resolve(a.to,n.value).href:"")}));return{tagComputed:o,isActiveRouterLink:v,hrefComputed:p,isLinkTag:i}};export{useRouterLink as a,a as u};
//# sourceMappingURL=useRouterLink.mjs.map
