{"version":3,"file":"useDomRect.mjs","sources":["../../../../src/composables/useDomRect.ts"],"sourcesContent":["import { Ref, ref, watch } from 'vue'\nimport { useRequestAnimationFrame } from './useRequestAnimationFrame'\n\nconst keys = ['x', 'y', 'width', 'height', 'top', 'left', 'right', 'bottom']\nconst isDomRectEqual = (a: any, b: any) => {\n  for (let i = 0; i < keys.length; i++) {\n    if (a[keys[i]] !== b[keys[i]]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const useDomRect = (target: Ref<HTMLElement | undefined>) => {\n  const domRect = ref<DOMRect | null>(null)\n\n  let prev = {}\n  useRequestAnimationFrame(() => {\n    if (!target.value) { return }\n    const rect = target.value.getBoundingClientRect()\n    if (!isDomRectEqual(rect, prev)) {\n      domRect.value = rect\n    }\n    prev = rect\n  })\n\n  watch(target, (newVal) => {\n    if (newVal) {\n      domRect.value = newVal.getBoundingClientRect()\n    } else {\n      domRect.value = null\n    }\n  })\n\n  return {\n    domRect,\n  }\n}\n"],"names":["keys","useDomRect","target","domRect","ref","prev","useRequestAnimationFrame","value","rect","getBoundingClientRect","a","b","i","length","isDomRectEqual","watch","newVal"],"mappings":"wFAGA,MAAMA,EAAO,CAAC,IAAK,IAAK,QAAS,SAAU,MAAO,OAAQ,QAAS,UAUtDC,WAAcC,IACnB,MAAAC,EAAUC,EAAoB,MAEpC,IAAIC,EAAO,GAkBJ,OAjBPC,GAAyB,KACnB,IAACJ,EAAOK,MAAS,OACf,MAAAC,EAAON,EAAOK,MAAME,wBAfP,EAACC,EAAQC,KAC9B,IAAA,IAASC,EAAI,EAAGA,EAAIZ,EAAKa,OAAQD,IAC/B,GAAIF,EAAEV,EAAKY,MAAQD,EAAEX,EAAKY,IACjB,OAAA,EAGJ,OAAA,GAUAE,CAAeN,EAAMH,KACxBF,EAAQI,MAAQC,GAEXH,EAAAG,KAGHO,EAAAb,GAASc,IAEHb,EAAAI,MADNS,EACcA,EAAOP,wBAEP,QAIb,CACLN,QAAAA"}