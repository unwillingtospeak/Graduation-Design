{"version":3,"file":"useSize.mjs","sources":["../../../../src/composables/useSize.ts"],"sourcesContent":["import { computed, getCurrentInstance, PropType } from 'vue'\n\nimport { useGlobalConfig, SizeConfig } from '../services/global-config/global-config'\nimport type { VuesticComponentName } from '../vuestic-plugin/global-components'\n\nexport const sizesConfig: SizeConfig = {\n  defaultSize: 48,\n  sizes: {\n    small: 32,\n    medium: 48,\n    large: 64,\n  },\n}\n\nexport const fontSizesConfig: SizeConfig = {\n  defaultSize: 1,\n  sizes: {\n    small: 0.75,\n    medium: 1,\n    large: 1.25,\n  },\n}\n\ninterface SizeProps {\n  size: string | number;\n  sizesConfig: Record<string, any>;\n  fontSizesConfig: Record<string, any>;\n}\n\n/**\n * You could add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useSizeProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning, to make sure that Component own props will be used instead in case of collision\n */\nexport const useSizeProps = {\n  size: {\n    type: [String, Number],\n    default: '',\n    validator: (size: string | number) => {\n      return typeof size === 'string' || typeof size === 'number'\n    },\n  },\n\n  sizesConfig: {\n    type: Object as PropType<Record<string, any>>,\n    default: () => sizesConfig,\n  },\n\n  fontSizesConfig: {\n    type: Object as PropType<Record<string, any>>,\n    default: () => fontSizesConfig,\n  },\n}\n\nconst fontRegex = /(?<fontSize>\\d+)(?<extension>px|rem)/i\n\nconst convertToRem = (px: number) => px / 16 - 0.5\n\nexport const useSize = (\n  props: SizeProps,\n  componentName: string | undefined = getCurrentInstance()?.type.name,\n) => {\n  const { getGlobalConfig } = useGlobalConfig()\n\n  const sizesConfigGlobal = computed<SizeConfig>(() => {\n    return componentName\n      ? (getGlobalConfig().components as any)?.[componentName as VuesticComponentName]?.sizesConfig\n      : undefined\n  })\n\n  const sizeComputed = computed<string>(() => {\n    const { defaultSize, sizes } = props.sizesConfig\n    const defaultSizeGlobal = sizesConfigGlobal.value?.defaultSize\n\n    if (!props.size) { return `${defaultSizeGlobal || defaultSize}px` }\n\n    if (typeof props.size === 'string') {\n      const sizeFromGlobalConfig = sizesConfigGlobal.value?.sizes?.[props.size]\n      const sizeFromProps = sizes[props.size]\n\n      if (sizeFromGlobalConfig) { return `${sizeFromGlobalConfig}px` }\n      if (sizeFromProps) { return `${sizeFromProps}px` }\n\n      return props.size\n    }\n\n    return `${props.size}px`\n  })\n\n  const fontSizeInRem = computed<number>(() => {\n    const { defaultSize, sizes } = props.fontSizesConfig\n\n    if (!props.size) { return defaultSize }\n\n    if (typeof props.size === 'string') {\n      if (props.size in sizes) { return sizes[props.size] }\n\n      const fontSizeParsed = props.size.match(fontRegex)\n      if (!fontSizeParsed || !fontSizeParsed.groups) {\n        throw new Error('Size prop should be either valid string or number')\n      }\n\n      const { extension, fontSize } = fontSizeParsed.groups\n      return extension === 'rem' ? +fontSize : convertToRem(+fontSize)\n    }\n\n    return convertToRem(props.size)\n  })\n\n  const fontSizeComputed = computed<string>(() => `${fontSizeInRem.value}rem`)\n\n  return {\n    sizeComputed,\n    fontSizeComputed,\n    fontSizeInRem,\n  }\n}\n"],"names":["sizesConfig","defaultSize","sizes","small","medium","large","fontSizesConfig","useSizeProps","size","type","String","Number","default","validator","Object","fontRegex","convertToRem","px","useSize","props","componentName","_a","name","getGlobalConfig","useGlobalConfig","sizesConfigGlobal","computed","components","_a2","sizeComputed","defaultSizeGlobal","value","sizeFromGlobalConfig","_c","_b","sizeFromProps","fontSizeInRem","fontSizeParsed","match","groups","Error","extension","fontSize","fontSizeComputed"],"mappings":"uHAKO,MAAMA,EAA0B,CACrCC,YAAa,GACbC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,MAAO,KAIEC,EAA8B,CACzCL,YAAa,EACbC,MAAO,CACLC,MAAO,IACPC,OAAQ,EACRC,MAAO,OAgBEE,EAAe,CAC1BC,KAAM,CACJC,KAAM,CAACC,OAAQC,QACfC,QAAS,GACTC,UAAYL,GACa,iBAATA,GAAqC,iBAATA,GAI9CR,YAAa,CACXS,KAAMK,OACNF,QAAS,IAAMZ,GAGjBM,gBAAiB,CACfG,KAAMK,OACNF,QAAS,IAAMN,IAIbS,EAAY,wCAEZC,aAAgBC,GAAeA,EAAK,GAAK,GAElCC,QAAU,CACrBC,EACAC,EAAoC,IAAA,mBAAA,EAAAC,EAAsBZ,KAAKa,KAA3B,MAE9B,MAAAC,gBAAEA,GAAoBC,IAEtBC,EAAoBC,GAAqB,aAC7C,OAAON,EACF,SAAA,aAAkBO,iBAAqB,EAAAC,EAAAR,aAAwCpB,iBAChF,KAGA6B,EAAeH,GAAiB,eAC9B,MAAAzB,YAAEA,EAAaC,MAAAA,GAAUiB,EAAMnB,YAC/B8B,EAAoB,OAAkBF,EAAAH,EAAAM,YAAO,EAAAH,EAAA3B,YAE/C,IAACkB,EAAMX,KAAQ,MAAO,GAAGsB,GAAqB7B,MAE9C,GAAsB,iBAAfkB,EAAMX,KAAmB,CAClC,MAAMwB,EAAuB,OAAkBC,EAAlB,OAAkBC,EAAAT,EAAAM,YAAO,EAAAG,EAAAhC,gBAAQiB,EAAMX,MAC9D2B,EAAgBjC,EAAMiB,EAAMX,MAElC,OAAIwB,EAA+B,GAAGA,MAClCG,EAAwB,GAAGA,MAExBhB,EAAMX,KAGf,MAAO,GAAGW,EAAMX,YAGZ4B,EAAgBV,GAAiB,KAC/B,MAAAzB,YAAEA,EAAaC,MAAAA,GAAUiB,EAAMb,gBAEjC,IAACa,EAAMX,KAAe,OAAAP,EAEtB,GAAsB,iBAAfkB,EAAMX,KAAmB,CAC9B,GAAAW,EAAMX,QAAQN,EAAS,OAAOA,EAAMiB,EAAMX,MAE9C,MAAM6B,EAAiBlB,EAAMX,KAAK8B,MAAMvB,GACxC,IAAKsB,IAAmBA,EAAeE,OAC/B,MAAA,IAAIC,MAAM,qDAGZ,MAAAC,UAAEA,EAAWC,SAAAA,GAAaL,EAAeE,OAC/C,MAAqB,QAAdE,GAAuBC,EAAW1B,cAAc0B,GAGlD,OAAA1B,aAAaG,EAAMX,SAKrB,MAAA,CACLqB,aAAAA,EACAc,iBAJuBjB,GAAiB,IAAM,GAAGU,EAAcL,aAK/DK,cAAAA"}