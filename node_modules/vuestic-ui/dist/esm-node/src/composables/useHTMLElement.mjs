import{isRef as e,computed as t,shallowRef as r,getCurrentInstance as u,onMounted as l,onUpdated as n,onBeforeUnmount as v}from"vue";const extractHTMLElement=e=>e&&"$el"in e?e.$el:e,useHTMLElement=a=>{if(e(a))return t({get:()=>extractHTMLElement(a.value),set(e){a.value=e}});if(a){const e=(e=>{const t=u(),a=r(),updateEl=()=>{var r;a.value=null==(r=t.proxy)?void 0:r.$refs[e]};return l(updateEl),n(updateEl),v(updateEl),a})(a);return t({get:()=>extractHTMLElement(e.value),set(t){e.value=t}})}const o=r();return t({set(e){o.value=extractHTMLElement(e)},get:()=>o.value})};export{useHTMLElement as u};
//# sourceMappingURL=useHTMLElement.mjs.map
