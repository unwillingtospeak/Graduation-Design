{"version":3,"file":"useResizeObserver.mjs","sources":["../../../../src/composables/useResizeObserver.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, ref, Ref, unref, watch } from 'vue'\n\ntype MaybeRef<T> = T | Ref<T>\n\nexport const useResizeObserver = <T extends HTMLElement | undefined>(elementsList: MaybeRef<T>[], cb: () => void) => {\n  const resizeObserver = ref<ResizeObserver>()\n\n  const observeAll = (elementsList: MaybeRef<T>[]) => {\n    elementsList.forEach((element: MaybeRef<T>) => {\n      const unrefedElement = unref(element)\n\n      unrefedElement && resizeObserver.value?.observe(unrefedElement)\n    })\n  }\n\n  watch(elementsList, (newValue) => {\n    resizeObserver.value?.disconnect()\n    observeAll(newValue)\n  })\n\n  onMounted(() => {\n    resizeObserver.value = new ResizeObserver(cb)\n    observeAll(elementsList)\n  })\n\n  onBeforeUnmount(() => resizeObserver.value?.disconnect())\n\n  return resizeObserver\n}\n"],"names":["useResizeObserver","elementsList","cb","resizeObserver","ref","observeAll","elementsList2","forEach","element","unrefedElement","unref","_a","value","observe","watch","newValue","disconnect","onMounted","ResizeObserver","onBeforeUnmount"],"mappings":"oFAIa,MAAAA,kBAAoB,CAAoCC,EAA6BC,KAChG,MAAMC,EAAiBC,IAEjBC,WAAcC,IACLA,EAAAC,SAASC,UACd,MAAAC,EAAiBC,EAAMF,GAEXC,IAAA,OAAAE,EAAAR,EAAeS,QAAfD,EAAsBE,QAAQJ,QAgB7C,OAZDK,EAAAb,GAAec,UACnB,OAAAJ,EAAAR,EAAeS,QAAOD,EAAAK,aACtBX,WAAWU,MAGbE,GAAU,KACOd,EAAAS,MAAQ,IAAIM,eAAehB,GAC1CG,WAAWJ,MAGbkB,GAAgB,WAAM,OAAA,OAAAR,EAAAR,EAAeS,YAAO,EAAAD,EAAAK,gBAErCb"}