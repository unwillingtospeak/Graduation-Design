{"version":3,"file":"useEvent.mjs","sources":["../../../../src/composables/useEvent.ts"],"sourcesContent":["import { Ref, unref, watch } from 'vue'\nimport { useClientOnly } from './useClientOnly'\n\ntype MaybeRef<T> = Ref<T> | T\n\ntype UseEventEventName = keyof GlobalEventHandlersEventMap | string[]\ntype UseEventEvent<N extends UseEventEventName, D> = N extends keyof GlobalEventHandlersEventMap ? GlobalEventHandlersEventMap[N] : D\n\n/**\n * SSR safety listen to target event.\n * @param target by default window\n * @param event if string, listener will be fully typed. If array of string, you need to type event manually.\n *\n *\n * @example\n * ```ts\n * useEvent('resize': (e) => {})\n * useEvent(['mousedown', 'mouseup', 'mousemove'], (e) => {})\n * ```\n */\nexport const useEvent = <N extends UseEventEventName, E extends Event>(\n  event: N,\n  listener: (this: GlobalEventHandlers, event: UseEventEvent<N, E>) => any,\n  target?: MaybeRef<GlobalEventHandlers | undefined | null> | boolean,\n) => {\n  const source = target && typeof target !== 'boolean' ? target : useClientOnly(() => window)\n  const capture = typeof target === 'boolean' ? target : false\n\n  watch(source, (newValue, oldValue) => {\n    if (!Array.isArray(event)) {\n      unref(newValue)?.addEventListener(event, listener as any, capture)\n      unref(oldValue)?.removeEventListener(event, listener as any, capture)\n    } else {\n      event.forEach((e) => {\n        unref(newValue)?.addEventListener(e, listener as any, capture)\n        unref(oldValue)?.removeEventListener(e, listener as any, capture)\n      })\n    }\n  }, { immediate: true })\n}\n"],"names":["useEvent","event","listener","target","source","useClientOnly","window","capture","watch","newValue","oldValue","Array","isArray","forEach","e","_a2","unref","addEventListener","_b2","removeEventListener","_a","_b","immediate"],"mappings":"+EAoBO,MAAMA,SAAW,CACtBC,EACAC,EACAC,KAEM,MAAAC,EAASD,GAA4B,kBAAXA,EAAuBA,EAASE,GAAc,IAAMC,SAC9EC,EAA4B,kBAAXJ,GAAuBA,EAExCK,EAAAJ,GAAQ,CAACK,EAAUC,aAClBC,MAAMC,QAAQX,GAIXA,EAAAY,SAASC,YACb,OAAAC,EAAAC,EAAMP,KAAWM,EAAAE,iBAAiBH,EAAGZ,EAAiBK,GACtD,OAAAW,EAAAF,EAAMN,KAAWQ,EAAAC,oBAAoBL,EAAGZ,EAAiBK,OAL3D,OAAAa,EAAAJ,EAAMP,KAAWW,EAAAH,iBAAiBhB,EAAOC,EAAiBK,GAC1D,OAAAc,EAAAL,EAAMN,KAAWW,EAAAF,oBAAoBlB,EAAOC,EAAiBK,MAO9D,CAAEe,WAAW"}