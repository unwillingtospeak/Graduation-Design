{"version":3,"file":"model-value-parser.mjs","sources":["../../../../../../src/components/va-date-input/hooks/model-value-parser.ts"],"sourcesContent":["import isNil from 'lodash/isNil'\n\nimport { DatePickerModelValue } from '../../va-date-picker/types'\nimport { defaultParseDateFunction } from './input-text-parser'\nimport { DateInputRange, DateInputModelValue, DateInputDate } from '../types'\n\nexport const isRange = (date: DateInputModelValue): date is DateInputRange<DateInputDate> => {\n  return typeof date === 'object' && ('start' in date || 'end' in date)\n}\n\nexport const parseSingleDate = (date: DateInputDate) => typeof date === 'string'\n  ? defaultParseDateFunction(date)\n  : new Date(date)\n\nexport const parseModelValue = (date: DateInputModelValue): DatePickerModelValue => {\n  if (Array.isArray(date)) {\n    return date.map(parseSingleDate)\n  }\n\n  if (isRange(date)) {\n    return {\n      start: isNil(date.start) ? date.start : parseSingleDate(date.start),\n      end: isNil(date.end) ? date.end : parseSingleDate(date.end),\n    }\n  }\n\n  return parseSingleDate(date!)\n}\n"],"names":["isRange","date","parseSingleDate","defaultParseDateFunction","Date","parseModelValue","Array","isArray","map","start","isNil","end"],"mappings":"uFAMa,MAAAA,QAAWC,GACC,iBAATA,IAAsB,UAAWA,GAAQ,QAASA,GAGrDC,gBAAmBD,GAAwC,iBAATA,EAC3DE,EAAyBF,GACzB,IAAIG,KAAKH,GAEAI,gBAAmBJ,GAC1BK,MAAMC,QAAQN,GACTA,EAAKO,IAAIN,iBAGdF,QAAQC,GACH,CACLQ,MAAOC,EAAMT,EAAKQ,OAASR,EAAKQ,MAAQP,gBAAgBD,EAAKQ,OAC7DE,IAAKD,EAAMT,EAAKU,KAAOV,EAAKU,IAAMT,gBAAgBD,EAAKU,MAIpDT,gBAAgBD"}