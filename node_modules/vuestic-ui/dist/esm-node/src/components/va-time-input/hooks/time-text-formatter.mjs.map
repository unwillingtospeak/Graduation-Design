{"version":3,"file":"time-text-formatter.mjs","sources":["../../../../../../src/components/va-time-input/hooks/time-text-formatter.ts"],"sourcesContent":["export const useTimeFormatter = (props: {\n  ampm?: boolean,\n  view?: 'hours' | 'minutes' | 'seconds'\n  format?: (date?: Date) => string\n}) => {\n  const formatDate = (date?: Date) => {\n    if (!date) { return '' }\n\n    if (props.ampm) {\n      return date.toLocaleTimeString('en-US')\n    }\n\n    return date.toLocaleTimeString('en-GB')\n  }\n\n  const sliceTime = (time: string, start: number, end: number) => time.split(':').slice(start, end).join(':')\n\n  const formatWithView = (date?: Date) => {\n    if (props.view === 'seconds') {\n      return formatDate(date)\n    }\n\n    const [time, period] = formatDate(date).split(' ')\n\n    if (props.view === 'minutes') {\n      if (!period) { return sliceTime(time, 0, 2) }\n\n      return [sliceTime(time, 0, 2), period].join(' ')\n    }\n\n    if (props.view === 'hours') {\n      if (!period) { return sliceTime(time, 0, 1) }\n\n      return [sliceTime(time, 0, 1), period].join(' ')\n    }\n\n    return ''\n  }\n\n  return {\n    format: (date?: Date) => props.format ? props.format(date) : formatWithView(date),\n  }\n}\n"],"names":["useTimeFormatter","props","formatDate","date","ampm","toLocaleTimeString","sliceTime","time","start","end","split","slice","join","format","view","period","formatWithView"],"mappings":"AAAa,MAAAA,iBAAoBC,IAKzB,MAAAC,WAAcC,GACbA,EAEDF,EAAMG,KACDD,EAAKE,mBAAmB,SAG1BF,EAAKE,mBAAmB,SANX,GAShBC,UAAY,CAACC,EAAcC,EAAeC,IAAgBF,EAAKG,MAAM,KAAKC,MAAMH,EAAOC,GAAKG,KAAK,KAwBhG,MAAA,CACLC,OAASV,GAAgBF,EAAMY,OAASZ,EAAMY,OAAOV,GAvBhC,CAACA,IAClB,GAAe,YAAfF,EAAMa,KACR,OAAOZ,WAAWC,GAGpB,MAAOI,EAAMQ,GAAUb,WAAWC,GAAMO,MAAM,KAE1C,MAAe,YAAfT,EAAMa,KACHC,EAEE,CAACT,UAAUC,EAAM,EAAG,GAAIQ,GAAQH,KAAK,KAFtBN,UAAUC,EAAM,EAAG,GAKxB,UAAfN,EAAMa,KACHC,EAEE,CAACT,UAAUC,EAAM,EAAG,GAAIQ,GAAQH,KAAK,KAFtBN,UAAUC,EAAM,EAAG,GAKpC,IAIsDS,CAAeb"}