{"version":3,"file":"VaTimeInput.mjs","sources":["../../../../../src/components/va-time-input/VaTimeInput.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-model=\"doShowDropdown\"\n    class=\"va-time-input\"\n    placement=\"bottom-start\"\n    inner-anchor-selector=\".va-input-wrapper__field\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    :offset=\"[2, 0]\"\n    :close-on-content-click=\"false\"\n    :disabled=\"$props.disabled\"\n    keyboard-navigation\n  >\n    <template #anchor>\n      <va-input-wrapper\n        class=\"va-time-input__anchor\"\n        v-bind=\"computedInputWrapperProps\"\n      >\n        <template #default>\n          <input\n            ref=\"input\"\n            class=\"va-time-input__input\"\n            v-bind=\"inputAttributesComputed\"\n            v-on=\"computedInputListeners\"\n            @change=\"onInputTextChanged\"\n          />\n        </template>\n\n        <template\n          v-for=\"name in filteredSlots\"\n          :key=\"name\"\n          v-slot:[name]=\"slotScope\"\n        >\n          <slot\n            :name=\"name\"\n            v-bind=\"{ ...slotScope, toggleDropdown, showDropdown, hideDropdown, isOpen: isOpenSync, focus }\"\n          />\n        </template>\n\n        <template #prependInner=\"slotScope\">\n          <slot\n            name=\"prependInner\"\n            v-bind=\"{ ...slotScope, toggleDropdown, showDropdown, hideDropdown, isOpen: isOpenSync, focus }\"\n          />\n          <va-icon\n            v-if=\"$props.leftIcon\"\n            role=\"button\"\n            aria-label=\"toggle dropdown\"\n            aria-hidden=\"false\"\n            :tabindex=\"iconTabindexComputed\"\n            v-bind=\"iconProps\"\n          />\n        </template>\n\n        <template #icon>\n          <va-icon\n            v-if=\"canBeClearedComputed\"\n            role=\"button\"\n            aria-label=\"reset time\"\n            aria-hidden=\"false\"\n            :tabindex=\"iconTabindexComputed\"\n            v-bind=\"clearIconProps\"\n            @click.stop=\"reset\"\n            @keydown.enter.stop=\"reset\"\n            @keydown.space.stop=\"reset\"\n          />\n          <va-icon\n            v-else-if=\"!$props.leftIcon\"\n            role=\"button\"\n            aria-label=\"toggle dropdown\"\n            aria-hidden=\"false\"\n            :tabindex=\"iconTabindexComputed\"\n            v-bind=\"iconProps\"\n          />\n        </template>\n      </va-input-wrapper>\n    </template>\n\n    <va-dropdown-content\n      no-padding\n      @keydown.esc.prevent=\"hideDropdown\"\n      @keypress.enter.prevent=\"hideDropdown\"\n    >\n      <va-time-picker\n        ref=\"timePicker\"\n        v-bind=\"timePickerProps\"\n        v-model=\"modelValueSync\"\n      />\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, shallowRef, nextTick } from 'vue'\nimport omit from 'lodash/omit'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport {\n  useSyncProp,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useClearable, useClearableEmits, useClearableProps,\n  useFocus, useFocusEmits,\n} from '../../composables'\nimport { useTimeParser } from './hooks/time-text-parser'\nimport { useTimeFormatter } from './hooks/time-text-formatter'\n\nimport VaTimePicker from '../va-time-picker/VaTimePicker.vue'\nimport { VaInputWrapper } from '../va-input'\nimport VaIcon from '../va-icon/VaIcon.vue'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper, ['focused', 'maxLength', 'counterValue'])\n\nexport default defineComponent({\n  name: 'VaTimeInput',\n\n  components: { VaDropdown, VaDropdownContent, VaTimePicker, VaIcon, VaInputWrapper },\n\n  emits: [\n    ...useFocusEmits,\n    ...useValidationEmits,\n    ...useClearableEmits,\n    'update:modelValue',\n    'update:isOpen',\n  ],\n\n  props: {\n    ...useClearableProps,\n    ...VaInputWrapperProps,\n    ...extractComponentProps(VaTimePicker),\n    ...useValidationProps as ValidationProps<Date>,\n\n    isOpen: { type: Boolean, default: undefined },\n    modelValue: { type: Date, default: undefined },\n    clearValue: { type: Date, default: undefined },\n    format: { type: Function as PropType<(date?: Date) => string> },\n    parse: { type: Function as PropType<(input: string) => Date> },\n    manualInput: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n    icon: { type: String, default: 'schedule' },\n  },\n\n  inheritAttrs: false,\n\n  setup (props, { emit, slots, attrs }) {\n    const input = shallowRef<HTMLInputElement>()\n    const timePicker = shallowRef<typeof VaTimePicker>()\n\n    const [isOpenSync] = useSyncProp('isOpen', props, emit, false)\n    const [modelValueSync] = useSyncProp('modelValue', props, emit)\n\n    const { parse, isValid } = useTimeParser(props)\n    const { format } = useTimeFormatter(props)\n\n    const valueText = computed<string>(() => format(modelValueSync.value || props.clearValue))\n\n    const doShowDropdown = computed({\n      get () {\n        if (props.disabled || props.readonly) { return false }\n\n        return isOpenSync.value\n      },\n      set (v: boolean) {\n        isOpenSync.value = v\n\n        if (v) {\n          nextTick(() => timePicker.value?.focus())\n        } else {\n          nextTick(() => input.value?.focus())\n        }\n      },\n    })\n\n    const { isFocused, focus, blur, onFocus: focusListener, onBlur: blurListener } = useFocus(input)\n\n    const onInputTextChanged = (e: Event) => {\n      const val = (e.target as HTMLInputElement)?.value\n      if (!val) {\n        return reset()\n      }\n\n      const v = parse(val)\n\n      if (isValid.value && v) {\n        modelValueSync.value = v\n      } else {\n        modelValueSync.value = undefined\n        isValid.value = true\n      }\n    }\n\n    // --- not used yet ---\n    // const changePeriod = (isPM: boolean) => {\n    //   if (!modelValueSync.value) { return }\n\n    //   const halfDayPeriod = 12\n    //   const h = modelValueSync.value.getHours()\n\n    //   if (isPM && h <= halfDayPeriod) {\n    //     modelValueSync.value = new Date(modelValueSync.value.setHours(h + halfDayPeriod))\n    //   } else if (!isPM && h >= halfDayPeriod) {\n    //     modelValueSync.value = new Date(modelValueSync.value.setHours(h - halfDayPeriod))\n    //   }\n    // }\n\n    // const changePeriodToPm = () => changePeriod(true)\n    // const changePeriodToAm = () => changePeriod(false)\n\n    const reset = (): void => {\n      emit('update:modelValue', props.clearValue)\n      emit('clear')\n    }\n\n    const { computedError, computedErrorMessages, listeners, validationAriaAttributes } = useValidation(props, emit, reset, focus)\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueText)\n\n    const canBeClearedComputed = computed(() => (\n      canBeCleared.value && valueText.value !== format(props.clearValue)\n    ))\n\n    const iconProps = computed(() => ({\n      name: props.icon,\n      color: props.color,\n      size: 'small',\n    }))\n\n    const computedInputWrapperProps = computed(() => ({\n      ...filterComponentProps(props, VaInputWrapperProps).value,\n      focused: isFocused.value,\n      error: computedError.value,\n      errorMessages: computedErrorMessages.value,\n      readonly: props.readonly || !props.manualInput,\n    }))\n\n    const computedInputListeners = computed(() => ({\n      focus: () => {\n        if (props.disabled) { return }\n\n        focusListener()\n\n        if (props.readonly) { return }\n        onFocus()\n        listeners.onFocus()\n      },\n      blur: () => {\n        if (props.disabled) { return }\n\n        blurListener()\n\n        if (props.readonly) { return }\n        onBlur()\n        listeners.onBlur()\n      },\n    }))\n\n    const filteredSlots = computed(() => {\n      const slotsWithIcons = [\n        props.leftIcon && 'prependInner',\n        (!props.leftIcon || props.clearable) && 'icon',\n      ]\n      return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n    })\n\n    const hideDropdown = () => {\n      doShowDropdown.value = false\n    }\n\n    const showDropdown = (event?: KeyboardEvent, cancel?: boolean, prevent?: boolean) => {\n      doShowDropdown.value = true\n    }\n\n    const focusTimePicker = (): void => {\n      nextTick(() => timePicker.value?.focus())\n    }\n\n    const focusInputOrPicker = () => {\n      isOpenSync.value ? focusTimePicker() : focus()\n    }\n\n    const checkProhibitedDropdownOpening = (e?: KeyboardEvent) => {\n      if (isOpenSync.value) { return false }\n      if (props.disabled || props.readonly) { return true }\n      return props.manualInput && e?.code !== 'Space'\n    }\n\n    const toggleDropdown = (event: Event | KeyboardEvent) => {\n      if (checkProhibitedDropdownOpening(event instanceof KeyboardEvent ? event : undefined)) { return }\n\n      doShowDropdown.value = !doShowDropdown.value\n    }\n\n    const iconTabindexComputed = computed(() => props.disabled || props.readonly ? -1 : 0)\n    const inputAttributesComputed = computed(() => ({\n      readonly: props.readonly || !props.manualInput,\n      tabindex: props.disabled ? -1 : 0,\n      value: valueText.value,\n      ariaLabel: props.label || 'selected date',\n      ariaRequired: props.requiredMark,\n      ariaDisabled: props.disabled,\n      ariaReadOnly: props.readonly,\n      ...validationAriaAttributes.value,\n      ...omit(attrs, ['class', 'style']),\n    }))\n\n    return {\n      input,\n      timePicker,\n\n      timePickerProps: filterComponentProps(props, extractComponentProps(VaTimePicker)),\n      computedInputWrapperProps,\n      computedInputListeners,\n      isOpenSync,\n      doShowDropdown,\n      modelValueSync,\n      valueText,\n      onInputTextChanged,\n      canBeClearedComputed,\n      iconProps,\n      clearIconProps,\n      filteredSlots,\n      inputAttributesComputed,\n      iconTabindexComputed,\n\n      hideDropdown,\n      showDropdown,\n      toggleDropdown,\n\n      reset,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-time-input {\n  min-width: var(--va-time-input-min-width);\n\n  &__anchor {\n    flex: 1;\n  }\n}\n\n</style>\n"],"names":["VaInputWrapperProps","extractComponentProps","VaInputWrapper","defineComponent","name","components","VaDropdown","VaDropdownContent","VaTimePicker","VaIcon","emits","useFocusEmits","useValidationEmits","useClearableEmits","props","__spreadProps","__spreadValues","useClearableProps","useValidationProps","isOpen","type","Boolean","default","modelValue","Date","clearValue","format","Function","parse","manualInput","leftIcon","icon","String","inheritAttrs","setup","emit","slots","attrs","input","shallowRef","timePicker","isOpenSync","useSyncProp","modelValueSync","isValid","useTimeParser","useTimeFormatter","valueText","computed","value","doShowDropdown","get","disabled","readonly","set","v","nextTick","_a","focus","isFocused","blur","onFocus","focusListener","onBlur","blurListener","useFocus","reset","computedError","computedErrorMessages","listeners","validationAriaAttributes","useValidation","canBeCleared","clearIconProps","useClearable","canBeClearedComputed","iconProps","color","size","computedInputWrapperProps","filterComponentProps","focused","error","errorMessages","computedInputListeners","filteredSlots","slotsWithIcons","clearable","Object","keys","filter","includes","slot","iconTabindexComputed","inputAttributesComputed","tabindex","ariaLabel","label","ariaRequired","requiredMark","ariaDisabled","ariaReadOnly","omit","timePickerProps","onInputTextChanged","e","val","target","hideDropdown","showDropdown","event","cancel","prevent","toggleDropdown","KeyboardEvent","code","_createBlock","_component_va_dropdown","_ctx","_cache","$event","class","_normalizeClass","$attrs","placement","style","_normalizeStyle","offset","$props","anchor","_withCtx","_createVNode","_component_va_input_wrapper","_mergeProps","_createSlots","_createElementVNode","ref","_toHandlers","onChange","args","prependInner","slotScope","_renderSlot","$slots","_normalizeProps","_guardReactiveProps","_component_va_icon","key","role","_createCommentVNode","_openBlock","onClick","_withModifiers","onKeydown","_withKeys","_renderList","fn","_component_va_dropdown_content","onKeypress","_component_va_time_picker"],"mappings":"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"}