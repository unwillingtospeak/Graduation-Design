{"version":3,"file":"useTimePicker.mjs","sources":["../../../../../../src/components/va-time-picker/hooks/useTimePicker.ts"],"sourcesContent":["import { computed, ref, Ref, toRefs, watch } from 'vue'\nimport { TimePickerProps, ModelValueRef } from '../types'\n\n// Use safeModelValue if we need to update model value\nconst safeModelValue = (m: ModelValueRef) => m.value ? m.value : new Date(new Date().setHours(0, 0, 0, 0))\n\nconst createNumbersArray = (length: number) => Array.from(Array(length).keys())\n\n/**\n * Convert 00:00 -> 12:00 am, 00:01 -> 01:00 am.\n * So we need to changed 12 and 0 between two formats\n */\nconst from24to12 = (h: number) => (h === 0 ? 12 : h) - Number(h > 12) * 12\nconst from12to24 = (h: number, isAM = false) => (h === 12 ? 0 : h) + Number(isAM) * 12\n\nconst createHoursColumn = (props: TimePickerProps, modelValue: ModelValueRef, isPM: Ref<boolean>) => {\n  const computedSize = computed(() => props.ampm ? 12 : 24)\n\n  const items = computed(() => {\n    let array = createNumbersArray(computedSize.value)\n\n    if (props.hoursFilter) {\n      array = array.filter((i) => props.hoursFilter!(props.ampm ? i + 12 * Number(isPM.value) : i))\n    }\n\n    return array.map((n) => {\n      return props.ampm ? from24to12(n) : n\n    })\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      if (props.ampm) {\n        const h = from24to12(modelValue.value.getHours() - 12 * Number(isPM.value))\n        return items.value.findIndex((i) => i === h)\n      }\n\n      const h = modelValue.value.getHours()\n\n      return items.value.findIndex((i) => i === h)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const hours = props.ampm ? from12to24(items.value[newIndex], isPM.value) : items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setHours(hours))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createMinutesColumn = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60)\n\n    if (!props.minutesFilter) { return array }\n\n    return array.filter(props.minutesFilter)\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      const m = modelValue.value.getMinutes()\n\n      return items.value.findIndex((i) => i === m)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const v = items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setMinutes(v))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createSecondsColumn = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const items = computed(() => {\n    const array = createNumbersArray(60)\n\n    if (!props.secondsFilter) { return array }\n\n    return array.filter(props.secondsFilter)\n  })\n\n  const activeItem = computed({\n    get: () => {\n      if (!modelValue.value) { return -1 }\n\n      const s = modelValue.value.getSeconds()\n\n      return items.value.findIndex((i) => i === s)\n    },\n    set: (newIndex) => {\n      if (props.readonly) { return }\n\n      const v = items.value[newIndex]\n\n      modelValue.value = new Date(safeModelValue(modelValue).setSeconds(v))\n    },\n  })\n\n  return computed(() => ({\n    items: items.value,\n    activeItem: activeItem,\n  }))\n}\n\nconst createPeriodColumn = (props: TimePickerProps, modelValue: ModelValueRef, isPM: Ref<boolean>) => {\n  return computed(() => ({\n    items: ['AM', 'PM'],\n    activeItem: computed({\n      get: () => {\n        if (!modelValue.value) { return -1 }\n        return Number(isPM.value)\n      },\n      set: (val) => {\n        isPM.value = Boolean(val)\n        const h = safeModelValue(modelValue).getHours()\n        let h24 = isPM.value ? h + 12 : h\n\n        if (isPM.value && h <= 12) { h24 = h + 12 }\n        if (!isPM.value && h >= 12) { h24 = h - 12 }\n\n        // If there is no hoursFilter - it must be valid, otherwise validate hours\n        const isValidFilteredHour = !props.hoursFilter || props.hoursFilter(h24)\n\n        if (props.periodUpdatesModelValue && isValidFilteredHour) {\n          modelValue.value = new Date(safeModelValue(modelValue).setHours(h24))\n        }\n      },\n    }),\n  }))\n}\n\nexport const useTimePicker = (props: TimePickerProps, modelValue: ModelValueRef) => {\n  const { view } = toRefs(props)\n\n  const isPM = ref(false)\n  watch(modelValue, () => { isPM.value = safeModelValue(modelValue).getHours() >= 12 }, { immediate: true })\n\n  const hoursColumn = createHoursColumn(props, modelValue, isPM)\n  const minutesColumn = createMinutesColumn(props, modelValue)\n  const secondsColumn = createSecondsColumn(props, modelValue)\n  const periodColumn = createPeriodColumn(props, modelValue, isPM)\n\n  const columns = computed(() => {\n    const array = []\n\n    if (view.value === 'hours') {\n      array.push(hoursColumn.value)\n    } else if (view.value === 'minutes') {\n      array.push(hoursColumn.value, minutesColumn.value)\n    } else if (view.value === 'seconds') {\n      array.push(hoursColumn.value, minutesColumn.value, secondsColumn.value)\n    }\n    if (props.ampm && !props.hidePeriodSwitch) {\n      array.push(periodColumn.value)\n    }\n\n    return array\n  })\n\n  return {\n    columns,\n    isPM,\n  }\n}\n"],"names":["safeModelValue","m","value","Date","setHours","createNumbersArray","length","Array","from","keys","from24to12","h","Number","createHoursColumn","props","modelValue","isPM","computedSize","computed","ampm","items","array","hoursFilter","filter","i","map","n","activeItem","get","h2","getHours","findIndex","set","newIndex","readonly","hours","isAM","from12to24","useTimePicker","view","toRefs","ref","watch","immediate","hoursColumn","minutesColumn","minutesFilter","getMinutes","v","setMinutes","createMinutesColumn","secondsColumn","secondsFilter","s","getSeconds","setSeconds","createSecondsColumn","periodColumn","val","Boolean","h24","isValidFilteredHour","periodUpdatesModelValue","createPeriodColumn","columns","push","hidePeriodSwitch"],"mappings":"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"}