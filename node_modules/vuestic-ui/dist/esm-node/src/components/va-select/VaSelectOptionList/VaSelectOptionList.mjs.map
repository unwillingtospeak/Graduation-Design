{"version":3,"file":"VaSelectOptionList.mjs","sources":["../../../../../../src/components/va-select/VaSelectOptionList/VaSelectOptionList.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-select-option-list\"\n    :tabindex=\"tabindex\"\n    @keydown.up.stop.prevent=\"hoverPreviousOption\"\n    @keydown.left.stop.prevent=\"hoverPreviousOption\"\n    @keydown.down.stop.prevent=\"hoverNextOption\"\n    @keydown.right.stop.prevent=\"hoverNextOption\"\n    @scroll.passive=\"onScroll\"\n  >\n    <template\n      v-for=\"(options, groupName) in optionGroups\"\n      :key=\"groupName\"\n    >\n      <span\n        v-if=\"groupName !== '_noGroup'\"\n        class=\"va-select-option-list__group-name\"\n      >\n        {{ groupName }}\n      </span>\n      <div\n        v-for=\"option in options\"\n        :key=\"$props.getTrackBy(option)\"\n        :ref=\"setItemRef(option)\"\n        role=\"option\"\n        :aria-selected=\"!!$props.getSelectedState(option)\"\n        :class=\"getOptionClass(option)\"\n        :style=\"getOptionStyle(option)\"\n        @click=\"selectOption(option)\"\n        @mouseover=\"updateHoveredOption(option)\"\n      >\n        <va-icon\n          v-if=\"getOptionIcon(option)\"\n          size=\"small\"\n          class=\"va-select-option-list__option--icon\"\n          :name=\"getOptionIcon(option)\"\n        />\n        <span>{{ getText(option) }}</span>\n        <va-icon\n          v-show=\"$props.getSelectedState(option)\"\n          class=\"va-select-option-list__option--selected-icon\"\n          size=\"small\"\n          name=\"done\"\n          :color=\"getColor($props.color)\"\n        />\n      </div>\n    </template>\n    <div\n      v-if=\"!filteredOptions.length\"\n      class=\"va-select-option-list no-options\"\n    >\n      {{ noOptionsText }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, watch, ref, computed, ComponentPublicInstance, shallowRef } from 'vue'\n\nimport { scrollToElement } from '../../../utils/scroll-to-element'\nimport { useColors, useColorProps, SelectableOption } from '../../../composables'\n\nimport { VaIcon } from '../../va-icon'\n\nexport default defineComponent({\n  name: 'VaSelectOptionList',\n  components: { VaIcon },\n  emits: [\n    'select-option',\n    'update:hoveredOption',\n    'no-previous-option-to-hover',\n    'scroll-bottom',\n  ],\n  props: {\n    ...useColorProps,\n    options: { type: Array as PropType<SelectableOption[]>, default: () => [] },\n    noOptionsText: { type: String, default: 'Items not found' },\n    getSelectedState: { type: Function as PropType<(option: SelectableOption) => boolean>, required: true },\n    getText: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    getTrackBy: { type: Function as PropType<(option: SelectableOption) => number>, required: true },\n    getGroupBy: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    multiple: { type: Boolean, default: false },\n    search: { type: String, default: '' },\n    tabindex: { type: Number, default: 0 },\n    hoveredOption: {\n      type: [String, Number, Object] as PropType<SelectableOption | null>,\n      default: null,\n    },\n  },\n  setup (props, { emit }) {\n    const { getColor, getHoverColor } = useColors()\n\n    const rootElement = shallowRef<HTMLElement>()\n    const itemRefs = ref<Record<number, HTMLElement>>({})\n\n    const onScroll = (event: UIEvent) => {\n      const target = event.target as Element\n      if (!target) { return }\n\n      if (target.scrollTop + target.clientHeight === target.scrollHeight) {\n        emit('scroll-bottom')\n      }\n    }\n\n    const beforeUpdate = () => { itemRefs.value = {} }\n\n    const setItemRef = (option: SelectableOption) => (el: Element | null | ComponentPublicInstance) => {\n      if (el) {\n        itemRefs.value[props.getTrackBy(option)] = el as HTMLElement\n      }\n    }\n\n    const hoveredOptionComputed = computed({\n      get: () => props.hoveredOption || null,\n      set: (value: SelectableOption | null) => emit('update:hoveredOption', value),\n    })\n\n    const filteredOptions = computed(() => {\n      if (!props.search) {\n        return props.options\n      }\n\n      return props.options.filter((option: SelectableOption) => {\n        const optionText = props.getText(option).toString().toUpperCase()\n        const search = props.search.toUpperCase()\n        return optionText.includes(search)\n      })\n    })\n\n    const optionGroups = computed(() => filteredOptions.value.reduce((groups: Record<string, SelectableOption[]>, option) => {\n      if (typeof option !== 'object' || !option.group) {\n        groups._noGroup.push(option)\n      } else {\n        const groupBy = props.getGroupBy(option)\n\n        if (!groups[groupBy]) { groups[groupBy] = [] }\n\n        groups[groupBy].push(option)\n      }\n\n      return groups\n    }, { _noGroup: [] }))\n\n    const selectOption = (option: SelectableOption) => emit('select-option', option)\n\n    const getOptionIcon = (option: SelectableOption) => typeof option === 'object' ? (option.icon as string) : undefined\n\n    const getOptionClass = (option: SelectableOption) => ({\n      'va-select-option-list__option': true,\n      'va-select-option-list__option--selected': props.getSelectedState(option),\n    })\n\n    const getOptionStyle = (option: SelectableOption) => ({\n      color: props.getSelectedState(option) ? getColor(props.color) : 'inherit',\n      backgroundColor: isHovered(option) ? getHoverColor(getColor(props.color)) : 'transparent',\n    })\n\n    const isHovered = (option: SelectableOption) => {\n      if (!hoveredOptionComputed.value) { return false }\n      if (typeof option === 'string') { return option === hoveredOptionComputed.value }\n      if (!props.getTrackBy) { return false }\n\n      return props.getTrackBy(hoveredOptionComputed.value) === props.getTrackBy(option)\n    }\n\n    const updateHoveredOption = (option?: SelectableOption) => { hoveredOptionComputed.value = option || null }\n\n    const hoveredOptionIndex = computed(() => filteredOptions.value.findIndex((option) => {\n      return !!hoveredOptionComputed.value && props.getTrackBy(option) === props.getTrackBy(hoveredOptionComputed.value)\n    }))\n\n    const hoverPreviousOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover last option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value.at(-1))\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value - 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value - 1]\n        } else {\n          emit('no-previous-option-to-hover')\n        }\n      }\n    }\n\n    const hoverNextOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover first option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value[0])\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value + 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value + 1]\n        }\n      }\n    }\n\n    const hoverFirstOption = () => {\n      if (filteredOptions.value.length > 0) {\n        updateHoveredOption(filteredOptions.value[0])\n      }\n    }\n\n    const focus = () => {\n      // Prevent scroll since element in dropdown and it cause scrolling to page end.\n      rootElement.value?.focus({ preventScroll: true })\n    }\n\n    const scrollToOption = (option: SelectableOption) => {\n      if (!option) { return }\n\n      const element = itemRefs.value[props.getTrackBy(option)]\n\n      if (element) {\n        scrollToElement(element)\n      }\n    }\n\n    watch(() => props.hoveredOption, (newOption: SelectableOption | null) => newOption && scrollToOption(newOption))\n\n    const publicMethods = {\n      hoverPreviousOption,\n      hoverNextOption,\n      hoverFirstOption,\n      focus,\n      scrollToOption,\n    }\n\n    return {\n      rootElement,\n\n      getColor,\n      filteredOptions,\n      optionGroups,\n      onScroll,\n      beforeUpdate,\n      setItemRef,\n      selectOption,\n      getOptionIcon,\n      getOptionClass,\n      getOptionStyle,\n      updateHoveredOption,\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-select-option-list {\n  display: var(--va-select-option-list-display);\n  flex-direction: var(--va-select-option-list-flex-direction);\n  width: var(--va-select-option-list-width);\n  list-style: var(--va-select-option-list-list-style);\n  max-height: var(--va-select-option-list-max-height);\n  font-family: var(--va-font-family);\n  overflow: auto;\n\n  @include va-scroll();\n\n  &__group-name {\n    padding: var(--va-select-option-list-group-name-padding);\n    font-size: var(--va-select-option-list-group-name-font-size);\n    color: var(--va-select-option-list-group-name-color);\n    font-weight: var(--va-select-option-list-group-name-font-weight);\n    text-transform: uppercase;\n  }\n\n  &__option {\n    cursor: var(--va-select-option-list-option-cursor);\n    display: var(--va-select-option-list-option-display);\n    align-items: var(--va-select-option-list-option-align-items);\n    padding: var(--va-select-option-list-option-padding);\n    min-height: var(--va-select-option-list-option-min-height);\n    word-break: var(--va-select-option-list-option-word-break);\n\n    &--icon {\n      margin-right: var(--va-select-option-list-icon-margin-right);\n    }\n\n    &--selected-icon {\n      margin-left: var(--va-select-option-list-selected-icon-margin-left);\n      font-size: var(--va-select-option-list-selected-icon-font-size);\n    }\n  }\n\n  &.no-options {\n    padding: 0.5rem;\n  }\n}\n</style>\n"],"names":["_sfc_main","defineComponent","name","components","VaIcon","emits","props","useColorProps","options","type","Array","default","noOptionsText","String","getSelectedState","Function","required","getText","getTrackBy","getGroupBy","multiple","Boolean","search","tabindex","Number","hoveredOption","Object","setup","emit","getColor","getHoverColor","useColors","rootElement","shallowRef","itemRefs","ref","hoveredOptionComputed","computed","get","set","value","filteredOptions","filter","option","optionText","toString","toUpperCase","includes","optionGroups","reduce","groups","group","groupBy","push","_noGroup","isHovered","updateHoveredOption","hoveredOptionIndex","findIndex","scrollToOption","element","scrollToElement","watch","newOption","publicMethods","hoverPreviousOption","length","at","hoverNextOption","hoverFirstOption","focus","_a","preventScroll","__spreadValues","onScroll","event","target","scrollTop","clientHeight","scrollHeight","beforeUpdate","setItemRef","el","selectOption","getOptionIcon","icon","getOptionClass","getOptionStyle","color","backgroundColor","class","_createElementBlock","_ctx","onKeydown","_cache","_withKeys","_withModifiers","args","onScrollPassive","_openBlock","_Fragment","_renderList","groupName","openBlock","_hoisted_2","_toDisplayString","_createCommentVNode","key","$props","ref_for","role","_normalizeClass","style","_normalizeStyle","onClick","$event","onMouseover","_createBlock","_component_va_icon","size","_createElementVNode","_withDirectives","_createVNode","_vShow","_hoisted_4"],"mappings":"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"}