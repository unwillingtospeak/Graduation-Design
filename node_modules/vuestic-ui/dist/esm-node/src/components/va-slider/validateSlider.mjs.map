{"version":3,"file":"validateSlider.mjs","sources":["../../../../../src/components/va-slider/validateSlider.ts"],"sourcesContent":["import { warn } from '../../services/utils'\n\nexport const validateSlider = (value: number | number[], step: number, min: number, max: number, range: boolean) => {\n  if ((Array.isArray(value) && !range) || (!Array.isArray(value) && range)) {\n    warn(`The type \"${Array.isArray(value) ? 'array' : typeof value}\" of prop \"model-value\" does not match prop \"range = ${range}\".`)\n  }\n\n  if (max < min) {\n    warn('The maximum value can not be less than the minimum value.')\n  }\n\n  if (min > max) {\n    warn('The minimum value can not be greater than the maximum value.')\n  }\n\n  if ((max - min) % step !== 0) {\n    warn('Step is illegal. Slider is nondivisible.')\n  }\n\n  const inRange = (v: number) => {\n    if (v < min) {\n      warn(`The value of the slider is ${v}, the minimum value is ${min}, the value of this slider can not be less than the minimum value`)\n    } else if (v > max) {\n      warn(`The value of the slider is ${v}, the maximum value is ${max}, the value of this slider can not be greater than the maximum value`)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    value.map(inRange)\n  } else {\n    inRange(value)\n  }\n\n  return true\n}\n"],"names":["validateSlider","value","step","min","max","range","inRange","v","Array","isArray","map"],"mappings":"AAEO,MAAMA,eAAiB,CAACC,EAA0BC,EAAcC,EAAaC,EAAaC,KAiBzF,MAAAC,QAAWC,MAcV,OANHC,MAAMC,QAAQR,IAChBA,EAAMS,IAAIJ,UAKL"}