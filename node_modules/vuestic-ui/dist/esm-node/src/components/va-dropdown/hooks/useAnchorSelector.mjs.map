{"version":3,"file":"useAnchorSelector.mjs","sources":["../../../../../../src/components/va-dropdown/hooks/useAnchorSelector.ts"],"sourcesContent":["import { computed, ref, watch } from 'vue'\nimport { useDocument } from './../../../composables'\n\nexport const useAnchorSelector = (\n  props: {\n    anchorSelector: string | undefined,\n    innerAnchorSelector: string | undefined,\n  },\n) => {\n  const anchorRef = ref<HTMLElement>()\n  const document = useDocument()\n\n  const computedAnchorRef = computed<HTMLElement | undefined>({\n    set (v: HTMLElement | undefined) {\n      anchorRef.value = v\n    },\n    get () {\n      if (props.anchorSelector) {\n        return document.value?.querySelector<HTMLElement>(props.anchorSelector) ?? anchorRef.value\n      } else if (props.innerAnchorSelector && anchorRef.value) {\n        return anchorRef.value?.querySelector<HTMLElement>(props.innerAnchorSelector) ?? anchorRef.value\n      }\n      return anchorRef.value\n    },\n  })\n\n  return {\n    anchorRef: computedAnchorRef,\n  }\n}\n"],"names":["useAnchorSelector","props","anchorRef","ref","document","useDocument","computed","set","v","value","get","anchorSelector","_a","querySelector","innerAnchorSelector","_c"],"mappings":"qMAGa,MAAAA,kBACXC,IAKA,MAAMC,EAAYC,IACZC,EAAWC,IAgBV,MAAA,CACLH,UAfwBI,EAAkC,CAC1DC,IAAKC,GACHN,EAAUO,MAAQD,GAEpBE,kBACE,OAAIT,EAAMU,eACD,SAAA,WAASF,YAAT,EAAAG,EAAgBC,cAA2BZ,EAAMU,mBAAmBT,EAAUO,MAC5ER,EAAMa,qBAAuBZ,EAAUO,OACzC,SAAA,WAAUA,YAAV,EAAAM,EAAiBF,cAA2BZ,EAAMa,wBAEpDZ,EAAUO"}