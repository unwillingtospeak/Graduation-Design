{"version":3,"file":"VaIcon.mjs","sources":["../../../../../src/components/va-icon/VaIcon.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    class=\"va-icon\"\n    aria-hidden=\"true\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    v-bind=\"computedAttrs\"\n    notranslate\n  >\n    <slot>\n      <template v-if=\"iconConfig.content\">\n        {{ iconConfig.content }}\n      </template>\n    </slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\nimport omit from 'lodash/omit.js'\n\nimport { useIcons } from '../../services/icon-config/icon-config'\nimport { useColors, useSize, useSizeProps } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaIcon',\n  props: {\n    ...useSizeProps,\n    name: { type: String, default: '' },\n    tag: { type: String },\n    component: { type: Object as PropType<any> },\n    color: { type: String },\n    rotation: { type: [String, Number] },\n    spin: { type: [String, Boolean] },\n    flip: {\n      type: String as PropType<'off' | 'horizontal' | 'vertical' | 'both'>,\n      default: 'off',\n      validator: (value: string) => ['off', 'horizontal', 'vertical', 'both'].includes(value),\n    },\n  },\n  setup (props, { attrs }) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n    const { getIcon } = useIcons(props)\n\n    const iconConfig = computed(() => getIcon(props.name))\n\n    const computedTag = computed(() => props.component || props.tag || iconConfig.value.component || iconConfig.value.tag || 'i')\n\n    const computedAttrs = computed(() => ({ ...iconConfig.value.attrs, ...omit(attrs, ['class']) }))\n\n    const getSpinClass = (spin?: string | boolean) => {\n      if (spin === undefined || spin === false) { return }\n      return spin === 'counter-clockwise' ? 'va-icon--spin-reverse' : 'va-icon--spin'\n    }\n\n    const computedClass = computed(() => [\n      iconConfig.value.class,\n      getSpinClass(props.spin ?? iconConfig.value.spin),\n    ])\n\n    const transformStyle = computed(() => {\n      const rotation = props.rotation ? `rotate(${props.rotation}deg)` : ''\n\n      const flipY = (props.flip === 'vertical' || props.flip === 'both') ? -1 : 1\n      const flipX = (props.flip === 'horizontal' || props.flip === 'both') ? -1 : 1\n      const scale = props.flip === 'off' ? '' : `scale(${flipY}, ${flipX})`\n\n      return `${scale} ${rotation}`.trim()\n    })\n\n    const computedStyle = computed(() => ({\n      transform: transformStyle.value,\n      cursor: attrs.onClick ? 'pointer' : null,\n      color: props.color ? getColor(props.color, undefined, true) : iconConfig.value.color,\n      fontSize: sizeComputed.value,\n      height: sizeComputed.value,\n      lineHeight: sizeComputed.value,\n    }))\n\n    return {\n      iconConfig,\n      computedTag,\n      computedAttrs,\n      computedClass,\n      computedStyle,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n@import '../../styles/resources';\n\n.va-icon {\n  vertical-align: var(--va-icon-vertical-align);\n  user-select: var(--va-icon-user-select);\n\n  &[tabindex]:not([tabindex^=\"-\"]) {\n    &:focus {\n      @include focus-outline;\n    }\n  }\n\n  &#{&} {\n    // need 2 classes to make it work\n    font-style: normal;\n  }\n\n  &--spin {\n    animation: va-icon--spin-animation 1500ms linear infinite;\n\n    &-reverse {\n      animation: va-icon--spin-animation 1500ms linear infinite;\n      animation-direction: reverse;\n    }\n  }\n\n  @keyframes va-icon--spin-animation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  svg {\n    fill: currentColor;\n    height: 100%;\n  }\n}\n</style>\n"],"names":["defineComponent","name","props","useSizeProps","type","String","default","tag","component","Object","color","rotation","Number","spin","Boolean","flip","validator","value","includes","setup","attrs","getColor","useColors","sizeComputed","useSize","getIcon","useIcons","iconConfig","computed","computedTag","computedAttrs","__spreadValues","omit","getSpinClass","computedClass","class","_a","transformStyle","flipY","flipX","trim","computedStyle","transform","cursor","onClick","fontSize","height","lineHeight","_createBlock","_resolveDynamicComponent","_ctx","_mergeProps","style","notranslate","_withCtx","_renderSlot","content","_createElementBlock","_Fragment","key","_createTextVNode","_toDisplayString","_createCommentVNode"],"mappings":"qhCAyBkBA,EAAa,CAC7BC,KAAM,SACNC,2BACKC,KADE,CAELF,KAAM,CAAEG,KAAMC,OAAQC,QAAS,IAC/BC,IAAK,CAAEH,KAAMC,QACbG,UAAW,CAAEJ,KAAMK,QACnBC,MAAO,CAAEN,KAAMC,QACfM,SAAU,CAAEP,KAAM,CAACC,OAAQO,SAC3BC,KAAM,CAAET,KAAM,CAACC,OAAQS,UACvBC,KAAM,CACJX,KAAMC,OACNC,QAAS,MACTU,UAAYC,GAAkB,CAAC,MAAO,aAAc,WAAY,QAAQC,SAASD,gBAGrFE,MAAOjB,GAAOkB,MAAEA,IACR,MAAAC,SAAEA,GAAaC,KACfC,aAAEA,GAAiBC,EAAQtB,IAC3BuB,QAAEA,GAAYC,IAEdC,EAAaC,GAAS,IAAMH,EAAQvB,EAAMD,QAE1C4B,EAAcD,GAAS,IAAM1B,EAAMM,WAAaN,EAAMK,KAAOoB,EAAWV,MAAMT,WAAamB,EAAWV,MAAMV,KAAO,MAEnHuB,EAAgBF,GAAS,IAAOG,eAAAA,eAAA,GAAKJ,EAAWV,MAAMG,OAAUY,EAAKZ,EAAO,CAAC,aAE7Ea,aAAgBpB,IAChB,QAAS,IAATA,IAA+B,IAATA,EACnB,MAAS,sBAATA,EAA+B,wBAA0B,iBAG5DqB,EAAgBN,GAAS,WAAM,MAAA,CACnCD,EAAWV,MAAMkB,MACjBF,aAAa,OAAMG,EAAAlC,EAAAW,MAAQuB,EAAAT,EAAWV,MAAMJ,UAGxCwB,EAAiBT,GAAS,KAC9B,MAAMjB,EAAWT,EAAMS,SAAW,UAAUT,EAAMS,eAAiB,GAE7D2B,EAAwB,aAAfpC,EAAMa,MAAsC,SAAfb,EAAMa,MAAwB,EAAA,EACpEwB,EAAwB,eAAfrC,EAAMa,MAAwC,SAAfb,EAAMa,MAAwB,EAAA,EAGrE,MAAA,GAFsB,QAAfb,EAAMa,KAAiB,GAAK,SAASuB,MAAUC,QAE1C5B,IAAW6B,UAG1BC,EAAgBb,GAAS,KAAO,CACpCc,UAAWL,EAAepB,MAC1B0B,OAAQvB,EAAMwB,QAAU,UAAY,KACpClC,MAAOR,EAAMQ,MAAQW,EAASnB,EAAMQ,WAAO,GAAW,GAAQiB,EAAWV,MAAMP,MAC/EmC,SAAUtB,EAAaN,MACvB6B,OAAQvB,EAAaN,MACrB8B,WAAYxB,EAAaN,UAGpB,MAAA,CACLU,WAAAA,EACAE,YAAAA,EACAC,cAAAA,EACAI,cAAAA,EACAO,cAAAA,8DArFJO,EAcYC,EAbLC,EAAWrB,aADlBsB,EAcY,CAZVhB,MAAK,CAAC,UAEEe,EAAahB,eADrB,cAAY,OAEXkB,MAAOF,EAAAT,eACAS,EAAApB,cAAa,CACrBuB,YAAW,KAAA,CAAA/C,QAAAgD,GAEX,IAIO,CAJPC,EAIOL,uBAJP,IAIO,CAHWA,EAAAvB,WAAW6B,aAA3BC,EAEWC,EAAA,CAAAC,IAAA,GAAA,CAAAC,EAAAC,EADNX,aAAWM,SAAO,IAAA,KAAAM,EAAA,IAAA"}