{"version":3,"file":"useCleave.mjs","sources":["../../../../../../src/components/va-input/hooks/useCleave.ts"],"sourcesContent":["import { computed, onBeforeUnmount, onMounted, PropType, ref, Ref, watch } from 'vue'\nimport Cleave from 'cleave.js'\nimport { CleaveOptions } from 'cleave.js/options'\n\nconst DEFAULT_MASK_TOKENS: Record<string, Record<string, unknown>> = {\n  creditCard: {\n    creditCard: true,\n  },\n  date: {\n    date: true,\n    datePattern: ['d', 'm', 'Y'],\n  },\n  time: {\n    time: true,\n    timePattern: ['h', 'm'],\n    timeFormat: '24',\n  },\n  numeral: {\n    numeral: true,\n    numeralThousandsGroupStyle: 'thousand',\n  },\n}\n\nexport const useCleaveProps = {\n  mask: { type: [String, Object] as PropType<string | Record<string, number[]>>, default: '' },\n  returnRaw: { type: Boolean, default: true },\n  modelValue: { type: String },\n}\n\ntype Props = {\n  mask: string | Record<string, number[]>,\n  returnRaw: boolean,\n  modelValue: string | number,\n}\n\nexport const useCleave = (\n  element: Ref<HTMLInputElement | undefined>,\n  props: Props,\n  emit: (event: 'update:modelValue' | any, ...args: any[]) => any,\n) => {\n  const cleave = ref<Cleave>()\n\n  const getMask = (mask: CleaveOptions | string) => {\n    if (typeof mask === 'string') {\n      return DEFAULT_MASK_TOKENS[mask] ? { ...DEFAULT_MASK_TOKENS[mask] } : {}\n    }\n    return { ...mask }\n  }\n\n  const destroyCleave = () => {\n    if (cleave.value) { cleave.value.destroy() }\n  }\n\n  const initCleave = () => {\n    destroyCleave()\n\n    if (!element.value) { return }\n\n    cleave.value = new Cleave(element.value, getMask(props.mask))\n  }\n\n  onMounted(() => { initCleave() })\n  onBeforeUnmount(() => { destroyCleave() })\n\n  watch(() => [element.value, props.mask], () => { initCleave() })\n\n  const computedValue = computed<string | number>(() => {\n    if (cleave.value) {\n      if (props.returnRaw && props.modelValue === cleave.value.getRawValue()) {\n        return cleave.value.getFormattedValue()\n      }\n    }\n\n    return props.modelValue\n  })\n\n  const onInput = (event: Event) => {\n    const value = (event.target as HTMLInputElement).value\n\n    if (props.mask !== 'string' && !Object.keys(props.mask).length) {\n      emit('update:modelValue', value)\n      return\n    }\n\n    if (cleave.value) {\n      cleave.value.setRawValue(value)\n      if (props.returnRaw) {\n        emit('update:modelValue', cleave.value.getRawValue())\n        return\n      }\n    }\n\n    emit('update:modelValue', value)\n  }\n\n  return {\n    cleave,\n    computedValue,\n    onInput,\n  }\n}\n"],"names":["DEFAULT_MASK_TOKENS","creditCard","date","datePattern","time","timePattern","timeFormat","numeral","numeralThousandsGroupStyle","useCleaveProps","mask","type","String","Object","default","returnRaw","Boolean","modelValue","useCleave","element","props","emit","cleave","ref","destroyCleave","value","destroy","initCleave","Cleave","__spreadValues","onMounted","onBeforeUnmount","watch","computedValue","computed","getRawValue","getFormattedValue","onInput","event","target","keys","length","setRawValue"],"mappings":"ofAIA,MAAMA,EAA+D,CACnEC,WAAY,CACVA,YAAY,GAEdC,KAAM,CACJA,MAAM,EACNC,YAAa,CAAC,IAAK,IAAK,MAE1BC,KAAM,CACJA,MAAM,EACNC,YAAa,CAAC,IAAK,KACnBC,WAAY,MAEdC,QAAS,CACPA,SAAS,EACTC,2BAA4B,aAInBC,EAAiB,CAC5BC,KAAM,CAAEC,KAAM,CAACC,OAAQC,QAAwDC,QAAS,IACxFC,UAAW,CAAEJ,KAAMK,QAASF,SAAS,GACrCG,WAAY,CAAEN,KAAMC,SASTM,UAAY,CACvBC,EACAC,EACAC,KAEA,MAAMC,EAASC,IASTC,cAAgB,KAChBF,EAAOG,OAASH,EAAOG,MAAMC,WAG7BC,WAAa,KAXH,IAACjB,mBAcVS,EAAQM,SAENH,EAAAG,MAAQ,IAAIG,EAAOT,EAAQM,MAfd,iBADLf,EAgBkCU,EAAMV,MAd9CV,EAAoBU,GAAQmB,eAAK,GAAA7B,EAAoBU,IAAU,GAEjEmB,eAAK,GAAAnB,MAedoB,GAAU,qBACVC,GAAgB,wBAEhBC,GAAM,IAAM,CAACb,EAAQM,MAAOL,EAAMV,QAAO,qBAEnC,MAAAuB,EAAgBC,GAA0B,IAC1CZ,EAAOG,OACLL,EAAML,WAAaK,EAAMH,aAAeK,EAAOG,MAAMU,cAChDb,EAAOG,MAAMW,oBAIjBhB,EAAMH,aAsBR,MAAA,CACLK,OAAAA,EACAW,cAAAA,EACAI,QAtBeC,IACT,MAAAb,EAASa,EAAMC,OAA4Bd,OAE9B,WAAfL,EAAMV,MAAsBG,OAAO2B,KAAKpB,EAAMV,MAAM+B,SAKpDnB,EAAOG,QACFH,EAAAG,MAAMiB,YAAYjB,GACrBL,EAAML,WACRM,EAAK,oBAAqBC,EAAOG,MAAMU,eAPzCd,EAAK,oBAAqBI"}