import{ref as e,computed as l,watch as t}from"vue";import{g as o}from"./useRows.mjs";function useSelectableRow(u,n,c){const s=e([]),a=l({get:()=>void 0===n.modelValue?s.value:n.modelValue,set(e){void 0===n.modelValue&&(s.value=e),c("update:modelValue",e)}}),i=e(-1);t((()=>n.selectMode),((e,l)=>{"single"===e&&"multiple"===l&&(a.value=[],setPrevSelectedRowIndex(-1))})),t(u,(()=>{setPrevSelectedRowIndex(-1)})),t(a,((e,l=[])=>{c("selectionChange",{currentSelectedItems:e,previousSelectedItems:l})}),{immediate:!0});const getKey=e=>o(e,n.itemsTrackBy),v=l((()=>!u.value.some((({source:e})=>a.value.includes(getKey(e)))))),d=l((()=>0!==u.value.length&&u.value.every((({source:e})=>a.value.includes(getKey(e)))))),r=l((()=>!v.value&&!d.value));function isRowSelected(e){return a.value.includes(getKey(e.source))}function setPrevSelectedRowIndex(e){if(-1===e)i.value=-1;else{const l=u.value.find((l=>l.initialIndex===e));i.value=l?u.value.indexOf(l):-1}}function toggleRowSelection(e){n.selectable&&(isRowSelected(e)?(!function unselectRow(e){const l=a.value.findIndex((l=>l===getKey(e.source)));a.value=[...a.value.slice(0,l),...a.value.slice(l+1)]}(e),"single"===n.selectMode?setPrevSelectedRowIndex(-1):setPrevSelectedRowIndex(e.initialIndex)):("single"===n.selectMode?function selectOnlyRow(e){a.value=[getKey(e.source)]}(e):function selectRow(e){a.value=[...a.value,getKey(e.source)]}(e),setPrevSelectedRowIndex(e.initialIndex)))}return{ctrlSelectRow:function ctrlSelectRow(e){n.selectable&&toggleRowSelection(e)},shiftSelectRows:function shiftSelectRows(e){if(!n.selectable)return;if("single"===n.selectMode||-1===i.value)return toggleRowSelection(e);!function mergeSelection(e){const l=e.map((e=>getKey(e.source)));if(v.value)return void(a.value=l);l.every((e=>a.value.includes(e)))?a.value=a.value.filter((e=>!l.includes(e))):a.value=[...new Set([...a.value,...l])]}(function getRowsToSelect(e){let l,t;return isRowSelected(u.value[i.value])?(l=Math.min(i.value,e),t=Math.max(i.value,e)):(l=Math.min(i.value+1,e),t=Math.max(i.value-1,e)),u.value.slice(l,t+1)}(u.value.indexOf(e))),setPrevSelectedRowIndex(-1)},toggleRowSelection:toggleRowSelection,toggleBulkSelection:function toggleBulkSelection(){d.value?function unselectAllRows(){const e=u.value.map((e=>getKey(e.source)));a.value=a.value.filter((l=>!e.includes(l)))}():function selectAllRows(){a.value=[...new Set([...a.value,...u.value.map((e=>getKey(e.source)))])]}(),setPrevSelectedRowIndex(-1)},isRowSelected:isRowSelected,noRowsSelected:v,severalRowsSelected:r,allRowsSelected:d}}export{useSelectableRow as u};
//# sourceMappingURL=useSelectableRow.mjs.map
