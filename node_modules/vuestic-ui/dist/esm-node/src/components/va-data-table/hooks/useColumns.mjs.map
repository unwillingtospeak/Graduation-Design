{"version":3,"file":"useColumns.mjs","sources":["../../../../../../src/components/va-data-table/hooks/useColumns.ts"],"sourcesContent":["import { computed } from 'vue'\nimport startCase from 'lodash/startCase.js'\nimport merge from 'lodash/merge.js'\n\nimport { warn } from '../../../services/utils'\nimport type {\n  DataTableColumnSource,\n  DataTableColumnInternal,\n  DataTableItem,\n  DataTableSortingOptions,\n} from '../types'\n\ninterface useColumnsProps {\n  columns: DataTableColumnSource[]\n  items: DataTableItem[]\n  sortingOptions: DataTableSortingOptions\n  [prop: string]: unknown\n}\n\nexport const sortingOptionsValidator = (options: DataTableSortingOptions) => {\n  const isAllowedOptionsLength = options.length === 2 || options.length === 3\n  const isAvailableOptions = options.every((option) => ['asc', 'desc', null].includes(option))\n  const isUniqueOptions = (options.length === new Set(options).size)\n\n  return isAllowedOptionsLength && isAvailableOptions && isUniqueOptions\n}\n\nexport const buildTableColumn = (\n  source: DataTableColumnSource,\n  initialIndex: number,\n  props: useColumnsProps,\n): DataTableColumnInternal => {\n  const input = typeof source === 'string' ? { key: source } : source\n\n  const isValidOptions = input.sortingOptions\n    ? sortingOptionsValidator(input.sortingOptions)\n    : true\n\n  if (!isValidOptions) {\n    warn(`The \"sortingOptions\" array in the column with \"${input.key}\" key is invalid. For this column, the \"sortingOptions\" value is taken as for the table: ${JSON.stringify(props.sortingOptions)}.`)\n  }\n\n  return {\n    source,\n    initialIndex,\n    key: input.key,\n    name: input.name || input.key,\n    label: input.label || startCase(input.key),\n    thTitle: input.thTitle || input.headerTitle || input.label || startCase(input.key),\n    sortable: input.sortable || false,\n    sortingFn: input.sortingFn,\n    sortingOptions: (isValidOptions && input.sortingOptions) || props.sortingOptions,\n    thAlign: input.thAlign || input.alignHead || 'left',\n    thVerticalAlign: input.thVerticalAlign || input.verticalAlignHead || 'middle',\n    tdAlign: input.tdAlign || input.align || 'left',\n    tdVerticalAlign: input.tdVerticalAlign || input.verticalAlign || 'middle',\n    width: input.width,\n    tdClass: input.tdClass || input.classes,\n    thClass: input.thClass || input.headerClasses,\n    tdStyle: input.tdStyle || input.style,\n    thStyle: input.thStyle || input.headerStyle,\n  }\n}\n\nconst buildColumnsFromItems = (props: useColumnsProps) => {\n  return Object.keys(merge({}, ...props.items)).map((item, index) => buildTableColumn(item, index, props))\n}\n\nconst buildNormalizedColumns = (props: useColumnsProps) => {\n  return props.columns.map((item, index) => buildTableColumn(item, index, props))\n}\n\nexport default function useColumns (props: useColumnsProps) {\n  const columnsComputed = computed(() => {\n    if (props.columns.length === 0) {\n      // if no column definitions provided then build them based on provided rawItems\n      // e.g. if provided items look like `[{a: 1}, {b: 2}]` then there should be 2 columns: A and B\n      return buildColumnsFromItems(props)\n    } else {\n      return buildNormalizedColumns(props)\n    }\n  })\n\n  return {\n    columnsComputed,\n  }\n}\n"],"names":["sortingOptionsValidator","options","isAllowedOptionsLength","length","isAvailableOptions","every","option","includes","isUniqueOptions","Set","size","buildTableColumn","source","initialIndex","props","input","key","isValidOptions","sortingOptions","warn","JSON","stringify","name","label","startCase","thTitle","headerTitle","sortable","sortingFn","thAlign","alignHead","thVerticalAlign","verticalAlignHead","tdAlign","align","tdVerticalAlign","verticalAlign","width","tdClass","classes","thClass","headerClasses","tdStyle","style","thStyle","headerStyle","useColumns","columnsComputed","computed","columns","Object","keys","merge","items","map","item","index","buildColumnsFromItems","buildNormalizedColumns"],"mappings":"4HAmBa,MAAAA,wBAA2BC,IACtC,MAAMC,EAA4C,IAAnBD,EAAQE,QAAmC,IAAnBF,EAAQE,OACzDC,EAAqBH,EAAQI,OAAOC,GAAW,CAAC,MAAO,OAAQ,MAAMC,SAASD,KAC9EE,EAAmBP,EAAQE,SAAW,IAAIM,IAAIR,GAASS,KAE7D,OAAOR,GAA0BE,GAAsBI,GAG5CG,iBAAmB,CAC9BC,EACAC,EACAC,KAEA,MAAMC,EAA0B,iBAAXH,EAAsB,CAAEI,IAAKJ,GAAWA,EAEvDK,GAAiBF,EAAMG,gBACzBlB,wBAAwBe,EAAMG,gBAO3B,OAJFD,GACHE,EAAK,kDAAkDJ,EAAMC,+FAA+FI,KAAKC,UAAUP,EAAMI,oBAG5K,CACLN,OAAAA,EACAC,aAAAA,EACAG,IAAKD,EAAMC,IACXM,KAAMP,EAAMO,MAAQP,EAAMC,IAC1BO,MAAOR,EAAMQ,OAASC,EAAUT,EAAMC,KACtCS,QAASV,EAAMU,SAAWV,EAAMW,aAAeX,EAAMQ,OAASC,EAAUT,EAAMC,KAC9EW,SAAUZ,EAAMY,WAAY,EAC5BC,UAAWb,EAAMa,UACjBV,eAAiBD,GAAkBF,EAAMG,gBAAmBJ,EAAMI,eAClEW,QAASd,EAAMc,SAAWd,EAAMe,WAAa,OAC7CC,gBAAiBhB,EAAMgB,iBAAmBhB,EAAMiB,mBAAqB,SACrEC,QAASlB,EAAMkB,SAAWlB,EAAMmB,OAAS,OACzCC,gBAAiBpB,EAAMoB,iBAAmBpB,EAAMqB,eAAiB,SACjEC,MAAOtB,EAAMsB,MACbC,QAASvB,EAAMuB,SAAWvB,EAAMwB,QAChCC,QAASzB,EAAMyB,SAAWzB,EAAM0B,cAChCC,QAAS3B,EAAM2B,SAAW3B,EAAM4B,MAChCC,QAAS7B,EAAM6B,SAAW7B,EAAM8B,cAYpC,SAAAC,WAAoChC,GAC5B,MAAAiC,EAAkBC,GAAS,IACF,IAAzBlC,EAAMmC,QAAQ9C,OAVQ,CAACW,GACtBoC,OAAOC,KAAKC,EAAM,MAAOtC,EAAMuC,QAAQC,KAAI,CAACC,EAAMC,IAAU7C,iBAAiB4C,EAAMC,EAAO1C,KAYtF2C,CAAsB3C,GATJ,CAACA,GACvBA,EAAMmC,QAAQK,KAAI,CAACC,EAAMC,IAAU7C,iBAAiB4C,EAAMC,EAAO1C,KAU7D4C,CAAuB5C,KAI3B,MAAA,CACLiC,gBAAAA"}