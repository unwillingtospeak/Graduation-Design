{"version":3,"file":"useRows.mjs","sources":["../../../../../../src/components/va-data-table/hooks/useRows.ts"],"sourcesContent":["import { Ref, computed } from 'vue'\n\nimport { getValueByPath } from '../../../services/utils'\n\nimport type {\n  DataTableColumnInternal,\n  DataTableItem,\n  DataTableCell,\n  DataTableRow,\n  DataTableItemKey,\n} from '../types'\n\nexport const getItemKey = (source: DataTableItem, itemsTrackBy: string | ((item: DataTableItem) => any)): DataTableItemKey => (\n  typeof itemsTrackBy === 'function'\n    ? itemsTrackBy(source)\n    : getValueByPath(source, itemsTrackBy) || source\n)\n\ninterface useRowsProps {\n  items: DataTableItem[]\n  itemsTrackBy: string | ((item: DataTableItem) => any)\n  [prop: string]: unknown\n}\n\nconst buildTableCell = (\n  rowIndex: number,\n  rowKey: string,\n  rowData: DataTableItem,\n  column: DataTableColumnInternal,\n): DataTableCell => {\n  const source = getValueByPath(rowData, column.key)\n\n  return {\n    rowIndex,\n    rowKey,\n    rowData,\n    column,\n    source,\n    value: source?.toString?.() || '',\n  }\n}\n\nconst buildTableRow = (\n  source: DataTableItem,\n  initialIndex: number,\n  itemsTrackBy: string | ((item: DataTableItem) => any),\n  columns: DataTableColumnInternal[],\n): DataTableRow => {\n  const itemKey = getItemKey(source, itemsTrackBy)\n\n  return {\n    initialIndex,\n    itemKey,\n    source,\n    cells: columns.map(column => buildTableCell(initialIndex, itemKey, source, column)),\n  }\n}\n\nexport default function useRows (\n  columns: Ref<DataTableColumnInternal[]>,\n  props: useRowsProps,\n) {\n  const rowsComputed = computed(() => props.items\n    .map((rawItem, index) => buildTableRow(rawItem, index, props.itemsTrackBy, columns.value)))\n\n  return {\n    rowsComputed,\n  }\n}\n"],"names":["getItemKey","source","itemsTrackBy","getValueByPath","buildTableRow","initialIndex","columns","itemKey","cells","map","column","rowIndex","rowKey","rowData","key","value","_a","toString","call","buildTableCell","useRows","props","rowsComputed","computed","items","rawItem","index"],"mappings":"+EAYO,MAAMA,WAAa,CAACC,EAAuBC,IACxB,mBAAjBA,EACHA,EAAaD,GACbE,EAAeF,EAAQC,IAAiBD,EA2BxCG,cAAgB,CACpBH,EACAI,EACAH,EACAI,KAEM,MAAAC,EAAUP,WAAWC,EAAQC,GAE5B,MAAA,CACLG,aAAAA,EACAE,QAAAA,EACAN,OAAAA,EACAO,MAAOF,EAAQG,KAAIC,GA9BA,EACrBC,EACAC,EACAC,EACAH,WAEA,MAAMT,EAASE,EAAeU,EAASH,EAAOI,KAEvC,MAAA,CACLH,SAAAA,EACAC,OAAAA,EACAC,QAAAA,EACAH,OAAAA,EACAT,OAAAA,EACAc,OAAO,OAAQC,EAAA,MAAAf,OAAA,EAAAA,EAAAgB,eAAgB,EAAAD,EAAAE,KAAAjB,KAAA,KAgBFkB,CAAed,EAAcE,EAASN,EAAQS,OAI/E,SAAAU,QACEd,EACAe,GAKO,MAAA,CACLC,aAJmBC,GAAS,IAAMF,EAAMG,MACvCf,KAAI,CAACgB,EAASC,IAAUtB,cAAcqB,EAASC,EAAOL,EAAMnB,aAAcI,EAAQS"}