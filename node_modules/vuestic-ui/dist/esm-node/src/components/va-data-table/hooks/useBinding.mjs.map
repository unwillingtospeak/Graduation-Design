{"version":3,"file":"useBinding.mjs","sources":["../../../../../../src/components/va-data-table/hooks/useBinding.ts"],"sourcesContent":["import type {\n  DataTableCell,\n  DataTableRow,\n  DataTableRowBind,\n  DataTableCellBind,\n} from '../types'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\nconst isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object'\n\ninterface useBindingProps {\n  rowBind?: DataTableRowBind\n  cellBind?: DataTableCellBind\n}\n\nexport default function useBinding (props: useBindingProps) {\n  const getRowBind = (row: DataTableRow) => (\n    isFunction(props.rowBind)\n      ? props.rowBind(row.source, row.initialIndex)\n      : isObject(props.rowBind)\n        ? props.rowBind\n        : {}\n  ) as Record<string, string>\n\n  const getCellBind = (cell: DataTableCell, row: DataTableRow) => (\n    isFunction(props.cellBind)\n      ? props.cellBind(cell.source, row.source, cell.column, row.initialIndex)\n      : isObject(props.cellBind)\n        ? props.cellBind\n        : {}\n  ) as Record<string, string>\n\n  return {\n    getRowBind,\n    getCellBind,\n  }\n}\n"],"names":["isFunction","val","isObject","useBinding","props","getRowBind","row","rowBind","source","initialIndex","getCellBind","cell","cellBind","column"],"mappings":"AAOA,MAAMA,WAAcC,GAAiD,mBAARA,EACvDC,SAAYD,GAAkD,OAARA,GAA+B,iBAARA,EAOnF,SAAAE,WAAoCC,GAiB3B,MAAA,CACLC,WAjBkBC,GAClBN,WAAWI,EAAMG,SACbH,EAAMG,QAAQD,EAAIE,OAAQF,EAAIG,cAC9BP,SAASE,EAAMG,SACbH,EAAMG,QACN,GAaNG,YAVkB,CAACC,EAAqBL,IACxCN,WAAWI,EAAMQ,UACbR,EAAMQ,SAASD,EAAKH,OAAQF,EAAIE,OAAQG,EAAKE,OAAQP,EAAIG,cACzDP,SAASE,EAAMQ,UACbR,EAAMQ,SACN"}