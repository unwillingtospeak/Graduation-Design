{"version":3,"file":"useSortable.mjs","sources":["../../../../../../src/components/va-data-table/hooks/useSortable.ts"],"sourcesContent":["import { computed, ref, Ref, watch } from 'vue'\n\nimport type {\n  DataTableColumnInternal,\n  DataTableRow,\n  DataTableItem,\n  DataTableSortingOrder,\n  DataTableSortingOptions,\n} from '../types'\n\ninterface useSortableProps {\n  sortBy: string | undefined\n  sortingOrder: DataTableSortingOrder | undefined\n}\nexport type TSortedArgs = { sortBy: string, sortingOrder: DataTableSortingOrder, items: DataTableItem[], itemsIndexes: number[] }\nexport type TSortableEmits = (\n  event: 'update:sortBy' | 'update:sortingOrder' | 'sorted',\n  args: string | DataTableSortingOrder | TSortedArgs,\n) => void\n\nexport default function useSortable (\n  columns: Ref<DataTableColumnInternal[]>,\n  filteredRows: Ref<DataTableRow[]>,\n  props: useSortableProps,\n  emit: TSortableEmits,\n) {\n  const sortByFallback = ref('')\n  const sortBySync = computed<string>({\n    get () {\n      if (props.sortBy === undefined) {\n        return sortByFallback.value\n      } else {\n        return props.sortBy\n      }\n    },\n\n    set (value) {\n      if (props.sortBy === undefined) {\n        sortByFallback.value = value\n      }\n\n      emit('update:sortBy', value)\n    },\n  })\n\n  const sortingOrderFallback = ref(null as DataTableSortingOrder)\n  const sortingOrderSync = computed<DataTableSortingOrder>({\n    get () {\n      if (props.sortingOrder === undefined) {\n        return sortingOrderFallback.value\n      } else {\n        return props.sortingOrder\n      }\n    },\n\n    set (value) {\n      if (props.sortingOrder === undefined) {\n        sortingOrderFallback.value = value\n      }\n\n      emit('update:sortingOrder', value)\n    },\n  })\n\n  // sorts by string-value of a given row's cell (depending on by which column the table is sorted) if no sortingFn is\n  // provided. Otherwise uses that very sortingFn. If sortingOrder is `null` then restores the initial sorting order of\n  // the rows.\n  const sortedRows = computed(() => {\n    if (filteredRows.value.length <= 1) {\n      return filteredRows.value\n    }\n\n    const column = columns.value.find(column => column.name === sortBySync.value)\n\n    if (!column || !column.sortable) {\n      return filteredRows.value\n    }\n\n    const columnIndex = columns.value.indexOf(column)\n\n    return [...filteredRows.value].sort((a, b) => {\n      const firstValue = a.cells[columnIndex].value\n      const secondValue = b.cells[columnIndex].value\n      const firstSource = a.cells[columnIndex].source\n      const secondSource = b.cells[columnIndex].source\n\n      if (sortingOrderSync.value === null) {\n        return a.initialIndex - b.initialIndex\n      } else {\n        const sortingOrderRatio = sortingOrderSync.value === 'desc' ? -1 : 1\n\n        return sortingOrderRatio * (\n          typeof column.sortingFn === 'function'\n            ? column.sortingFn(firstSource, secondSource)\n            : firstValue.localeCompare(secondValue)\n        )\n      }\n    })\n  })\n\n  // sort each time the sortBy or sortingOrder is changed (and also initially). Also if columns definitions are changed\n  // (because that potentially means that the user runtime-introduced a custom sorting function for a specific column)\n  watch(sortedRows, () => {\n    emit('sorted', {\n      sortBy: sortBySync.value,\n      sortingOrder: sortingOrderSync.value,\n      items: sortedRows.value.map(row => row.source),\n      itemsIndexes: sortedRows.value.map(row => row.initialIndex),\n    })\n  })\n\n  const getNextSortingOptionsValue = (value: DataTableSortingOrder, options: DataTableSortingOptions) => {\n    const index = options.findIndex((sortingValue) => sortingValue === value)\n\n    return index !== -1\n      ? options[(index + 1) % options.length]\n      : options[0]\n  }\n\n  // a function to invoke when a heading of the table is clicked.\n  // Sets the clicked heading's column as a one to sort by and toggles the sorting order from \"asc\" to \"desc\" to `null`\n  // (un-sorted) if the same column is clicked again or sets sorting order to \"asc\" if some other column is chosen.\n  function toggleSorting (column: DataTableColumnInternal) {\n    if (column.name === sortBySync.value) {\n      sortingOrderSync.value = getNextSortingOptionsValue(sortingOrderSync.value, column.sortingOptions)\n    } else {\n      sortBySync.value = column.name\n      sortingOrderSync.value = column.sortingOptions[0]\n    }\n  }\n\n  const sortingOrderIconName = computed(() => {\n    return sortingOrderSync.value === 'asc'\n      ? 'expand_less'\n      : sortingOrderSync.value === 'desc'\n        ? 'expand_more'\n        : 'unfold_more'\n  })\n\n  return {\n    sortBySync,\n    sortingOrderSync,\n    toggleSorting,\n    sortedRows,\n    sortingOrderIconName,\n  }\n}\n"],"names":["useSortable","columns","filteredRows","props","emit","sortByFallback","ref","sortBySync","computed","get","sortBy","value","set","sortingOrderFallback","sortingOrderSync","sortingOrder","sortedRows","length","column","find","column2","name","sortable","columnIndex","indexOf","sort","a","b","firstValue","cells","secondValue","firstSource","source","secondSource","initialIndex","sortingFn","localeCompare","watch","items","map","row","itemsIndexes","sortingOrderIconName","toggleSorting","options","index","findIndex","sortingValue","getNextSortingOptionsValue","sortingOptions"],"mappings":"mDAqBE,SAAAA,YAAAC,EACAC,EACAC,EACAC,GAEM,MAAAC,EAAiBC,EAAI,IACrBC,EAAaC,EAAiB,CAClCC,IAAO,SACgB,IAAjBN,EAAMO,OACDL,EAAeM,MAEfR,EAAMO,OAIjBE,IAAKD,QACkB,IAAjBR,EAAMO,SACRL,EAAeM,MAAQA,GAGzBP,EAAK,gBAAiBO,MAIpBE,EAAuBP,EAAI,MAC3BQ,EAAmBN,EAAgC,CACvDC,IAAO,SACsB,IAAvBN,EAAMY,aACDF,EAAqBF,MAErBR,EAAMY,aAIjBH,IAAKD,QACwB,IAAvBR,EAAMY,eACRF,EAAqBF,MAAQA,GAG/BP,EAAK,sBAAuBO,MAO1BK,EAAaR,GAAS,KACtB,GAAAN,EAAaS,MAAMM,QAAU,EAC/B,OAAOf,EAAaS,MAGhB,MAAAO,EAASjB,EAAQU,MAAMQ,SAAeC,EAAOC,OAASd,EAAWI,QAEvE,IAAKO,IAAWA,EAAOI,SACrB,OAAOpB,EAAaS,MAGtB,MAAMY,EAActB,EAAQU,MAAMa,QAAQN,GAEnC,MAAA,IAAIhB,EAAaS,OAAOc,MAAK,CAACC,EAAGC,KAChC,MAAAC,EAAaF,EAAEG,MAAMN,GAAaZ,MAClCmB,EAAcH,EAAEE,MAAMN,GAAaZ,MACnCoB,EAAcL,EAAEG,MAAMN,GAAaS,OACnCC,EAAeN,EAAEE,MAAMN,GAAaS,OAEtC,GAA2B,OAA3BlB,EAAiBH,MACZ,OAAAe,EAAEQ,aAAeP,EAAEO,aAI1B,OAFqD,SAA3BpB,EAAiBH,OAAwB,EAAA,IAGrC,mBAArBO,EAAOiB,UACVjB,EAAOiB,UAAUJ,EAAaE,GAC9BL,EAAWQ,cAAcN,UAQrCO,EAAMrB,GAAY,KAChBZ,EAAK,SAAU,CACbM,OAAQH,EAAWI,MACnBI,aAAcD,EAAiBH,MAC/B2B,MAAOtB,EAAWL,MAAM4B,KAAIC,GAAOA,EAAIR,SACvCS,aAAczB,EAAWL,MAAM4B,KAAIC,GAAOA,EAAIN,oBAwB5C,MAAAQ,EAAuBlC,GAAS,IACF,QAA3BM,EAAiBH,MACpB,cAC2B,SAA3BG,EAAiBH,MACf,cACA,gBAGD,MAAA,CACLJ,WAAAA,EACAO,iBAAAA,EACA6B,cApBF,SAAAA,cAAwBzB,GAClBA,EAAOG,OAASd,EAAWI,MAC7BG,EAAiBH,MAbc,EAACA,EAA8BiC,KAChE,MAAMC,EAAQD,EAAQE,WAAWC,GAAiBA,IAAiBpC,IAEnE,OACI,IADGkC,EACHD,KAAiB,GAAKA,EAAQ3B,QAC9B2B,EAAQ,IAQeI,CAA2BlC,EAAiBH,MAAOO,EAAO+B,iBAEnF1C,EAAWI,MAAQO,EAAOG,KACTP,EAAAH,MAAQO,EAAO+B,eAAe,KAgBjDjC,WAAAA,EACA0B,qBAAAA"}