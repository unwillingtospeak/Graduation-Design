{"version":3,"file":"VaSidebar.mjs","sources":["../../../../../src/components/va-sidebar/VaSidebar.vue"],"sourcesContent":["<template>\n  <aside\n    class=\"va-sidebar\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\">\n      <slot />\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, PropType } from 'vue'\n\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors, useTextColor, useBem } from '../../composables'\nimport { useSidebar } from './hooks/useSidebar'\n\nexport default defineComponent({\n  name: 'VaSidebar',\n  props: {\n    color: { type: String, default: 'background' },\n    textColor: { type: String },\n    gradient: { type: Boolean, default: false },\n    minimized: { type: Boolean, default: false },\n    hoverable: { type: Boolean, default: false },\n    position: {\n      type: String as PropType<'left' | 'right'>,\n      default: 'left',\n      validator: (v: string) => ['left', 'right'].includes(v),\n    },\n    width: { type: String, default: '16rem' },\n    minimizedWidth: { type: String, default: '4rem' },\n    modelValue: { type: Boolean, default: true },\n    animated: { type: Boolean, default: true },\n  },\n  setup (props) {\n    const { getColor } = useColors()\n    useSidebar()\n\n    const isHovered = ref(false)\n\n    const isMinimized = computed(() => props.minimized || (props.hoverable && !isHovered.value))\n\n    const computedWidth = computed(() => {\n      if (!props.modelValue) {\n        return 0\n      }\n\n      return isMinimized.value ? props.minimizedWidth : props.width\n    })\n\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color)\n      const background = props.gradient ? getGradientBackground(backgroundColor) : backgroundColor\n\n      const color = textColorComputed.value\n\n      return {\n        color,\n        background,\n        width: computedWidth.value,\n      }\n    })\n\n    const computedClass = useBem('va-sidebar', () => ({\n      minimized: isMinimized.value,\n      right: props.position === 'right',\n      animated: props.animated,\n    }))\n\n    const updateHoverState = (newHoverState: boolean) => {\n      isHovered.value = props.hoverable && newHoverState\n    }\n\n    return {\n      computedClass,\n      computedStyle,\n      updateHoverState,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n\n  &__menu {\n    display: flex;\n    flex-direction: column;\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n  }\n\n  &--animated {\n    transition: var(--va-sidebar-transition);\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar__title {\n      display: none;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n"],"names":["_sfc_main","defineComponent","name","props","color","type","String","default","textColor","gradient","Boolean","minimized","hoverable","position","validator","v","includes","width","minimizedWidth","modelValue","animated","setup","getColor","useColors","isHovered","ref","isMinimized","computed","value","computedWidth","textColorComputed","useTextColor","computedStyle","backgroundColor","background","getGradientBackground","computedClass","useBem","right","updateHoverState","newHoverState","_hoisted_1","class","_createElementBlock","_normalizeClass","_ctx","style","_normalizeStyle","onMouseenter","_cache","onMouseleave","_createElementVNode","_renderSlot","$slots"],"mappings":"0jBAqBA,MAAKA,EAAaC,EAAa,CAC7BC,KAAM,YACNC,MAAO,CACLC,MAAO,CAAEC,KAAMC,OAAQC,QAAS,cAChCC,UAAW,CAAEH,KAAMC,QACnBG,SAAU,CAAEJ,KAAMK,QAASH,SAAS,GACpCI,UAAW,CAAEN,KAAMK,QAASH,SAAS,GACrCK,UAAW,CAAEP,KAAMK,QAASH,SAAS,GACrCM,SAAU,CACRR,KAAMC,OACNC,QAAS,OACTO,UAAYC,GAAc,CAAC,OAAQ,SAASC,SAASD,IAEvDE,MAAO,CAAEZ,KAAMC,OAAQC,QAAS,SAChCW,eAAgB,CAAEb,KAAMC,OAAQC,QAAS,QACzCY,WAAY,CAAEd,KAAMK,QAASH,SAAS,GACtCa,SAAU,CAAEf,KAAMK,QAASH,SAAS,IAEtCc,MAAOlB,GACC,MAAAmB,SAAEA,GAAaC,QAGf,MAAAC,EAAYC,GAAI,GAEhBC,EAAcC,GAAS,IAAMxB,EAAMQ,WAAcR,EAAMS,YAAcY,EAAUI,QAE/EC,EAAgBF,GAAS,IACxBxB,EAAMgB,WAIJO,EAAYE,MAAQzB,EAAMe,eAAiBf,EAAMc,MAH/C,KAMLa,kBAAEA,GAAsBC,IAExBC,EAAgBL,GAAS,KACvB,MAAAM,EAAkBX,EAASnB,EAAMC,OACjC8B,EAAa/B,EAAMM,SAAW0B,EAAsBF,GAAmBA,EAItE,MAAA,CACL7B,MAHY0B,EAAkBF,MAI9BM,WAAAA,EACAjB,MAAOY,EAAcD,UAclB,MAAA,CACLQ,cAXoBC,EAAO,cAAc,KAAO,CAChD1B,UAAWe,EAAYE,MACvBU,MAA0B,UAAnBnC,EAAMU,SACbO,SAAUjB,EAAMiB,aAShBY,cAAAA,EACAO,iBAPwBC,IACdhB,EAAAI,MAAQzB,EAAMS,WAAa4B,OArElCC,EAAA,CAAAC,MAAM,sFAPbC,EAUQ,QAAA,CATND,MAAKE,EAAC,CAAA,aACEC,EAAaT,gBACpBU,MAAKC,EAAEF,EAAab,eACpBgB,aAAUC,eAAEJ,EAAgBN,kBAAA,IAC5BW,aAAUD,eAAEJ,EAAgBN,kBAAA,KAAA,CAE7BY,EAEM,MAFNV,EAEM,CADJW,EAAQP,EAAAQ,OAAA"}