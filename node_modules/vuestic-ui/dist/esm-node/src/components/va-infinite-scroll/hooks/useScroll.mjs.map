{"version":3,"file":"useScroll.mjs","sources":["../../../../../../src/components/va-infinite-scroll/hooks/useScroll.ts"],"sourcesContent":["import { Ref, onMounted, onBeforeUnmount } from 'vue'\n\ninterface ScrollTargetProps {\n  scrollTarget: HTMLElement | string | undefined;\n  disabled: boolean;\n  reverse: boolean;\n}\n\nexport const useScroll = (\n  props: ScrollTargetProps,\n  element: Ref<HTMLElement | undefined>,\n  handler: Ref<any>,\n) => {\n  const addScrollListener = () => {\n    element.value?.addEventListener(\n      'scroll',\n      handler.value,\n      { passive: true },\n    )\n  }\n\n  const removeScrollListener = () => {\n    element.value?.removeEventListener(\n      'scroll',\n      handler.value,\n    )\n  }\n\n  onMounted(() => {\n    if (!element.value) { return }\n\n    element.value.style.overflowY = 'scroll'\n\n    if (props.reverse) {\n      element.value.scrollTop = element.value.scrollHeight\n    }\n\n    addScrollListener()\n  })\n\n  onBeforeUnmount(removeScrollListener)\n\n  return {\n    addScrollListener,\n    removeScrollListener,\n  }\n}\n"],"names":["useScroll","props","element","handler","addScrollListener","_a","value","addEventListener","passive","removeScrollListener","removeEventListener","onMounted","style","overflowY","reverse","scrollTop","scrollHeight","onBeforeUnmount"],"mappings":"qDAQO,MAAMA,UAAY,CACvBC,EACAC,EACAC,KAEA,MAAMC,kBAAoB,WAChB,OAAAC,EAAAH,EAAAI,UAAOC,iBACb,SACAJ,EAAQG,MACR,CAAEE,SAAS,KAITC,qBAAuB,WAC3B,OAAAJ,EAAAH,EAAQI,QAARD,EAAeK,oBACb,SACAP,EAAQG,QAkBL,OAdPK,GAAU,KACHT,EAAQI,QAELJ,EAAAI,MAAMM,MAAMC,UAAY,SAE5BZ,EAAMa,UACAZ,EAAAI,MAAMS,UAAYb,EAAQI,MAAMU,sCAM5CC,EAAgBR,sBAET,CACLL,kBAAAA,kBACAK,qBAAAA"}