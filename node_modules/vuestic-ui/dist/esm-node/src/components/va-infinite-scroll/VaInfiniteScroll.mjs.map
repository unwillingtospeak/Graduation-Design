{"version":3,"file":"VaInfiniteScroll.mjs","sources":["../../../../../src/components/va-infinite-scroll/VaInfiniteScroll.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"$props.tag\"\n    ref=\"element\"\n    role=\"feed\"\n    class=\"va-infinite-scroll\"\n    :class=\"{ 'va-infinite-scroll--reversed': $props.reverse }\"\n    :aria-busy=\"fetching\"\n  >\n    <slot name=\"default\" />\n\n    <div\n      ref=\"spinnerSlotContainer\"\n      class=\"va-infinite-scroll__spinner\"\n      :class=\"{ 'va-infinite-scroll__spinner--invisible': !fetching }\"\n    >\n      <slot\n        v-if=\"!$props.disabled\"\n        name=\"loading\"\n      >\n        <div class=\"va-infinite-scroll__spinner__default\">\n          <va-progress-circle\n            size=\"small\"\n            :thickness=\"0.15\"\n            :color=\"spinnerColor\"\n            indeterminate\n          />\n        </div>\n      </slot>\n    </div>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref, shallowRef, watch } from 'vue'\nimport debounce from 'lodash/debounce.js'\n\nimport { sleep } from '../../services/utils'\nimport { useColors } from '../../composables'\nimport { useScroll } from './hooks/useScroll'\n\nimport { VaProgressCircle } from '../va-progress-circle'\n\nexport default defineComponent({\n  name: 'VaInfiniteScroll',\n\n  components: { VaProgressCircle },\n\n  props: {\n    load: { type: Function, required: true },\n    offset: { type: Number, default: 500 },\n    reverse: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    scrollTarget: { type: [String, Object] as PropType<string | HTMLElement>, default: undefined },\n    debounce: { type: Number, default: 100 },\n    tag: { type: String, default: 'div' },\n  },\n\n  emits: ['onload', 'onerror'],\n\n  setup (props, { emit }) {\n    const element = shallowRef<HTMLElement>()\n    const spinnerSlotContainer = shallowRef<HTMLDivElement>()\n\n    const fetching = ref(false)\n    const error = ref(false)\n    const forcedScrolling = ref(false)\n    const debouncedLoad = ref()\n    const notScrolledContentBeforeLoad = ref(0)\n    const prevScrollTop = ref(0)\n\n    const scrollTargetElement = computed<HTMLElement>(() => {\n      let target\n\n      if (typeof props.scrollTarget === 'string') {\n        target = document.querySelector(props.scrollTarget)\n      } else {\n        target = props.scrollTarget || element.value?.parentElement\n      }\n\n      return (target || document.body) as HTMLElement\n    })\n\n    const {\n      addScrollListener,\n      removeScrollListener,\n    } = useScroll(props, scrollTargetElement, debouncedLoad)\n\n    const { getColor } = useColors()\n\n    const spinnerColor = computed(() => {\n      return error.value ? getColor('danger') : getColor('primary')\n    })\n\n    const spinnerHeight = computed(() => {\n      return spinnerSlotContainer.value?.offsetHeight || 0\n    })\n\n    const computedOffset = computed(() => {\n      return props.offset + spinnerHeight.value\n    })\n\n    const stop = () => {\n      if (props.disabled) { return }\n\n      fetching.value = false\n      removeScrollListener()\n    }\n\n    const resume = () => {\n      if (props.disabled) { return }\n\n      addScrollListener()\n    }\n\n    const onLoad = () => {\n      const { scrollTop, scrollHeight, clientHeight } = scrollTargetElement.value\n      notScrolledContentBeforeLoad.value = scrollHeight - scrollTop\n      const scrollDelta = scrollTop - prevScrollTop.value\n      prevScrollTop.value = scrollTop\n\n      if (props.disabled || error.value || fetching.value) { return }\n\n      if (forcedScrolling.value) {\n        forcedScrolling.value = false\n        return\n      }\n\n      const isReverseScrollDirection = (props.reverse && scrollDelta > 0) || (!props.reverse && scrollDelta < 0)\n      if (isReverseScrollDirection) { return }\n\n      const offset = props.reverse ? scrollTop : scrollHeight - scrollTop - clientHeight\n      if (offset > computedOffset.value) { return }\n\n      fetching.value = true\n\n      props.load()\n        .then(finishLoading)\n        .catch(onError)\n    }\n\n    const forceSetScrollTopToTarget = (value: number) => {\n      forcedScrolling.value = true\n      scrollTargetElement.value.scrollTop = value\n    }\n\n    const updateTargetElementScrollTop = () => {\n      const { scrollTop, scrollHeight, clientHeight } = scrollTargetElement.value\n\n      if (props.reverse) {\n        const isScrolledUp = scrollHeight - scrollTop < notScrolledContentBeforeLoad.value\n        const isSpinnerHidden = scrollTop >= spinnerHeight.value\n\n        if (isScrolledUp && isSpinnerHidden) { return }\n\n        (scrollHeight - notScrolledContentBeforeLoad.value > spinnerHeight.value)\n          ? forceSetScrollTopToTarget(scrollHeight - notScrolledContentBeforeLoad.value)\n          : forceSetScrollTopToTarget(spinnerHeight.value)\n      }\n\n      if (!props.reverse) {\n        const isSpinnerHidden = scrollHeight - scrollTop - clientHeight >= spinnerHeight.value\n        !isSpinnerHidden && forceSetScrollTopToTarget(scrollHeight - clientHeight - spinnerHeight.value)\n      }\n    }\n\n    const finishLoading = () => {\n      updateTargetElementScrollTop()\n      fetching.value = false\n      emit('onload')\n    }\n\n    const stopErrorDisplay = () => {\n      updateTargetElementScrollTop()\n      forcedScrolling.value = false\n      error.value = false\n      fetching.value = false\n      emit('onerror')\n    }\n\n    const onError = () => {\n      stop()\n      error.value = true\n\n      sleep(1200)\n        .then(stopErrorDisplay)\n        .then(resume)\n    }\n\n    watch(() => props.debounce, (value) => {\n      debouncedLoad.value = debounce(onLoad, value)\n    }, { immediate: true })\n\n    watch(() => props.disabled, (value) => {\n      value ? stop() : resume()\n    })\n\n    return {\n      element,\n      spinnerSlotContainer,\n\n      spinnerColor,\n      fetching,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-infinite-scroll {\n  display: var(--va-infinite-scroll-display);\n  flex-direction: var(--va-infinite-scroll-flex-direction);\n  font-family: var(--va-font-family);\n\n  &--reversed {\n    flex-direction: var(--va-infinite-scroll-reversed-flex-direction);\n  }\n\n  &__spinner {\n    &__default {\n      @include flex-center();\n\n      width: var(--va-infinite-scroll-spinner-default-width);\n      min-height: var(--va-infinite-scroll-spinner-default-min-height);\n    }\n\n    &--invisible {\n      visibility: hidden !important;\n    }\n\n    @include flex-center();\n  }\n}\n</style>\n"],"names":["_sfc_main","defineComponent","name","components","VaProgressCircle","props","load","type","Function","required","offset","Number","default","reverse","Boolean","disabled","scrollTarget","String","Object","debounce","tag","emits","setup","emit","element","shallowRef","spinnerSlotContainer","fetching","ref","error","forcedScrolling","debouncedLoad","notScrolledContentBeforeLoad","prevScrollTop","scrollTargetElement","computed","target","document","querySelector","_a","value","parentElement","body","addScrollListener","removeScrollListener","useScroll","getColor","useColors","spinnerColor","spinnerHeight","offsetHeight","computedOffset","stop","resume","onLoad","scrollTop","scrollHeight","clientHeight","scrollDelta","then","finishLoading","catch","onError","forceSetScrollTopToTarget","updateTargetElementScrollTop","isScrolledUp","isSpinnerHidden","stopErrorDisplay","sleep","watch","immediate","_hoisted_1","class","_createBlock","_resolveDynamicComponent","_ctx","role","_normalizeClass","_renderSlot","$slots","_createElementVNode","$props","key","_createVNode","_component_va_progress_circle","size","thickness","color","indeterminate"],"mappings":"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"}