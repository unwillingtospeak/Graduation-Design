{"version":3,"file":"withConfigTransport.mjs","sources":["../../../../../src/services/config-transport/withConfigTransport.ts"],"sourcesContent":["import { ComponentPublicInstance, DefineComponent } from 'vue'\nimport { createProxyComponent } from './createProxyComponent'\n\ntype WithConfigTransport<T> = T\n\nconst CLASS_COMPONENT_KEY = '__c'\n\nconst patchClassComponent = (component: { [CLASS_COMPONENT_KEY]: any }): any => {\n  component[CLASS_COMPONENT_KEY] = createProxyComponent(component[CLASS_COMPONENT_KEY])\n  return component\n}\n\n/** Allows props to be passed from vuestic config if they were not provided */\nexport const withConfigTransport = <T>(component: T): WithConfigTransport<T> => {\n  if ('setup' in component) {\n    return createProxyComponent(component as any)\n  } else if (CLASS_COMPONENT_KEY in component) {\n    // TODO: Remove this. We don't want to use class components\n    return patchClassComponent(component as any)\n  } else {\n    // Options api. We need to transform it to Composition API and then create proxy.\n    (component as any).setup = () => ({ /* Fake setup function */})\n    return createProxyComponent(component as any)\n  }\n}\n\nexport default withConfigTransport\n"],"names":["withConfigTransport","component","createProxyComponent","patchClassComponent","setup"],"mappings":"+CAKA,MAQaA,oBAA0BC,GACjC,UAAWA,EACNC,EAAqBD,GAVJ,QAWQA,EATR,CAACA,IACjBA,EAAA,IAAuBC,EAAqBD,EAA8B,KAC7EA,GASEE,CAAoBF,IAGRA,EAAAG,MAAQ,KAAkC,IACtDF,EAAqBD"}