{"version":3,"file":"color-functions.mjs","sources":["../../../../../src/services/color-config/color-functions.ts"],"sourcesContent":["// import colortranslator, { ColorTranslator as CTClass } from 'colortranslator'\nimport { ColorTranslator } from 'colortranslator'\nimport { HSLObject, ColorInput } from 'colortranslator/dist/@types'\n\n/** This is a hack for cjs and esm build when we can transpile colortranslator */\n// const ColorTranslator = CTClass || colortranslator.ColorTranslator\n\nexport const colorToRgba = (color: ColorInput, opacity: number) => {\n  return new ColorTranslator(color).setA(opacity).RGBA\n}\n\nexport const getTextColor = (color: ColorInput, darkColor = 'dark', lightColor = 'white') => {\n  const { R, G, B } = new ColorTranslator(color)\n  const isLightBackground = Math.sqrt(R * R * 0.241 + G * G * 0.691 + B * B * 0.068) > 130\n  return isLightBackground ? darkColor : lightColor\n}\n\nexport const getBoxShadowColor = (color: ColorInput) => {\n  return new ColorTranslator(color).setA(0.4).RGBA\n}\n\nexport const getHoverColor = (color: ColorInput) => {\n  return new ColorTranslator(color).setA(0.2).RGBA\n}\n\nexport const getFocusColor = (color: ColorInput) => {\n  return new ColorTranslator(color).setA(0.3).RGBA\n}\n\nexport const shiftHSLAColor = (color: ColorInput, offset: { h?: number; s?: number; l?: number; a?: number }) => {\n  const result = new ColorTranslator(color)\n\n  if (offset.h) { result.setH(result.H + offset.h) }\n\n  if (offset.s) { result.setS(result.S + offset.s) }\n\n  if (offset.l) { result.setL(result.L + offset.l) }\n\n  if (offset.a) { result.setA(result.A + offset.a) }\n\n  return result.HSLA\n}\n\nexport const setHSLAColor = (color: ColorInput, newColor: { h?: number; s?: number; l?: number; a?: number }) => {\n  const result = new ColorTranslator(color)\n\n  if (newColor.h !== undefined) { result.setH(newColor.h) }\n\n  if (newColor.s !== undefined) { result.setS(newColor.s) }\n\n  if (newColor.l !== undefined) { result.setL(newColor.l) }\n\n  if (newColor.a !== undefined) { result.setA(newColor.a) }\n\n  return result.HSLA\n}\n\n/**\n * This method guesses second color for gradient based on first one.\n * Calculation method should differ for different colors, so we split color circle\n * in zones.\n *\n * @param color\n */\nexport const shiftGradientColor = (color: ColorInput): string => {\n  const newColor = ColorTranslator.toHSLA(color, false) as HSLObject\n\n  // Gray\n  if (newColor.s < 10) {\n    return shiftHSLAColor(newColor, { h: 2, s: 5, l: 10 })\n  }\n  // Unsaturated (too pale, gray-ish, monotone)\n  // For unsaturated color, hue change does nothing.\n  if (newColor.s < 30) {\n    return shiftHSLAColor(newColor, { s: -14, l: 11 })\n  }\n  // Red\n  if ((newColor.h >= 0 && newColor.h < 44) || (newColor.h >= 285)) {\n    return shiftHSLAColor(newColor, { h: 11, s: 27, l: 8 })\n  }\n  // Yellow\n  if (newColor.h >= 44 && newColor.h < 85) {\n    return shiftHSLAColor(newColor, { h: 3, l: 9 })\n  }\n  // Green\n  if (newColor.h >= 85 && newColor.h < 165) {\n    return shiftHSLAColor(newColor, { h: 16, l: 14 })\n  }\n  // Blue\n  if (newColor.h >= 165 && newColor.h < 285) {\n    return shiftHSLAColor(newColor, { h: -15, s: 3, l: 2 })\n  }\n\n  throw new Error('This method should handle all colors. But it didn\\'t for some reason.')\n}\n\nexport const getGradientBackground = (color: string) => {\n  const colorLeft = shiftGradientColor(color)\n  const colorRight = ColorTranslator.toHSLA(color)\n\n  return `linear-gradient(to right, ${colorLeft}, ${colorRight})`\n}\n\n/**\n * Check if color is valid hsl, hsla, rga, rgba or hex color\n * Taken from https://www.regextester.com/103656\n * Check options <or> isCSSVariable(prop) <or> CSS.supports('color', prop) deleted due to problems with SSR and opacity\n * Details are in the discussion: https://github.com/epicmaxco/vuestic-ui/pull/1589\n * @param strColor\n */\nexport const isColor = (strColor: string): boolean => {\n  // Need to use Regex instead of DOM methods because we support SSR\n  const cssColorRegex = /^#([\\da-f]{3}){1,2}$|^#([\\da-f]{4}){1,2}$|(rgb|hsl)a?\\((\\s*-?\\d+%?\\s*,){2}(\\s*-?\\d+%?\\s*,?\\s*\\)?)(,\\s*(0?\\.\\d+)?|1)?\\)/\n\n  return cssColorRegex.test(strColor.toLocaleLowerCase())\n}\n\nexport const isCSSVariable = (strColor: string): boolean => /var\\(--.+\\)/.test(strColor)\n"],"names":["colorToRgba","color","opacity","ColorTranslator","setA","RGBA","getTextColor","darkColor","lightColor","R","G","B","Math","sqrt","getBoxShadowColor","getHoverColor","getFocusColor","shiftHSLAColor","offset","result","h","setH","H","s","setS","S","l","setL","L","a","A","HSLA","setHSLAColor","newColor","getGradientBackground","colorLeft","toHSLA","Error","shiftGradientColor","isColor","strColor","test","toLocaleLowerCase","isCSSVariable"],"mappings":"kDAOa,MAAAA,YAAc,CAACC,EAAmBC,IACtC,IAAIC,EAAgBF,GAAOG,KAAKF,GAASG,KAGrCC,aAAe,CAACL,EAAmBM,EAAY,OAAQC,EAAa,WAC/E,MAAMC,EAAEA,EAAGC,EAAAA,EAAAC,EAAGA,GAAM,IAAIR,EAAgBF,GAExC,OAD0BW,KAAKC,KAAKJ,EAAIA,EAAI,KAAQC,EAAIA,EAAI,KAAQC,EAAIA,EAAI,MAAS,IAC1DJ,EAAYC,GAG5BM,kBAAqBb,GACzB,IAAIE,EAAgBF,GAAOG,KAAK,IAAKC,KAGjCU,cAAiBd,GACrB,IAAIE,EAAgBF,GAAOG,KAAK,IAAKC,KAGjCW,cAAiBf,GACrB,IAAIE,EAAgBF,GAAOG,KAAK,IAAKC,KAGjCY,eAAiB,CAAChB,EAAmBiB,KAC1C,MAAAC,EAAS,IAAIhB,EAAgBF,GAUnC,OARIiB,EAAOE,GAAKD,EAAOE,KAAKF,EAAOG,EAAIJ,EAAOE,GAE1CF,EAAOK,GAAKJ,EAAOK,KAAKL,EAAOM,EAAIP,EAAOK,GAE1CL,EAAOQ,GAAKP,EAAOQ,KAAKR,EAAOS,EAAIV,EAAOQ,GAE1CR,EAAOW,GAAKV,EAAOf,KAAKe,EAAOW,EAAIZ,EAAOW,GAEvCV,EAAOY,MAGHC,aAAe,CAAC/B,EAAmBgC,KACxC,MAAAd,EAAS,IAAIhB,EAAgBF,GAUnC,YARmB,IAAfgC,EAASb,GAA0BD,EAAAE,KAAKY,EAASb,QAElC,IAAfa,EAASV,GAA0BJ,EAAAK,KAAKS,EAASV,QAElC,IAAfU,EAASP,GAA0BP,EAAAQ,KAAKM,EAASP,QAElC,IAAfO,EAASJ,GAA0BV,EAAAf,KAAK6B,EAASJ,GAE9CV,EAAOY,MA0CHG,sBAAyBjC,IAC9B,MAAAkC,EAjC0B,CAAClC,IACjC,MAAMgC,EAAW9B,EAAgBiC,OAAOnC,GAAO,GAG3C,GAAAgC,EAASV,EAAI,GACR,OAAAN,eAAegB,EAAU,CAAEb,EAAG,EAAGG,EAAG,EAAGG,EAAG,KAI/C,GAAAO,EAASV,EAAI,GACf,OAAON,eAAegB,EAAU,CAAEV,GAAQ,GAAAG,EAAG,KAG1C,GAAAO,EAASb,GAAK,GAAKa,EAASb,EAAI,IAAQa,EAASb,GAAK,IAClD,OAAAH,eAAegB,EAAU,CAAEb,EAAG,GAAIG,EAAG,GAAIG,EAAG,IAGrD,GAAIO,EAASb,GAAK,IAAMa,EAASb,EAAI,GACnC,OAAOH,eAAegB,EAAU,CAAEb,EAAG,EAAGM,EAAG,IAG7C,GAAIO,EAASb,GAAK,IAAMa,EAASb,EAAI,IACnC,OAAOH,eAAegB,EAAU,CAAEb,EAAG,GAAIM,EAAG,KAG9C,GAAIO,EAASb,GAAK,KAAOa,EAASb,EAAI,IAC7B,OAAAH,eAAegB,EAAU,CAAEb,MAAQG,EAAG,EAAGG,EAAG,IAG/C,MAAA,IAAIW,MAAM,yEAIEC,CAAmBrC,GAGrC,MAAO,6BAA6BkC,MAFjBhC,EAAgBiC,OAAOnC,OAY/BsC,QAAWC,GAEA,yHAEDC,KAAKD,EAASE,qBAGxBC,cAAiBH,GAA8B,cAAcC,KAAKD"}