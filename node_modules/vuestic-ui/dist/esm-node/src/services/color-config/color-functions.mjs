import{ColorTranslator as s}from"colortranslator";const colorToRgba=(t,e)=>new s(t).setA(e).RGBA,getTextColor=(t,e="dark",r="white")=>{const{R:o,G:a,B:n}=new s(t);return Math.sqrt(o*o*.241+a*a*.691+n*n*.068)>130?e:r},getBoxShadowColor=t=>new s(t).setA(.4).RGBA,getHoverColor=t=>new s(t).setA(.2).RGBA,getFocusColor=t=>new s(t).setA(.3).RGBA,shiftHSLAColor=(t,e)=>{const r=new s(t);return e.h&&r.setH(r.H+e.h),e.s&&r.setS(r.S+e.s),e.l&&r.setL(r.L+e.l),e.a&&r.setA(r.A+e.a),r.HSLA},setHSLAColor=(t,e)=>{const r=new s(t);return void 0!==e.h&&r.setH(e.h),void 0!==e.s&&r.setS(e.s),void 0!==e.l&&r.setL(e.l),void 0!==e.a&&r.setA(e.a),r.HSLA},getGradientBackground=t=>{const e=(t=>{const e=s.toHSLA(t,!1);if(e.s<10)return shiftHSLAColor(e,{h:2,s:5,l:10});if(e.s<30)return shiftHSLAColor(e,{s:-14,l:11});if(e.h>=0&&e.h<44||e.h>=285)return shiftHSLAColor(e,{h:11,s:27,l:8});if(e.h>=44&&e.h<85)return shiftHSLAColor(e,{h:3,l:9});if(e.h>=85&&e.h<165)return shiftHSLAColor(e,{h:16,l:14});if(e.h>=165&&e.h<285)return shiftHSLAColor(e,{h:-15,s:3,l:2});throw new Error("This method should handle all colors. But it didn't for some reason.")})(t);return`linear-gradient(to right, ${e}, ${s.toHSLA(t)})`},isColor=s=>/^#([\da-f]{3}){1,2}$|^#([\da-f]{4}){1,2}$|(rgb|hsl)a?\((\s*-?\d+%?\s*,){2}(\s*-?\d+%?\s*,?\s*\)?)(,\s*(0?\.\d+)?|1)?\)/.test(s.toLocaleLowerCase()),isCSSVariable=s=>/var\(--.+\)/.test(s);export{getGradientBackground as a,getFocusColor as b,getHoverColor as c,colorToRgba as d,getTextColor as e,setHSLAColor as f,getBoxShadowColor as g,isCSSVariable as h,isColor as i,shiftHSLAColor as s};
//# sourceMappingURL=color-functions.mjs.map
