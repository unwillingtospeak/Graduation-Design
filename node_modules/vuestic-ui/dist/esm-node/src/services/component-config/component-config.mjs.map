{"version":3,"file":"component-config.mjs","sources":["../../../../../src/services/component-config/component-config.ts"],"sourcesContent":["import { useLocalConfig } from '../../components/va-config/VaConfig'\nimport { useGlobalConfig } from '../global-config/global-config'\nimport { computed } from 'vue'\nimport type { VuesticComponentsMap } from '../../vuestic-plugin/global-components'\nimport type { DefineComponent, VNodeProps, AllowedComponentProps } from 'vue'\n\ntype VuesticComponentName = keyof VuesticComponentsMap\ntype VueDefaultPropNames = keyof (VNodeProps & AllowedComponentProps) | `on${string}`\n\nexport type PropTypes<C> = C extends { new(): { $props: infer Props } } ? Omit<Props, VueDefaultPropNames> : never\nexport type ComponentConfig = {\n  // key-value hack to avoid generics in type (like Omit, PropTypes, etc.)\n  // `key: type` as result\n  [componentName in VuesticComponentName]?: {\n    [key in keyof PropTypes<VuesticComponentsMap[componentName]>]: PropTypes<VuesticComponentsMap[componentName]>[key]\n  }\n}\n\nexport const useComponentConfigProps = <T extends DefineComponent>(component: T) => {\n  const localConfig = useLocalConfig()\n  const { globalConfig } = useGlobalConfig()\n\n  return computed(() => {\n    const globalConfigProps = {\n      ...globalConfig.value.componentsAll,\n      ...globalConfig.value.components?.[component.name as VuesticComponentName],\n    }\n\n    const localConfigProps = localConfig.value\n      .reduce((finalConfig, config) => config[component.name as VuesticComponentName]\n        ? { ...finalConfig, ...config[component.name as VuesticComponentName] }\n        : finalConfig\n      , {})\n\n    const props = { ...globalConfigProps, ...localConfigProps }\n\n    return props\n  })\n}\n\nexport type Props = Record<string, any>\n"],"names":["useComponentConfigProps","component","localConfig","useLocalConfig","globalConfig","useGlobalConfig","computed","globalConfigProps","__spreadValues","value","componentsAll","_a","components","name","localConfigProps","reduce","finalConfig","config"],"mappings":"shBAkBa,MAAAA,wBAAsDC,IACjE,MAAMC,EAAcC,KACdC,aAAEA,GAAiBC,IAEzB,OAAOC,GAAS,WACR,MAAAC,EAAoBC,iCACrBJ,EAAaK,MAAMC,eACnB,OAAaC,EAAAP,EAAAK,MAAMG,iBAAnB,EAAAD,EAAgCV,EAAUY,OAGzCC,EAAmBZ,EAAYO,MAClCM,QAAO,CAACC,EAAaC,IAAWA,EAAOhB,EAAUY,MAC9CL,iCAAKQ,GAAgBC,EAAOhB,EAAUY,OACtCG,GACF,IAIG,OAFOR,iCAAKD,GAAsBO"}