import { shallowRef, onMounted, onBeforeUnmount } from "vue";
function getTargetElement(target) {
  if (!target) {
    throw new Error("Cant find target");
  }
  return typeof target === "string" ? document.querySelector(target) : target;
}
function setupScroll(target, onScrollCallback) {
  const scrollRoot = shallowRef();
  let targetElement;
  onMounted(() => {
    targetElement = getTargetElement(target || scrollRoot.value);
    targetElement == null ? void 0 : targetElement.addEventListener("scroll", onScrollCallback);
  });
  onBeforeUnmount(() => {
    targetElement == null ? void 0 : targetElement.removeEventListener("scroll", onScrollCallback);
  });
  return scrollRoot;
}
export { setupScroll as s };
//# sourceMappingURL=useScroll.js.map
