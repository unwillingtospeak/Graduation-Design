{"version":3,"file":"useClickOutside.js","sources":["../../../../src/composables/useClickOutside.ts"],"sourcesContent":["import { Ref, unref } from 'vue'\nimport { useCaptureEvent } from './useCaptureEvent'\n\nconst checkIfElementChild = (parent: HTMLElement, child: HTMLElement | null | undefined): boolean => {\n  if (!child) { return false }\n  if (child.parentElement === parent) { return true }\n\n  return parent.contains(child)\n}\n\ntype MaybeRef<T> = T | Ref<T>\ntype MaybeArray<T> = T | T[]\n\nconst safeArray = <T>(a: MaybeArray<T>) => Array.isArray(a) ? a : [a]\n\nexport const useClickOutside = (elements: MaybeArray<MaybeRef<HTMLElement | undefined>>, cb: (el: HTMLElement) => void) => {\n  useCaptureEvent('click', (event: MouseEvent) => {\n    const clickTarget = event.target as HTMLElement\n\n    const isClickInside = safeArray(elements)\n      .some((element) => unref(element) && checkIfElementChild(unref(element) as HTMLElement, clickTarget))\n\n    if (!isClickInside) { cb(clickTarget) }\n  })\n}\n"],"names":[],"mappings":";;AAGA,MAAM,sBAAsB,CAAC,QAAqB,UAAmD;AACnG,MAAI,CAAC,OAAO;AAAS,WAAA;AAAA,EAAM;AACvB,MAAA,MAAM,kBAAkB,QAAQ;AAAS,WAAA;AAAA,EAAK;AAE3C,SAAA,OAAO,SAAS,KAAK;AAC9B;AAKA,MAAM,YAAY,CAAI,MAAqB,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;AAEvD,MAAA,kBAAkB,CAAC,UAAyD,OAAkC;AACzG,kBAAA,SAAS,CAAC,UAAsB;AAC9C,UAAM,cAAc,MAAM;AAE1B,UAAM,gBAAgB,UAAU,QAAQ,EACrC,KAAK,CAAC,YAAY,MAAM,OAAO,KAAK,oBAAoB,MAAM,OAAO,GAAkB,WAAW,CAAC;AAEtG,QAAI,CAAC,eAAe;AAAE,SAAG,WAAW;AAAA,IAAE;AAAA,EAAA,CACvC;AACH;;"}