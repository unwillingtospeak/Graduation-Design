{"version":3,"file":"useColors.js","sources":["../../../../src/composables/useColors.ts"],"sourcesContent":["import { GlobalConfig, useGlobalConfigSafe } from '../services/global-config/global-config'\nimport {\n  getBoxShadowColor,\n  getHoverColor,\n  getFocusColor,\n  getGradientBackground,\n  isColor,\n  getTextColor,\n  shiftHSLAColor,\n  setHSLAColor,\n  isCSSVariable,\n} from '../services/color-config/color-functions'\n\nexport type CssColor = string\nexport type ColorConfig = { [colorName: string]: CssColor }\n\n/**\n * You can add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useColorProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning to make sure that component own props will be used instead in case of collision.\n */\nexport const useColorProps = {\n  color: {\n    type: String,\n    default: '',\n  },\n}\n\nexport const useColors = () => {\n  const globalConfig = useGlobalConfigSafe()\n\n  if (!globalConfig) {\n    throw new Error('useColors must be used in setup function or Vuestic GlobalConfigPlugin is not registered!')\n  }\n\n  const { setGlobalConfig, getGlobalConfig } = globalConfig\n\n  const setColors = (colors: ColorConfig): void => {\n    setGlobalConfig((config: GlobalConfig) => ({\n      ...config,\n      colors: { ...config.colors, ...colors },\n    }))\n  }\n\n  const getColors = (): ColorConfig => {\n    return getGlobalConfig().colors || {}\n  }\n\n  /**\n   * Returns color from config by name or return prop if color is a valid hex, hsl, hsla, rgb or rgba color.\n   * @param prop - should be color name or color in hex, hsl, hsla, rgb or rgba format.\n   * @param preferVariables - function should return (if possible) CSS variable instead of hex (hex is needed to set opacity).\n   * @param defaultColor - this color will be used if prop is invalid.\n   */\n  const getColor = (prop?: string, defaultColor?: string, preferVariables?: boolean): CssColor => {\n    if (!defaultColor) {\n      /**\n       * Most default color - fallback when nothing else is found.\n       */\n      defaultColor = getColors().primary\n    }\n\n    const colors = getColors()\n\n    if (!prop) {\n      prop = defaultColor\n    }\n\n    if (colors[prop]) {\n      return preferVariables ? `var(--va-${prop})` : colors[prop]\n    }\n\n    if (isColor(prop)) {\n      return prop\n    }\n\n    if (preferVariables && isCSSVariable(prop)) {\n      return prop\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`'${prop}' is not a proper color! Use HEX or default color themes\n      names (https://vuestic.dev/en/styles/colors#default-color-themes)`)\n    }\n\n    return defaultColor\n  }\n\n  const colorsToCSSVariable = (colors: { [colorName: string]: string | undefined }, prefix = 'va') => {\n    return Object\n      .keys(colors)\n      .filter((key) => colors[key] !== undefined)\n      .reduce((acc: Record<string, any>, colorName: string) => {\n        acc[`--${prefix}-${colorName}`] = getColor(colors[colorName], undefined, true)\n        return acc\n      }, {})\n  }\n\n  return {\n    setColors,\n    getColors,\n    getColor,\n    getBoxShadowColor,\n    getHoverColor,\n    getFocusColor,\n    getGradientBackground,\n    getTextColor,\n    shiftHSLAColor,\n    setHSLAColor,\n    colorsToCSSVariable,\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBO,MAAM,gBAAgB;AAAA,EAC3B,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AACF;AAEO,MAAM,YAAY,MAAM;AAC7B,QAAM,eAAe;AAErB,MAAI,CAAC,cAAc;AACX,UAAA,IAAI,MAAM,2FAA2F;AAAA,EAC7G;AAEM,QAAA,EAAE,iBAAiB,oBAAoB;AAEvC,QAAA,YAAY,CAAC,WAA8B;AAC/C,oBAAgB,CAAC,WAA0B,iCACtC,SADsC;AAAA,MAEzC,QAAQ,kCAAK,OAAO,SAAW;AAAA,IAC/B,EAAA;AAAA,EAAA;AAGJ,QAAM,YAAY,MAAmB;AAC5B,WAAA,gBAAA,EAAkB,UAAU;EAAC;AAStC,QAAM,WAAW,CAAC,MAAe,cAAuB,oBAAwC;AAC9F,QAAI,CAAC,cAAc;AAIjB,qBAAe,UAAY,EAAA;AAAA,IAC7B;AAEA,UAAM,SAAS;AAEf,QAAI,CAAC,MAAM;AACF,aAAA;AAAA,IACT;AAEA,QAAI,OAAO,OAAO;AACT,aAAA,kBAAkB,YAAY,UAAU,OAAO;AAAA,IACxD;AAEI,QAAA,QAAQ,IAAI,GAAG;AACV,aAAA;AAAA,IACT;AAEI,QAAA,mBAAmB,cAAc,IAAI,GAAG;AACnC,aAAA;AAAA,IACT;AAOO,WAAA;AAAA,EAAA;AAGT,QAAM,sBAAsB,CAAC,QAAqD,SAAS,SAAS;AAClG,WAAO,OACJ,KAAK,MAAM,EACX,OAAO,CAAC,QAAQ,OAAO,SAAS,MAAS,EACzC,OAAO,CAAC,KAA0B,cAAsB;AACvD,UAAI,KAAK,UAAU,eAAe,SAAS,OAAO,YAAY,QAAW,IAAI;AACtE,aAAA;AAAA,IACT,GAAG,CAAE,CAAA;AAAA,EAAA;AAGF,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}