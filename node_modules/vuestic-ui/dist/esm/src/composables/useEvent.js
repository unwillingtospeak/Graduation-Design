import { watch, unref } from "vue";
import { u as useClientOnly } from "./useClientOnly.js";
const useEvent = (event, listener, target) => {
  const source = target && typeof target !== "boolean" ? target : useClientOnly(() => window);
  const capture = typeof target === "boolean" ? target : false;
  watch(source, (newValue, oldValue) => {
    var _a, _b;
    if (!Array.isArray(event)) {
      (_a = unref(newValue)) == null ? void 0 : _a.addEventListener(event, listener, capture);
      (_b = unref(oldValue)) == null ? void 0 : _b.removeEventListener(event, listener, capture);
    } else {
      event.forEach((e) => {
        var _a2, _b2;
        (_a2 = unref(newValue)) == null ? void 0 : _a2.addEventListener(e, listener, capture);
        (_b2 = unref(oldValue)) == null ? void 0 : _b2.removeEventListener(e, listener, capture);
      });
    }
  }, { immediate: true });
};
export { useEvent as u };
//# sourceMappingURL=useEvent.js.map
