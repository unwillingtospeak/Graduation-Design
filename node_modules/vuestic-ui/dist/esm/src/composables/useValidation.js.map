{"version":3,"file":"useValidation.js","sources":["../../../../src/composables/useValidation.ts"],"sourcesContent":["import { inject, onBeforeUnmount, onMounted, PropType, watch, ExtractPropTypes, computed } from 'vue'\nimport flatten from 'lodash/flatten.js'\nimport isFunction from 'lodash/isFunction.js'\nimport isString from 'lodash/isString.js'\n\nimport { useSyncProp } from './useSyncProp'\nimport { useFocus } from './useFocus'\nimport { FormServiceKey } from '../components/va-form/consts'\n\ntype ValidationRule<V extends any = any> = ((v: V) => any | string)\n\nconst normalizeValidationRules = (rules: string | ValidationRule[] = [], callArguments: unknown = null) => {\n  if (isString(rules)) { rules = [rules] as any }\n\n  return (rules as ValidationRule[])\n    .map((rule) => isFunction(rule) ? rule(callArguments) : rule)\n}\n\nexport const useValidationProps = {\n  modelValue: { required: false },\n  error: { type: Boolean, default: undefined },\n  errorMessages: { type: [Array, String] as PropType<string[] | string>, default: undefined },\n  errorCount: { type: [String, Number], default: 1 },\n  rules: { type: Array as PropType<ValidationRule<any>[]>, default: () => [] as any },\n  success: { type: Boolean, default: false },\n  messages: { type: [Array, String] as PropType<string[] | string>, default: () => [] },\n  immediateValidation: { type: Boolean, default: false },\n}\n\nexport type ValidationProps<V extends any> = typeof useValidationProps & {\n  modelValue: { type: PropType<V> }\n  rules: { type: PropType<ValidationRule<V>[]> }\n}\n\nexport const useValidationEmits = ['update:error', 'update:errorMessages']\n\nexport const useValidation = <V, P extends ExtractPropTypes<typeof useValidationProps>>(\n  props: P,\n  emit: (event: any, ...args: any[]) => void,\n  reset: () => any,\n  focus: () => any,\n) => {\n  const { isFocused, onFocus, onBlur } = useFocus()\n\n  const [computedError] = useSyncProp('error', props, emit, false)\n  const [computedErrorMessages] = useSyncProp('errorMessages', props, emit, [] as string[])\n\n  const resetValidation = () => {\n    computedError.value = false\n    computedErrorMessages.value = []\n  }\n\n  const validate = (): boolean => {\n    if (!props.rules || !props.rules.length) {\n      return true\n    }\n\n    let error = false\n    let errorMessages: string[] = []\n\n    const rules = flatten(props.rules)\n\n    normalizeValidationRules(rules, props.modelValue)\n      .forEach((validationResult: boolean | string) => {\n        if (isString(validationResult)) {\n          errorMessages = [...errorMessages, validationResult]\n          error = true\n        } else if (validationResult === false) {\n          error = true\n        }\n      })\n\n    computedErrorMessages.value = errorMessages\n    computedError.value = error\n\n    return !error\n  }\n\n  watch(isFocused, (newVal) => !newVal && validate())\n\n  watch(() => props.modelValue, () => validate(), { immediate: props.immediateValidation })\n\n  const context = {\n    resetValidation,\n    focus,\n    validate,\n    reset,\n    hasError: () => computedError.value,\n  }\n\n  const form = inject(FormServiceKey, undefined)\n\n  const validationAriaAttributes = computed(() => ({\n    'aria-invalid': !!computedErrorMessages.value.length,\n    'aria-errormessage': typeof computedErrorMessages.value === 'string'\n      ? computedErrorMessages.value\n      : computedErrorMessages.value.join(', '),\n  }))\n\n  onMounted(() => {\n    form?.onChildMounted(context as any)\n  })\n\n  onBeforeUnmount(() => {\n    form?.onChildUnmounted(context as any)\n  })\n\n  return {\n    computedError,\n    computedErrorMessages,\n    listeners: { onFocus, onBlur },\n    validate,\n    resetValidation,\n    validationAriaAttributes,\n  }\n}\n"],"names":["isString","isFunction","flatten"],"mappings":";;;;;AAWA,MAAM,2BAA2B,CAAC,QAAmC,IAAI,gBAAyB,SAAS;AACrG,MAAAA,WAAS,KAAK,GAAG;AAAE,YAAQ,CAAC,KAAK;AAAA,EAAS;AAEtC,SAAA,MACL,IAAI,CAAC,SAASC,aAAW,IAAI,IAAI,KAAK,aAAa,IAAI,IAAI;AAChE;AAEO,MAAM,qBAAqB;AAAA,EAChC,YAAY,EAAE,UAAU,MAAM;AAAA,EAC9B,OAAO,EAAE,MAAM,SAAS,SAAS,OAAU;AAAA,EAC3C,eAAe,EAAE,MAAM,CAAC,OAAO,MAAM,GAAkC,SAAS,OAAU;AAAA,EAC1F,YAAY,EAAE,MAAM,CAAC,QAAQ,MAAM,GAAG,SAAS,EAAE;AAAA,EACjD,OAAO,EAAE,MAAM,OAA0C,SAAS,MAAM,CAAA,EAAU;AAAA,EAClF,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,EACzC,UAAU,EAAE,MAAM,CAAC,OAAO,MAAM,GAAkC,SAAS,MAAM,GAAG;AAAA,EACpF,qBAAqB,EAAE,MAAM,SAAS,SAAS,MAAM;AACvD;AAOa,MAAA,qBAAqB,CAAC,gBAAgB,sBAAsB;AAElE,MAAM,gBAAgB,CAC3B,OACA,MACA,OACA,UACG;AACH,QAAM,EAAE,WAAW,SAAS,WAAW,SAAS;AAEhD,QAAM,CAAC,iBAAiB,YAAY,SAAS,OAAO,MAAM,KAAK;AAC/D,QAAM,CAAC,yBAAyB,YAAY,iBAAiB,OAAO,MAAM,CAAA,CAAc;AAExF,QAAM,kBAAkB,MAAM;AAC5B,kBAAc,QAAQ;AACtB,0BAAsB,QAAQ;EAAC;AAGjC,QAAM,WAAW,MAAe;AAC9B,QAAI,CAAC,MAAM,SAAS,CAAC,MAAM,MAAM,QAAQ;AAChC,aAAA;AAAA,IACT;AAEA,QAAI,QAAQ;AACZ,QAAI,gBAA0B,CAAA;AAExB,UAAA,QAAQC,UAAQ,MAAM,KAAK;AAEjC,6BAAyB,OAAO,MAAM,UAAU,EAC7C,QAAQ,CAAC,qBAAuC;AAC3C,UAAAF,WAAS,gBAAgB,GAAG;AACd,wBAAA,CAAC,GAAG,eAAe,gBAAgB;AAC3C,gBAAA;AAAA,MAAA,WACC,qBAAqB,OAAO;AAC7B,gBAAA;AAAA,MACV;AAAA,IAAA,CACD;AAEH,0BAAsB,QAAQ;AAC9B,kBAAc,QAAQ;AAEtB,WAAO,CAAC;AAAA,EAAA;AAGV,QAAM,WAAW,CAAC,WAAW,CAAC,UAAU,UAAU;AAE5C,QAAA,MAAM,MAAM,YAAY,MAAM,YAAY,EAAE,WAAW,MAAM,oBAAA,CAAqB;AAExF,QAAM,UAAU;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU,MAAM,cAAc;AAAA,EAAA;AAG1B,QAAA,OAAO,OAAO,gBAAgB,MAAS;AAEvC,QAAA,2BAA2B,SAAS,MAAO;AAAA,IAC/C,gBAAgB,CAAC,CAAC,sBAAsB,MAAM;AAAA,IAC9C,qBAAqB,OAAO,sBAAsB,UAAU,WACxD,sBAAsB,QACtB,sBAAsB,MAAM,KAAK,IAAI;AAAA,EACzC,EAAA;AAEF,YAAU,MAAM;AACd,iCAAM,eAAe;AAAA,EAAc,CACpC;AAED,kBAAgB,MAAM;AACpB,iCAAM,iBAAiB;AAAA,EAAc,CACtC;AAEM,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA,WAAW,EAAE,SAAS,OAAO;AAAA,IAC7B;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}