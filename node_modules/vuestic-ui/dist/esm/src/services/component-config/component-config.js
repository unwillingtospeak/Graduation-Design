var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
import { u as useLocalConfig } from "../../components/va-config/VaConfig.js";
import { a as useGlobalConfig } from "../global-config/global-config.js";
import { computed } from "vue";
const useComponentConfigProps = (component) => {
  const localConfig = useLocalConfig();
  const { globalConfig } = useGlobalConfig();
  return computed(() => {
    var _a;
    const globalConfigProps = __spreadValues(__spreadValues({}, globalConfig.value.componentsAll), (_a = globalConfig.value.components) == null ? void 0 : _a[component.name]);
    const localConfigProps = localConfig.value.reduce((finalConfig, config) => config[component.name] ? __spreadValues(__spreadValues({}, finalConfig), config[component.name]) : finalConfig, {});
    const props = __spreadValues(__spreadValues({}, globalConfigProps), localConfigProps);
    return props;
  });
};
export { useComponentConfigProps as u };
//# sourceMappingURL=component-config.js.map
