import { watch } from "vue";
import { i as isServer } from "../../../utils/ssr-utils.js";
import { g as getGlobalProperty } from "../../../vuestic-plugin/utils/global-properties.js";
const setCSSVariable = (name, value, root) => {
  root.style.setProperty(`--va-${name}`, value);
};
const createColorConfigPlugin = (app) => {
  const globalConfig = getGlobalProperty(app, "$vaConfig").globalConfig;
  const renderCSSVariables = (colors = globalConfig.value.colors) => {
    if (!colors) {
      return;
    }
    const colorNames = Object.keys(colors);
    return colorNames.map((key) => `--va-${key}: ${colors[key]}`).join(";");
  };
  const updateColors = (newValue) => {
    if (!newValue) {
      return;
    }
    if (isServer()) {
      return;
    }
    const root = document.documentElement;
    const colorNames = Object.keys(newValue);
    colorNames.forEach((key) => {
      setCSSVariable(key, newValue[key], root);
    });
  };
  updateColors(globalConfig.value.colors);
  watch(() => globalConfig.value.colors, (newValue) => {
    updateColors(newValue);
  }, { immediate: true, deep: true });
  return {
    renderCSSVarialbes: renderCSSVariables,
    renderCSSVariables,
    updateColors
  };
};
export { createColorConfigPlugin as c };
//# sourceMappingURL=create-color-config-plugin.js.map
