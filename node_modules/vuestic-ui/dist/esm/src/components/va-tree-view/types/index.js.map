{"version":3,"file":"index.js","sources":["../../../../../../src/components/va-tree-view/types/index.ts"],"sourcesContent":["import { ComponentPublicInstance } from 'vue'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nexport const TreeViewKey = Symbol('TreeView')\nexport const TreeCategoryKey = Symbol('TreeCategory')\nexport const TreeNodeKey = Symbol('TreeNode')\n\nexport interface TreeNodeCommon<T> {\n  onChildMounted: (value: T) => void,\n  onChildUnmounted: (value: T) => void,\n}\n\nexport interface TreeCategoryProps {\n  label: string | number,\n  isOpen: boolean,\n  icon: string,\n  color: string,\n}\n\nexport interface TreeViewMethods<T> {\n  onChildMounted: (value: T) => void,\n  onChildUnmounted: (value: T) => void,\n}\n\nexport interface TreeCategory {\n  treeView: TreeViewMethods<TreeCategory>,\n  nodes: ComponentPublicInstance<TreeCategory | typeof VaTreeNode>[],\n  isOpenCached: boolean | undefined,\n  collapse: () => void,\n  expand: () => void,\n  toggle: (e: MouseEvent) => void,\n  onChildMounted: (node: ComponentPublicInstance<TreeCategory | typeof VaTreeNode>) => void,\n  onChildUnmounted: (removableNode: ComponentPublicInstance<TreeCategory | typeof VaTreeNode>) => void,\n}\n\nexport type TreeNodeComponent = ComponentPublicInstance<TreeCategory | typeof VaTreeNode>\n\nexport interface ITreeNodeProps {\n  highlighted: boolean,\n  icon: string,\n  iconRight: string,\n  color: string,\n}\n\nexport interface TreeViewProps {\n  color: string\n}\n\nexport interface TreeView {\n  collapse: () => void,\n  expand: () => void,\n}\n\nexport interface TreeViewProvide extends TreeViewProps {\n  onChildMounted: (category: TreeCategory) => void\n  onChildUnmounted: (removableCategory: TreeCategory) => void\n}\n"],"names":[],"mappings":"AAGa,MAAA,cAAc,OAAO,UAAU;AAC/B,MAAA,kBAAkB,OAAO,cAAc;AACvC,MAAA,cAAc,OAAO,UAAU;;"}