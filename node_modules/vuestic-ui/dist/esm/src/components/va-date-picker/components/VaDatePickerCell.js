import { defineComponent, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, renderSlot } from "vue";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.js";
var VaDatePickerCell_vue_vue_type_style_index_0_lang = "";
const _sfc_main = defineComponent({
  name: "VaDatePickerCell",
  props: {
    otherMonth: { type: Boolean, default: false },
    today: { type: Boolean, default: false },
    inRange: { type: Boolean, default: false },
    disabled: { type: Boolean, default: false },
    selected: { type: Boolean, default: false },
    weekend: { type: Boolean, default: false },
    hidden: { type: Boolean, default: false },
    focused: { type: Boolean, default: false },
    highlightWeekend: { type: Boolean, default: false },
    highlightToday: { type: Boolean, default: false },
    readonly: { type: Boolean, default: false }
  },
  emits: ["click"],
  setup(props, { emit }) {
    const onClick = () => {
      if (!props.disabled) {
        emit("click");
      }
    };
    return {
      onClick
    };
  }
});
const _hoisted_1 = {
  key: 0,
  class: "va-date-picker-cell va-date-picker-cell_clear"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return _ctx.hidden ? (openBlock(), createElementBlock("div", _hoisted_1)) : (openBlock(), createElementBlock("div", {
    key: 1,
    class: normalizeClass(["va-date-picker-cell", {
      "va-date-picker-cell_other-month": _ctx.otherMonth,
      "va-date-picker-cell_today": _ctx.highlightToday && _ctx.today,
      "va-date-picker-cell_in-range": _ctx.inRange,
      "va-date-picker-cell_disabled": _ctx.disabled,
      "va-date-picker-cell_highlighted-weekend": _ctx.highlightWeekend && _ctx.weekend,
      "va-date-picker-cell_selected": _ctx.selected,
      "va-date-picker-cell_focused": _ctx.focused,
      "va-date-picker-cell_readonly": _ctx.readonly
    }]),
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onClick && _ctx.onClick(...args)),
    onKeypress: _cache[1] || (_cache[1] = withKeys(withModifiers((...args) => _ctx.onClick && _ctx.onClick(...args), ["prevent", "stop"]), ["space", "enter"]))
  }, [
    renderSlot(_ctx.$slots, "default")
  ], 34));
}
var VaDatePickerCell = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { VaDatePickerCell as V };

import './VaDatePickerCell.css';
//# sourceMappingURL=VaDatePickerCell.js.map
