{"version":3,"file":"VaMonthPicker.js","sources":["../../../../../../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      class=\"va-month-picker__month-wrapper\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"readonly\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nimport { DatePickerMode, DatePickerView, DatePickerModelValue } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 4 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6); // 7 days + gap\n  width: 100%;\n\n  &__month-wrapper {\n    border-radius: var(--va-date-picker-cell-radius);\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n}\n</style>\n"],"names":["_openBlock","_createElementBlock","_mergeProps","_Fragment","_renderList","_createVNode","_renderSlot","_normalizeProps","_guardReactiveProps","_createTextVNode","_toDisplayString"],"mappings":"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"}