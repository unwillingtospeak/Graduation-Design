import { defineComponent, ref, resolveComponent, openBlock, createBlock, normalizeClass, withCtx, createVNode, createElementVNode, createElementBlock, toDisplayString, createCommentVNode, withModifiers, withKeys } from "vue";
import { u as useBem } from "../../../composables/useBem.js";
import { a as useFocus } from "../../../composables/useFocus.js";
import "../../../../vendor.js";
import "colortranslator";
import "../../../composables/useDropdown.js";
import { u as useStrictInject } from "../../../composables/useStrictInject.js";
import { V as VaFileUploadKey } from "../types.js";
import "../../va-accordion/index.js";
import "../../va-affix/index.js";
import "../../va-alert/index.js";
import "../../va-app-bar/index.js";
import "../../va-avatar/index.js";
import "../../va-backtop/index.js";
import "../../va-badge/index.js";
import "../../va-breadcrumbs/index.js";
import "../../va-button-dropdown/index.js";
import "../../va-button-group/index.js";
import "../../va-button-toggle/index.js";
import { V as VaButton } from "../../va-button/index.js";
import "../../va-card/index.js";
import "../../va-carousel/index.js";
import "../../va-checkbox/index.js";
import "../../va-chip/index.js";
import "../../va-collapse/index.js";
import "../../va-color-indicator/index.js";
import "../../va-color-input/index.js";
import "../../va-color-palette/index.js";
import "../../va-config/VaConfig.js";
import "../../va-content/index.js";
import "../../va-counter/index.js";
import "../../va-data-table/index.js";
import "../../va-date-input/index.js";
import "../../va-date-picker/index.js";
import "../../va-divider/index.js";
import "../../va-dropdown/index.js";
import "../index.js";
import "../../va-form/index.js";
import "../../va-hover/index.js";
import "../../va-icon/index.js";
import "../../va-image/index.js";
import "../../va-infinite-scroll/index.js";
import "../../va-inner-loading/index.js";
import "../../va-input/index.js";
import { V as VaListItem, a as VaListItemSection } from "../../va-list/index.js";
import "../../va-modal/VaModal.js";
import "../../va-navbar/index.js";
import "../../va-option-list/index.js";
import "../../va-pagination/index.js";
import "../../va-parallax/index.js";
import "../../va-popover/index.js";
import "../../va-progress-bar/index.js";
import "../../va-progress-circle/index.js";
import "../../va-radio/index.js";
import "../../va-rating/index.js";
import "../../va-select/index.js";
import "../../va-separator/VaSeparator.js";
import "../../va-sidebar/index.js";
import "../../va-slider/index.js";
import "../../va-spacer/VaSpacer.js";
import "../../va-switch/index.js";
import "../../va-toast/index.js";
import "../../va-tabs/index.js";
import "../../va-time-input/index.js";
import "../../va-time-picker/index.js";
import "../../va-timeline/index.js";
import "../../va-tree-view/index.js";
import { V as VaFileUploadUndo } from "../VaFileUploadUndo/index.js";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.js";
var VaFileUploadListItem_vue_vue_type_style_index_0_lang = "";
const INJECTION_ERROR_MESSAGE = "The VaFileUploadListItem component should be used in the context of VaFileUpload component";
const _sfc_main = defineComponent({
  name: "VaFileUploadListItem",
  components: {
    VaListItem,
    VaListItemSection,
    VaFileUploadUndo,
    VaButton
  },
  emits: ["remove"],
  props: {
    file: { type: Object, default: null },
    color: { type: String, default: "success" }
  },
  setup(props, { emit }) {
    const {
      undo,
      disabled,
      undoDuration
    } = useStrictInject(VaFileUploadKey, INJECTION_ERROR_MESSAGE);
    const { onFocus, onBlur } = useFocus();
    const removed = ref(false);
    const removeFile = () => {
      var _a;
      if (undo.value) {
        removed.value = true;
        setTimeout(() => {
          if (removed.value) {
            emit("remove");
            removed.value = false;
          }
        }, (_a = undoDuration.value) != null ? _a : 0);
      } else {
        emit("remove");
        removed.value = false;
      }
    };
    const recoverFile = () => {
      removed.value = false;
    };
    const computedClasses = useBem("va-file-upload-list-item", () => ({
      undo: removed.value
    }));
    return {
      undo,
      removed,
      disabled,
      computedClasses,
      onBlur,
      onFocus,
      removeFile,
      recoverFile
    };
  }
});
const _hoisted_1 = { class: "va-file-upload-list-item__content" };
const _hoisted_2 = {
  key: 0,
  class: "va-file-upload-list-item__name"
};
const _hoisted_3 = { class: "va-file-upload-list-item__size" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_file_upload_undo = resolveComponent("va-file-upload-undo");
  const _component_va_list_item_section = resolveComponent("va-list-item-section");
  const _component_va_button = resolveComponent("va-button");
  const _component_va_list_item = resolveComponent("va-list-item");
  return openBlock(), createBlock(_component_va_list_item, {
    class: normalizeClass(["va-file-upload-list-item", _ctx.computedClasses]),
    tabindex: "-1",
    disabled: _ctx.disabled,
    "aria-disabled": _ctx.disabled
  }, {
    default: withCtx(() => [
      _ctx.removed && _ctx.undo ? (openBlock(), createBlock(_component_va_list_item_section, { key: 0 }, {
        default: withCtx(() => [
          createVNode(_component_va_file_upload_undo, { onRecover: _ctx.recoverFile }, null, 8, ["onRecover"])
        ]),
        _: 1
      })) : (openBlock(), createBlock(_component_va_list_item_section, { key: 1 }, {
        default: withCtx(() => [
          createElementVNode("div", _hoisted_1, [
            _ctx.file && _ctx.file.name ? (openBlock(), createElementBlock("div", _hoisted_2, toDisplayString(_ctx.file && _ctx.file.name), 1)) : createCommentVNode("", true),
            createElementVNode("div", _hoisted_3, toDisplayString(_ctx.file && _ctx.file.size), 1),
            !_ctx.disabled ? (openBlock(), createBlock(_component_va_button, {
              key: 1,
              flat: "",
              color: "danger",
              icon: "clear",
              class: "va-file-upload-list-item__delete",
              "aria-label": "remove file",
              onClick: withModifiers(_ctx.removeFile, ["stop"]),
              onKeydown: [
                withKeys(withModifiers(_ctx.removeFile, ["stop"]), ["enter"]),
                withKeys(withModifiers(_ctx.removeFile, ["stop"]), ["space"])
              ],
              onFocus: _ctx.onFocus,
              onBlur: _ctx.onBlur
            }, null, 8, ["onClick", "onKeydown", "onFocus", "onBlur"])) : createCommentVNode("", true)
          ])
        ]),
        _: 1
      }))
    ]),
    _: 1
  }, 8, ["class", "disabled", "aria-disabled"]);
}
var _VaFileUploadListItem = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaFileUploadListItem as _ };

import './VaFileUploadListItem.css';
//# sourceMappingURL=VaFileUploadListItem.js.map
