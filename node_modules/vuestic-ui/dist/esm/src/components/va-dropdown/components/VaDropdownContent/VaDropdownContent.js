import { defineComponent, toRef, computed, openBlock, createElementBlock, normalizeStyle, renderSlot } from "vue";
import "../../../../../vendor.js";
import { u as useColors } from "../../../../composables/useColors.js";
import "../../../../composables/useDropdown.js";
import { u as useTextColor } from "../../../../composables/useTextColor.js";
import { _ as _export_sfc } from "../../../../../plugin-vue_export-helper.js";
var VaDropdownContent_vue_vue_type_style_index_0_lang = "";
const _sfc_main = defineComponent({
  name: "VaDropdownContent",
  props: {
    noPadding: { type: Boolean, default: false },
    background: { type: String, default: "white" },
    textColor: { type: String }
  },
  setup(props) {
    const { getColor } = useColors();
    const { textColorComputed } = useTextColor(toRef(props, "background"));
    const computedStyle = computed(() => ({
      background: getColor(props.background, void 0, true),
      color: textColorComputed.value,
      padding: props.noPadding ? 0 : void 0
    }));
    return { computedStyle };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: "va-dropdown__content",
    style: normalizeStyle(_ctx.computedStyle),
    role: "listbox"
  }, [
    renderSlot(_ctx.$slots, "default")
  ], 4);
}
var _VaDropdownContent = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaDropdownContent as _ };

import './VaDropdownContent.css';
//# sourceMappingURL=VaDropdownContent.js.map
