import { ref, computed, watch } from "vue";
function usePaginatedRows(props, rows) {
  const animationName = ref("table-transition-shuffle");
  const oldRowsLength = ref(rows.value.length);
  const isDifferentRowLength = computed(() => rows.value.length !== oldRowsLength.value);
  watch(rows, (newRows) => {
    const animationType = isDifferentRowLength.value || newRows.length > 50 ? "fade" : "shuffle";
    animationName.value = props.animated ? `table-transition-${animationType}` : "";
    oldRowsLength.value = newRows.length;
  });
  watch(() => props.currentPage, () => {
    if (!isDifferentRowLength.value) {
      animationName.value = props.animated ? "table-transition-shuffle" : "";
    }
  });
  return animationName;
}
export { usePaginatedRows as u };
//# sourceMappingURL=useAnimationName.js.map
