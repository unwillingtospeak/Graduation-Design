{"version":3,"file":"useFilterable.js","sources":["../../../../../../src/components/va-data-table/hooks/useFilterable.ts"],"sourcesContent":["import { Ref, watch, computed } from 'vue'\n\nimport type { DataTableRow, DataTableFilterMethod, DataTableItem } from '../types'\n\ninterface useFilterableProps {\n  filter: string\n  filterMethod: DataTableFilterMethod | undefined\n  [prop: string]: unknown\n}\n\nexport type TFilteredArgs = { items: DataTableItem[], itemsIndexes: number[] }\nexport type TFilterableEmits = (event: 'filtered', arg: TFilteredArgs) => void\n\nexport default function useFilterable (\n  rawRows: Ref<DataTableRow[]>,\n  props: useFilterableProps,\n  emit: TFilterableEmits,\n) {\n  const filteredRows = computed<DataTableRow[]>(() => {\n    if (!rawRows.value.length) {\n      return rawRows.value\n    }\n\n    if (props.filter === '' && !props.filterMethod) {\n      return rawRows.value\n    }\n\n    return rawRows.value.filter(row => row.cells.some(cell => {\n      return typeof props.filterMethod === 'function'\n        ? props.filterMethod(cell.source)\n        : cell.value.toLowerCase().includes(props.filter.toLowerCase())\n    }))\n  })\n\n  watch(filteredRows, () => {\n    emit('filtered', {\n      items: filteredRows.value.map(row => row.source),\n      itemsIndexes: filteredRows.value.map(row => row.initialIndex),\n    })\n  })\n\n  return {\n    filteredRows,\n  }\n}\n"],"names":[],"mappings":";AAcE,uBAAA,SACA,OACA,MACA;AACM,QAAA,eAAe,SAAyB,MAAM;AAC9C,QAAA,CAAC,QAAQ,MAAM,QAAQ;AACzB,aAAO,QAAQ;AAAA,IACjB;AAEA,QAAI,MAAM,WAAW,MAAM,CAAC,MAAM,cAAc;AAC9C,aAAO,QAAQ;AAAA,IACjB;AAEA,WAAO,QAAQ,MAAM,OAAO,SAAO,IAAI,MAAM,KAAK,CAAQ,SAAA;AACxD,aAAO,OAAO,MAAM,iBAAiB,aACjC,MAAM,aAAa,KAAK,MAAM,IAC9B,KAAK,MAAM,cAAc,SAAS,MAAM,OAAO,aAAa;AAAA,IACjE,CAAA,CAAC;AAAA,EAAA,CACH;AAED,QAAM,cAAc,MAAM;AACxB,SAAK,YAAY;AAAA,MACf,OAAO,aAAa,MAAM,IAAI,CAAA,QAAO,IAAI,MAAM;AAAA,MAC/C,cAAc,aAAa,MAAM,IAAI,CAAA,QAAO,IAAI,YAAY;AAAA,IAAA,CAC7D;AAAA,EAAA,CACF;AAEM,SAAA;AAAA,IACL;AAAA,EAAA;AAEJ;;"}