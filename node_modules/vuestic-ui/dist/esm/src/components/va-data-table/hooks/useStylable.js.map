{"version":3,"file":"useStylable.js","sources":["../../../../../../src/components/va-data-table/hooks/useStylable.ts"],"sourcesContent":["import { computed } from 'vue'\n\nimport { safeCSSLength } from '../../../utils/css-utils'\nimport { useColors } from '../../../composables'\n\nimport type {\n  DataTableColumnInternal,\n  DataTableColumnClass,\n  DataTableColumnStyle,\n  DataTableCell,\n} from '../types'\n\nconst prefix = '--va-data-table'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\n\ninterface useStylableProps {\n  selectable: boolean\n  selectedColor: string\n  allowFooterSorting: boolean\n  stickyHeader: boolean\n  stickyFooter: boolean\n  height: string | number | undefined\n}\n\nconst getClass = (classes: DataTableColumnClass) => isFunction(classes) ? classes() : classes\nconst getStyle = (styles: DataTableColumnStyle) => isFunction(styles) ? styles() : styles\n\nexport default function useStyleable (props: useStylableProps) {\n  const { getColor, getFocusColor, getHoverColor, shiftHSLAColor } = useColors()\n\n  const color = computed(() => getColor(props.selectedColor))\n\n  const rowCSSVariables = computed(() => ({\n    [`${prefix}-hover-color`]: getHoverColor(color.value),\n    [`${prefix}-selected-color`]: props.selectable ? getFocusColor(color.value) : undefined,\n  }))\n\n  const stickyCSSVariables = computed(() => ({\n    [`${prefix}-scroll-table-color`]: (props.height || props.stickyHeader || props.stickyFooter) && shiftHSLAColor(color.value, { l: 40 }),\n    [`${prefix}-scroll-table-height`]: props.height ? safeCSSLength(props.height) : undefined,\n  }))\n\n  const getHeaderCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-width`]: column.width && safeCSSLength(column.width),\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: column.sortable ? 'pointer' : 'default',\n  })\n\n  const getCellCSSVariables = (cell: DataTableCell) => ({\n    [`${prefix}-align`]: cell.column.tdAlign,\n    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign,\n  })\n\n  const getFooterCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? 'pointer' : 'default',\n  })\n\n  return {\n    rowCSSVariables,\n    stickyCSSVariables,\n    getHeaderCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getClass,\n    getStyle,\n  }\n}\n"],"names":[],"mappings":";;;;;AAYA,MAAM,SAAS;AAEf,MAAM,aAAa,CAAC,QAAkC,OAAO,QAAQ;AAWrE,MAAM,WAAW,CAAC,YAAkC,WAAW,OAAO,IAAI,QAAY,IAAA;AACtF,MAAM,WAAW,CAAC,WAAiC,WAAW,MAAM,IAAI,OAAW,IAAA;AAEnF,sBAAsC,OAAyB;AAC7D,QAAM,EAAE,UAAU,eAAe,eAAe,mBAAmB;AAEnE,QAAM,QAAQ,SAAS,MAAM,SAAS,MAAM,aAAa,CAAC;AAEpD,QAAA,kBAAkB,SAAS,MAAO;AAAA,KACrC,GAAG,uBAAuB,cAAc,MAAM,KAAK;AAAA,KACnD,GAAG,0BAA0B,MAAM,aAAa,cAAc,MAAM,KAAK,IAAI;AAAA,EAC9E,EAAA;AAEI,QAAA,qBAAqB,SAAS,MAAO;AAAA,KACxC,GAAG,8BAAqC,OAAA,UAAU,MAAM,gBAAgB,MAAM,iBAAiB,eAAe,MAAM,OAAO,EAAE,GAAG,IAAI;AAAA,KACpI,GAAG,+BAA+B,MAAM,SAAS,cAAc,MAAM,MAAM,IAAI;AAAA,EAChF,EAAA;AAEI,QAAA,wBAAwB,CAAC,WAAqC;AAAA,KACjE,GAAG,iBAAiB,OAAO,SAAS,cAAc,OAAO,KAAK;AAAA,KAC9D,GAAG,iBAAiB,OAAO;AAAA,KAC3B,GAAG,0BAA0B,OAAO;AAAA,KACpC,GAAG,kBAAkB,OAAO,WAAW,YAAY;AAAA,EAAA;AAGhD,QAAA,sBAAsB,CAAC,SAAyB;AAAA,KACnD,GAAG,iBAAiB,KAAK,OAAO;AAAA,KAChC,GAAG,0BAA0B,KAAK,OAAO;AAAA,EAAA;AAGtC,QAAA,wBAAwB,CAAC,WAAqC;AAAA,KACjE,GAAG,iBAAiB,OAAO;AAAA,KAC3B,GAAG,0BAA0B,OAAO;AAAA,KACpC,GAAG,kBAAkB,MAAM,sBAAsB,OAAO,WAAW,YAAY;AAAA,EAAA;AAG3E,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;;"}