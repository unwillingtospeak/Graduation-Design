{"version":3,"file":"useBinding.js","sources":["../../../../../../src/components/va-data-table/hooks/useBinding.ts"],"sourcesContent":["import type {\n  DataTableCell,\n  DataTableRow,\n  DataTableRowBind,\n  DataTableCellBind,\n} from '../types'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\nconst isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object'\n\ninterface useBindingProps {\n  rowBind?: DataTableRowBind\n  cellBind?: DataTableCellBind\n}\n\nexport default function useBinding (props: useBindingProps) {\n  const getRowBind = (row: DataTableRow) => (\n    isFunction(props.rowBind)\n      ? props.rowBind(row.source, row.initialIndex)\n      : isObject(props.rowBind)\n        ? props.rowBind\n        : {}\n  ) as Record<string, string>\n\n  const getCellBind = (cell: DataTableCell, row: DataTableRow) => (\n    isFunction(props.cellBind)\n      ? props.cellBind(cell.source, row.source, cell.column, row.initialIndex)\n      : isObject(props.cellBind)\n        ? props.cellBind\n        : {}\n  ) as Record<string, string>\n\n  return {\n    getRowBind,\n    getCellBind,\n  }\n}\n"],"names":[],"mappings":"AAOA,MAAM,aAAa,CAAC,QAAkC,OAAO,QAAQ;AACrE,MAAM,WAAW,CAAC,QAA0C,QAAQ,QAAQ,OAAO,QAAQ;AAO3F,oBAAoC,OAAwB;AACpD,QAAA,aAAa,CAAC,QAClB,WAAW,MAAM,OAAO,IACpB,MAAM,QAAQ,IAAI,QAAQ,IAAI,YAAY,IAC1C,SAAS,MAAM,OAAO,IACpB,MAAM,UACN;AAGF,QAAA,cAAc,CAAC,MAAqB,QACxC,WAAW,MAAM,QAAQ,IACrB,MAAM,SAAS,KAAK,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,YAAY,IACrE,SAAS,MAAM,QAAQ,IACrB,MAAM,WACN,CAAA;AAGD,SAAA;AAAA,IACL;AAAA,IACA;AAAA,EAAA;AAEJ;;"}