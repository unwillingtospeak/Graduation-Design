import { computed } from "vue";
import { s as safeCSSLength } from "../../../utils/css-utils.js";
import "../../../../vendor.js";
import { u as useColors } from "../../../composables/useColors.js";
import "../../../composables/useDropdown.js";
const prefix = "--va-data-table";
const isFunction = (val) => typeof val === "function";
const getClass = (classes) => isFunction(classes) ? classes() : classes;
const getStyle = (styles) => isFunction(styles) ? styles() : styles;
function useStyleable(props) {
  const { getColor, getFocusColor, getHoverColor, shiftHSLAColor } = useColors();
  const color = computed(() => getColor(props.selectedColor));
  const rowCSSVariables = computed(() => ({
    [`${prefix}-hover-color`]: getHoverColor(color.value),
    [`${prefix}-selected-color`]: props.selectable ? getFocusColor(color.value) : void 0
  }));
  const stickyCSSVariables = computed(() => ({
    [`${prefix}-scroll-table-color`]: (props.height || props.stickyHeader || props.stickyFooter) && shiftHSLAColor(color.value, { l: 40 }),
    [`${prefix}-scroll-table-height`]: props.height ? safeCSSLength(props.height) : void 0
  }));
  const getHeaderCSSVariables = (column) => ({
    [`${prefix}-width`]: column.width && safeCSSLength(column.width),
    [`${prefix}-align`]: column.thAlign,
    [`${prefix}-vertical-align`]: column.thVerticalAlign,
    [`${prefix}-cursor`]: column.sortable ? "pointer" : "default"
  });
  const getCellCSSVariables = (cell) => ({
    [`${prefix}-align`]: cell.column.tdAlign,
    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign
  });
  const getFooterCSSVariables = (column) => ({
    [`${prefix}-align`]: column.thAlign,
    [`${prefix}-vertical-align`]: column.thVerticalAlign,
    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? "pointer" : "default"
  });
  return {
    rowCSSVariables,
    stickyCSSVariables,
    getHeaderCSSVariables,
    getCellCSSVariables,
    getFooterCSSVariables,
    getClass,
    getStyle
  };
}
export { useStyleable as u };
//# sourceMappingURL=useStylable.js.map
