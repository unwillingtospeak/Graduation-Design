{"version":3,"file":"VaSelectOptionList.js","sources":["../../../../../../src/components/va-select/VaSelectOptionList/VaSelectOptionList.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-select-option-list\"\n    :tabindex=\"tabindex\"\n    @keydown.up.stop.prevent=\"hoverPreviousOption\"\n    @keydown.left.stop.prevent=\"hoverPreviousOption\"\n    @keydown.down.stop.prevent=\"hoverNextOption\"\n    @keydown.right.stop.prevent=\"hoverNextOption\"\n    @scroll.passive=\"onScroll\"\n  >\n    <template\n      v-for=\"(options, groupName) in optionGroups\"\n      :key=\"groupName\"\n    >\n      <span\n        v-if=\"groupName !== '_noGroup'\"\n        class=\"va-select-option-list__group-name\"\n      >\n        {{ groupName }}\n      </span>\n      <div\n        v-for=\"option in options\"\n        :key=\"$props.getTrackBy(option)\"\n        :ref=\"setItemRef(option)\"\n        role=\"option\"\n        :aria-selected=\"!!$props.getSelectedState(option)\"\n        :class=\"getOptionClass(option)\"\n        :style=\"getOptionStyle(option)\"\n        @click=\"selectOption(option)\"\n        @mouseover=\"updateHoveredOption(option)\"\n      >\n        <va-icon\n          v-if=\"getOptionIcon(option)\"\n          size=\"small\"\n          class=\"va-select-option-list__option--icon\"\n          :name=\"getOptionIcon(option)\"\n        />\n        <span>{{ getText(option) }}</span>\n        <va-icon\n          v-show=\"$props.getSelectedState(option)\"\n          class=\"va-select-option-list__option--selected-icon\"\n          size=\"small\"\n          name=\"done\"\n          :color=\"getColor($props.color)\"\n        />\n      </div>\n    </template>\n    <div\n      v-if=\"!filteredOptions.length\"\n      class=\"va-select-option-list no-options\"\n    >\n      {{ noOptionsText }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, watch, ref, computed, ComponentPublicInstance, shallowRef } from 'vue'\n\nimport { scrollToElement } from '../../../utils/scroll-to-element'\nimport { useColors, useColorProps, SelectableOption } from '../../../composables'\n\nimport { VaIcon } from '../../va-icon'\n\nexport default defineComponent({\n  name: 'VaSelectOptionList',\n  components: { VaIcon },\n  emits: [\n    'select-option',\n    'update:hoveredOption',\n    'no-previous-option-to-hover',\n    'scroll-bottom',\n  ],\n  props: {\n    ...useColorProps,\n    options: { type: Array as PropType<SelectableOption[]>, default: () => [] },\n    noOptionsText: { type: String, default: 'Items not found' },\n    getSelectedState: { type: Function as PropType<(option: SelectableOption) => boolean>, required: true },\n    getText: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    getTrackBy: { type: Function as PropType<(option: SelectableOption) => number>, required: true },\n    getGroupBy: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    multiple: { type: Boolean, default: false },\n    search: { type: String, default: '' },\n    tabindex: { type: Number, default: 0 },\n    hoveredOption: {\n      type: [String, Number, Object] as PropType<SelectableOption | null>,\n      default: null,\n    },\n  },\n  setup (props, { emit }) {\n    const { getColor, getHoverColor } = useColors()\n\n    const rootElement = shallowRef<HTMLElement>()\n    const itemRefs = ref<Record<number, HTMLElement>>({})\n\n    const onScroll = (event: UIEvent) => {\n      const target = event.target as Element\n      if (!target) { return }\n\n      if (target.scrollTop + target.clientHeight === target.scrollHeight) {\n        emit('scroll-bottom')\n      }\n    }\n\n    const beforeUpdate = () => { itemRefs.value = {} }\n\n    const setItemRef = (option: SelectableOption) => (el: Element | null | ComponentPublicInstance) => {\n      if (el) {\n        itemRefs.value[props.getTrackBy(option)] = el as HTMLElement\n      }\n    }\n\n    const hoveredOptionComputed = computed({\n      get: () => props.hoveredOption || null,\n      set: (value: SelectableOption | null) => emit('update:hoveredOption', value),\n    })\n\n    const filteredOptions = computed(() => {\n      if (!props.search) {\n        return props.options\n      }\n\n      return props.options.filter((option: SelectableOption) => {\n        const optionText = props.getText(option).toString().toUpperCase()\n        const search = props.search.toUpperCase()\n        return optionText.includes(search)\n      })\n    })\n\n    const optionGroups = computed(() => filteredOptions.value.reduce((groups: Record<string, SelectableOption[]>, option) => {\n      if (typeof option !== 'object' || !option.group) {\n        groups._noGroup.push(option)\n      } else {\n        const groupBy = props.getGroupBy(option)\n\n        if (!groups[groupBy]) { groups[groupBy] = [] }\n\n        groups[groupBy].push(option)\n      }\n\n      return groups\n    }, { _noGroup: [] }))\n\n    const selectOption = (option: SelectableOption) => emit('select-option', option)\n\n    const getOptionIcon = (option: SelectableOption) => typeof option === 'object' ? (option.icon as string) : undefined\n\n    const getOptionClass = (option: SelectableOption) => ({\n      'va-select-option-list__option': true,\n      'va-select-option-list__option--selected': props.getSelectedState(option),\n    })\n\n    const getOptionStyle = (option: SelectableOption) => ({\n      color: props.getSelectedState(option) ? getColor(props.color) : 'inherit',\n      backgroundColor: isHovered(option) ? getHoverColor(getColor(props.color)) : 'transparent',\n    })\n\n    const isHovered = (option: SelectableOption) => {\n      if (!hoveredOptionComputed.value) { return false }\n      if (typeof option === 'string') { return option === hoveredOptionComputed.value }\n      if (!props.getTrackBy) { return false }\n\n      return props.getTrackBy(hoveredOptionComputed.value) === props.getTrackBy(option)\n    }\n\n    const updateHoveredOption = (option?: SelectableOption) => { hoveredOptionComputed.value = option || null }\n\n    const hoveredOptionIndex = computed(() => filteredOptions.value.findIndex((option) => {\n      return !!hoveredOptionComputed.value && props.getTrackBy(option) === props.getTrackBy(hoveredOptionComputed.value)\n    }))\n\n    const hoverPreviousOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover last option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value.at(-1))\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value - 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value - 1]\n        } else {\n          emit('no-previous-option-to-hover')\n        }\n      }\n    }\n\n    const hoverNextOption = () => {\n      if (!hoveredOptionComputed.value) {\n        // Hover first option from list\n        filteredOptions.value.length && updateHoveredOption(filteredOptions.value[0])\n      } else {\n        if (filteredOptions.value[hoveredOptionIndex.value + 1]) {\n          hoveredOptionComputed.value = filteredOptions.value[hoveredOptionIndex.value + 1]\n        }\n      }\n    }\n\n    const hoverFirstOption = () => {\n      if (filteredOptions.value.length > 0) {\n        updateHoveredOption(filteredOptions.value[0])\n      }\n    }\n\n    const focus = () => {\n      // Prevent scroll since element in dropdown and it cause scrolling to page end.\n      rootElement.value?.focus({ preventScroll: true })\n    }\n\n    const scrollToOption = (option: SelectableOption) => {\n      if (!option) { return }\n\n      const element = itemRefs.value[props.getTrackBy(option)]\n\n      if (element) {\n        scrollToElement(element)\n      }\n    }\n\n    watch(() => props.hoveredOption, (newOption: SelectableOption | null) => newOption && scrollToOption(newOption))\n\n    const publicMethods = {\n      hoverPreviousOption,\n      hoverNextOption,\n      hoverFirstOption,\n      focus,\n      scrollToOption,\n    }\n\n    return {\n      rootElement,\n\n      getColor,\n      filteredOptions,\n      optionGroups,\n      onScroll,\n      beforeUpdate,\n      setItemRef,\n      selectOption,\n      getOptionIcon,\n      getOptionClass,\n      getOptionStyle,\n      updateHoveredOption,\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-select-option-list {\n  display: var(--va-select-option-list-display);\n  flex-direction: var(--va-select-option-list-flex-direction);\n  width: var(--va-select-option-list-width);\n  list-style: var(--va-select-option-list-list-style);\n  max-height: var(--va-select-option-list-max-height);\n  font-family: var(--va-font-family);\n  overflow: auto;\n\n  @include va-scroll();\n\n  &__group-name {\n    padding: var(--va-select-option-list-group-name-padding);\n    font-size: var(--va-select-option-list-group-name-font-size);\n    color: var(--va-select-option-list-group-name-color);\n    font-weight: var(--va-select-option-list-group-name-font-weight);\n    text-transform: uppercase;\n  }\n\n  &__option {\n    cursor: var(--va-select-option-list-option-cursor);\n    display: var(--va-select-option-list-option-display);\n    align-items: var(--va-select-option-list-option-align-items);\n    padding: var(--va-select-option-list-option-padding);\n    min-height: var(--va-select-option-list-option-min-height);\n    word-break: var(--va-select-option-list-option-word-break);\n\n    &--icon {\n      margin-right: var(--va-select-option-list-icon-margin-right);\n    }\n\n    &--selected-icon {\n      margin-left: var(--va-select-option-list-selected-icon-margin-left);\n      font-size: var(--va-select-option-list-selected-icon-font-size);\n    }\n  }\n\n  &.no-options {\n    padding: 0.5rem;\n  }\n}\n</style>\n"],"names":["_createElementBlock","_withKeys","_withModifiers","_openBlock","_Fragment","_renderList","_toDisplayString","_createCommentVNode","_normalizeClass","_normalizeStyle","_createBlock","_createElementVNode","_withDirectives","_createVNode","_vShow"],"mappings":"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"}