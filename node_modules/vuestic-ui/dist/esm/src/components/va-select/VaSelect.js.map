{"version":3,"file":"VaSelect.js","sources":["../../../../../src/components/va-select/VaSelect.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    ref=\"dropdown\"\n    class=\"va-select va-select__dropdown va-select-dropdown\"\n    :aria-label=\"`select option (currently selected: ${$props.modelValue})`\"\n    :placement=\"$props.placement\"\n    :disabled=\"$props.disabled\"\n    :max-height=\"$props.maxHeight\"\n    :close-on-content-click=\"closeOnContentClick\"\n    :stateful=\"false\"\n    :offset=\"[1, 0]\"\n    keep-anchor-width\n    keyboard-navigation\n    inner-anchor-selector=\".va-input-wrapper__field\"\n    v-model=\"showDropdownContentComputed\"\n    @close=\"focus\"\n  >\n    <template #anchor>\n      <va-input-wrapper\n        ref=\"input\"\n        class=\"va-select__anchor va-select-anchor__input\"\n        :model-value=\"valueComputedString\"\n        :success=\"$props.success\"\n        :error=\"computedError\"\n        :color=\"$props.color\"\n        :label=\"$props.label\"\n        :loading=\"$props.loading\"\n        :disabled=\"$props.disabled\"\n        :outline=\"$props.outline\"\n        :bordered=\"$props.bordered\"\n        :required-mark=\"$props.requiredMark\"\n        :messages=\"$props.messages\"\n        :error-messages=\"computedErrorMessages\"\n        :focused=\"isFocused\"\n        :tabindex=\"tabIndexComputed\"\n        @focus=\"onInputFocus\"\n        @blur=\"onInputBlur\"\n      >\n        <template\n          v-if=\"$slots.prepend\"\n          #prepend\n        >\n          <slot name=\"prepend\" />\n        </template>\n\n        <template\n          v-if=\"$slots.append\"\n          #append\n        >\n          <slot name=\"append\" />\n        </template>\n\n        <template\n          v-if=\"$slots.prependInner\"\n          #prependInner\n        >\n          <slot name=\"prependInner\" />\n        </template>\n\n        <template #icon>\n          <va-icon\n            v-if=\"showClearIcon\"\n            role=\"button\"\n            aria-hidden=\"false\"\n            aria-label=\"reset\"\n            tabindex=\"0\"\n            v-bind=\"clearIconProps\"\n            @click.stop=\"reset\"\n            @keydown.enter.stop=\"reset\"\n            @keydown.space.stop=\"reset\"\n          />\n        </template>\n\n        <template #appendInner>\n          <slot\n            v-if=\"$slots.appendInner\"\n            name=\"appendInner\"\n          />\n          <va-icon\n            :color=\"toggleIconColor\"\n            :name=\"toggleIcon\"\n          />\n        </template>\n\n        <template\n          #default\n        >\n          <span\n            v-if=\"isPlaceholder\"\n            class=\"va-select-anchor__placeholder\"\n          >\n            {{ $props.placeholder }}\n          </span>\n          <slot\n            v-else\n            name=\"content\"\n            v-bind=\"{\n              valueString: valueComputedString,\n              value: valueComputed,\n              tabindex: tabIndexComputed,\n            }\"\n          >\n            {{ valueComputedString }}\n          </slot>\n        </template>\n      </va-input-wrapper>\n    </template>\n\n    <!-- Stop propagation for enter keyup event, to prevent VaDropdown closing -->\n    <va-dropdown-content\n      class=\"va-select-dropdown__content\"\n      :style=\"{ width: $props.width }\"\n    >\n      <va-input\n        v-if=\"showSearchInput\"\n        ref=\"searchBar\"\n        class=\"va-select-dropdown__content-search-input\"\n        placeholder=\"Search\"\n        aria-label=\"options filter\"\n        :tabindex=\"tabIndexComputed\"\n        :bordered=\"true\"\n        v-model=\"searchInput\"\n        @keydown.up.stop.prevent=\"hoverPreviousOption\"\n        @keydown.left.stop.prevent=\"hoverPreviousOption\"\n        @keydown.down.stop.prevent=\"hoverNextOption\"\n        @keydown.right.stop.prevent=\"hoverNextOption\"\n        @keydown.enter.prevent=\"selectOrAddOption\"\n        @focus=\"hoveredOption = null\"\n      />\n      <div class=\"va-select-dropdown__options-wrapper\">\n        <va-select-option-list\n          ref=\"optionList\"\n          v-model:hoveredOption=\"hoveredOption\"\n          :style=\"{ maxHeight: $props.maxHeight }\"\n          :options=\"filteredOptions\"\n          :selected-value=\"valueComputed\"\n          :get-selected-state=\"checkIsOptionSelected\"\n          :get-text=\"getText\"\n          :get-track-by=\"getTrackBy\"\n          :get-group-by=\"getGroupBy\"\n          :search=\"searchInput\"\n          :no-options-text=\"$props.noOptionsText\"\n          :color=\"$props.color\"\n          :tabindex=\"tabIndexComputed\"\n          @select-option=\"selectOption\"\n          @no-previous-option-to-hover=\"focusSearchBar\"\n          @keydown.enter.stop.prevent=\"selectHoveredOption\"\n          @keydown.space.stop.prevent=\"selectHoveredOption\"\n          @keydown.tab.stop.prevent=\"searchBar && searchBar.focus()\"\n          @keydown=\"onHintedSearch\"\n          @scroll-bottom=\"onScrollBottom\"\n        />\n      </div>\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed, watch, nextTick, Ref, shallowRef } from 'vue'\n\nimport { warn } from '../../services/utils'\nimport {\n  useSelectableList, useSelectableListProps,\n  useValidation, useValidationProps, useValidationEmits, ValidationProps,\n  useFormProps,\n  useLoadingProps,\n  useColors,\n  useMaxSelections, useMaxSelectionsProps,\n  useClearableProps, useClearable, useClearableEmits,\n  useFocusDeep,\n} from '../../composables'\n\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { VaIcon } from '../va-icon'\nimport { VaInput, VaInputWrapper } from '../va-input'\nimport { VaSelectOptionList } from './VaSelectOptionList'\n\nimport { SelectDropdownIcon, SelectOption, Placement } from './types'\n\nexport default defineComponent({\n  name: 'VaSelect',\n\n  components: {\n    VaSelectOptionList,\n    VaIcon,\n    VaDropdown,\n    VaDropdownContent,\n    VaInput,\n    VaInputWrapper,\n  },\n\n  emits: [\n    'update:modelValue',\n    'update-search',\n    'create-new',\n    'scroll-bottom',\n    ...useValidationEmits,\n    ...useClearableEmits,\n  ],\n\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps as ValidationProps<SelectOption>,\n    ...useLoadingProps,\n    ...useMaxSelectionsProps,\n    ...useClearableProps,\n    ...useFormProps,\n\n    modelValue: {\n      type: [String, Number, Array, Object] as PropType<SelectOption | SelectOption[]>,\n      default: '',\n    },\n\n    // Dropdown placement\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (placement: string) => ['top', 'bottom'].includes(placement),\n    },\n\n    allowCreate: {\n      type: [Boolean, String] as PropType<boolean | 'unique'>,\n      default: false,\n      validator: (mode: string | boolean) => [true, false, 'unique'].includes(mode),\n    },\n\n    color: { type: String, default: 'primary' },\n    multiple: { type: Boolean, default: false },\n    searchable: { type: Boolean, default: false },\n    separator: { type: String, default: ', ' },\n    width: { type: String, default: '100%' },\n    maxHeight: { type: String, default: '256px' },\n    noOptionsText: { type: String, default: 'Items not found' },\n    hideSelected: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 0 },\n    dropdownIcon: {\n      type: [String, Object] as PropType<string | SelectDropdownIcon>,\n      default: (): SelectDropdownIcon => ({\n        open: 'expand_more',\n        close: 'expand_less',\n      }),\n      validator: (value: string | SelectDropdownIcon) => {\n        if (typeof value === 'string') { return true }\n        const isOpenIconString = typeof value.open === 'string'\n        const isCloseIconString = typeof value.close === 'string'\n        return isOpenIconString && isCloseIconString\n      },\n    },\n\n    // Input style\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    label: { type: String, default: '' },\n    placeholder: { type: String, default: '' },\n    requiredMark: { type: Boolean, default: false },\n  },\n\n  setup (props, { emit }) {\n    const optionList = shallowRef<typeof VaSelectOptionList>()\n    const input = shallowRef<typeof VaInputWrapper>()\n    const searchBar = shallowRef<typeof VaInput>()\n\n    const isInputFocused = useFocusDeep(input as any)\n    const isFocused = computed(() => isInputFocused.value || showDropdownContent.value)\n\n    const { getHoverColor, getColor } = useColors()\n    const { getOptionByValue, getValue, getText, getTrackBy, getGroupBy } = useSelectableList(props)\n\n    const {\n      validate,\n      computedError,\n      computedErrorMessages,\n    } = useValidation(props, emit, () => reset(), () => focus())\n\n    const colorComputed = computed(() => getColor(props.color))\n    const toggleIconColor = computed(() => props.readonly ? getHoverColor(colorComputed.value) : colorComputed.value)\n\n    const onScrollBottom = () => {\n      emit('scroll-bottom')\n    }\n\n    const searchInput = ref('')\n    const showSearchInput = computed(() => props.searchable || props.allowCreate)\n\n    watch(searchInput, (value) => {\n      emit('update-search', value)\n      hoveredOption.value = null\n    })\n\n    // Select value\n\n    const valueComputed = computed<SelectOption | SelectOption[]>({\n      get () {\n        const value = getOptionByValue(props.modelValue)\n\n        if (props.multiple) {\n          if (!value) {\n            return []\n          }\n\n          if (!Array.isArray(value)) {\n            return [value]\n          }\n\n          return value.map((o) => getOptionByValue(o))\n        }\n\n        if (Array.isArray(value)) {\n          warn('Model value should be a string or a number for a single Select.')\n\n          if (value.length) {\n            return value[value.length - 1]\n          }\n        }\n\n        return value\n      },\n\n      set (value: SelectOption | SelectOption[]) {\n        if (Array.isArray(value)) {\n          emit('update:modelValue', value.map(getValue))\n        } else {\n          emit('update:modelValue', getValue(value))\n        }\n      },\n    })\n\n    const valueComputedString = computed<string>(() => {\n      if (!valueComputed.value) { return props.clearValue }\n      if (typeof valueComputed.value === 'string' || typeof valueComputed.value === 'number') { return valueComputed.value }\n      if (Array.isArray(valueComputed.value)) {\n        return valueComputed.value.map((value) => getText(value)).join(props.separator) || props.clearValue\n      }\n\n      return getText(valueComputed.value)\n    })\n\n    const isPlaceholder = computed(() => props.placeholder && !valueComputedString.value)\n\n    // Icons\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const showClearIcon = computed(() => {\n      if (!canBeCleared.value) { return false }\n      if (props.multiple && Array.isArray(valueComputed.value)) { return !!valueComputed.value.length }\n      return true\n    })\n\n    const toggleIcon = computed(() => {\n      if (!props.dropdownIcon) { return '' }\n\n      if (typeof props.dropdownIcon === 'string') {\n        return props.dropdownIcon\n      }\n\n      return showDropdownContent.value ? props.dropdownIcon.close : props.dropdownIcon.open\n    })\n\n    // Options\n\n    const filteredOptions = computed(() => {\n      if (!props.options) { return [] }\n\n      if (props.hideSelected) {\n        return props.options.filter((option) => !checkIsOptionSelected(option))\n      }\n\n      return props.options\n    })\n\n    const checkIsOptionSelected = (option: SelectOption) => {\n      if (!valueComputed.value) { return false }\n\n      if (Array.isArray(valueComputed.value)) {\n        return !!valueComputed.value.find((valueItem) => compareOptions(valueItem, option))\n      }\n\n      return compareOptions(valueComputed.value, option)\n    }\n\n    const compareOptions = (option1: SelectOption, option2: SelectOption) => {\n      const one = getValue(option1)\n      const two = getValue(option2)\n\n      // identity check works nice for strings and exact matches.\n      if (one === two) {\n        return true\n      }\n      if (typeof one === 'string' && typeof two === 'string') {\n        return one === two\n      }\n      if (one === null || two === null) {\n        return false\n      }\n      if (typeof one === 'object' && typeof two === 'object') {\n        return getTrackBy(one) === getTrackBy(two)\n      }\n\n      return false\n    }\n\n    const isValueComputedArray = (v: Ref<SelectOption | SelectOption[]>): v is Ref<SelectOption[]> => Array.isArray(v.value)\n\n    const selectOption = (option: SelectOption) => {\n      if (hoveredOption.value === null) {\n        hideAndFocus()\n        return\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = ''\n      }\n\n      if (props.multiple && isValueComputedArray(valueComputed)) {\n        const { exceedsMaxSelections, addOption } = useMaxSelections(valueComputed, ref(props.maxSelections), emit)\n\n        const isSelected = checkIsOptionSelected(getValue(option))\n\n        if (isSelected) {\n          // Unselect\n          valueComputed.value = valueComputed.value.filter((optionSelected) => !compareOptions(getValue(option), getValue(optionSelected)))\n        } else {\n          if (exceedsMaxSelections()) { return }\n          addOption(getValue(option))\n        }\n      } else {\n        valueComputed.value = typeof option === 'string' || typeof option === 'number' ? option : { ...option }\n        hideAndFocus()\n      }\n    }\n\n    const addNewOption = () => {\n      // Do not emit if option already exist and allow create is `unique`\n      const hasAddedOption = props.options?.some((option: SelectOption) => getText(option) === searchInput.value)\n\n      if (!(props.allowCreate === 'unique' && hasAddedOption)) {\n        emit('create-new', searchInput.value)\n        searchInput.value = ''\n      }\n    }\n\n    // Hovered options\n\n    const hoveredOption = ref<SelectOption | null>(null)\n\n    const selectHoveredOption = () => {\n      if (!hoveredOption.value) { return }\n\n      if (!showDropdownContent.value) {\n        // We can not select options if they are hidden\n        showDropdown()\n        return\n      }\n\n      selectOption(hoveredOption.value)\n    }\n\n    const selectOrAddOption = () => {\n      const allowedToCreate = !!props.allowCreate && searchInput.value !== ''\n\n      if (hoveredOption.value !== null) {\n        selectHoveredOption()\n      } else if (allowedToCreate) {\n        addNewOption()\n      }\n    }\n\n    const hoverPreviousOption = () => {\n      optionList.value?.hoverPreviousOption()\n    }\n\n    const hoverNextOption = () => {\n      optionList.value?.hoverNextOption()\n    }\n\n    // Dropdown content\n\n    const showDropdownContent = ref(false)\n\n    const showDropdownContentComputed = computed({\n      get: () => showDropdownContent.value,\n      set: (show: boolean) => {\n        show ? showDropdown() : hideDropdown()\n      },\n    })\n\n    const closeOnContentClick = computed(() => {\n      return !(props.multiple || props.searchable || props.allowCreate)\n    })\n\n    const showDropdown = () => {\n      if (props.disabled || props.readonly) { return }\n\n      showDropdownContent.value = true\n      scrollToSelected()\n      focusSearchOrOptions()\n    }\n\n    const hideDropdown = () => {\n      showDropdownContent.value = false\n      searchInput.value = ''\n      validate()\n    }\n\n    const toggleDropdown = () => {\n      if (showDropdownContent.value) {\n        hideAndFocus()\n      } else {\n        showDropdown()\n      }\n    }\n\n    const onSelectClick = () => {\n      if (props.disabled || props.readonly) { return }\n      toggleDropdown()\n    }\n\n    const hideAndFocus = () => {\n      hideDropdown()\n      isInputFocused.value = true\n    }\n\n    const focusSearchBar = () => {\n      searchBar.value?.focus()\n    }\n\n    const focusOptionList = () => {\n      optionList.value?.focus()\n      !props.modelValue && optionList.value?.hoverFirstOption()\n    }\n\n    const focusSearchOrOptions = () => nextTick(() => {\n      if (showSearchInput.value) {\n        focusSearchBar()\n      } else {\n        focusOptionList()\n      }\n    })\n\n    const onInputFocus = () => {\n      isInputFocused.value = true\n      onFocus()\n    }\n\n    const onInputBlur = () => {\n      if (showDropdownContentComputed.value) { return }\n\n      onBlur()\n\n      isInputFocused.value\n        ? isInputFocused.value = false\n        : validate()\n    }\n\n    /** @public */\n    const focus = () => {\n      if (props.disabled) { return }\n      input.value?.focus()\n    }\n\n    /** @public */\n    const blur = () => {\n      if (showDropdownContentComputed.value) {\n        showDropdownContentComputed.value = false\n      }\n\n      nextTick(input.value?.blur)\n    }\n\n    /** @public */\n    const reset = () => {\n      if (props.multiple) {\n        valueComputed.value = Array.isArray(props.clearValue) ? props.clearValue : []\n      } else {\n        valueComputed.value = props.clearValue\n      }\n\n      searchInput.value = ''\n      emit('clear')\n    }\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : props.tabindex)\n\n    const scrollToSelected = () => {\n      const selected = valueComputed.value\n      const nothingSelected = typeof selected !== 'object' && Array.isArray(selected) && !selected.length\n\n      if (nothingSelected) { return }\n\n      const scrollTo = Array.isArray(selected) ? selected[selected.length - 1] : selected\n      hoveredOption.value = scrollTo\n      nextTick(() => optionList.value?.scrollToOption(scrollTo))\n    }\n\n    // Hinted search\n\n    let hintedSearchQuery = ''\n    let hintedSearchQueryTimeoutIndex!: ReturnType<typeof setTimeout>\n    const navigationKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', ' ']\n\n    // Hinted search - hover option if you typing it's value on select without search-bar\n    const onHintedSearch = (event: KeyboardEvent) => {\n      if (navigationKeys.some(key => key === event.key)) {\n        return\n      }\n\n      const isLetter: boolean = event.key.length === 1\n      const isDeleteKey: boolean = event.key === 'Backspace' || event.key === 'Delete'\n\n      clearTimeout(hintedSearchQueryTimeoutIndex)\n\n      if (isDeleteKey) {\n        // Remove last letter from query\n        hintedSearchQuery = hintedSearchQuery ? hintedSearchQuery.slice(0, -1) : ''\n      } else if (isLetter) {\n        // Add every new letter to the query\n        hintedSearchQuery += event.key\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = hintedSearchQuery\n        return\n      }\n\n      // Search for an option that matches the query\n      if (hintedSearchQuery) {\n        const appropriateOption = props.options.find(option => getText(option).toLowerCase().startsWith(hintedSearchQuery.toLowerCase()))\n        if (appropriateOption) {\n          hoveredOption.value = appropriateOption\n        }\n      }\n\n      hintedSearchQueryTimeoutIndex = setTimeout(() => { hintedSearchQuery = '' }, 1000)\n    }\n\n    return {\n      isFocused,\n\n      input,\n      optionList,\n      searchBar,\n\n      reset,\n      focus,\n      blur,\n\n      onInputFocus,\n      onInputBlur,\n      focusOptionList,\n      onSelectClick,\n      focusSearchBar,\n      searchInput,\n      showSearchInput,\n      hoveredOption,\n      tabIndexComputed,\n      valueComputed,\n      valueComputedString,\n      showClearIcon,\n      toggleIcon,\n      computedErrorMessages,\n      computedError,\n      filteredOptions,\n      checkIsOptionSelected,\n      closeOnContentClick,\n      selectOption,\n      selectOrAddOption,\n      selectHoveredOption,\n      hoverPreviousOption,\n      hoverNextOption,\n      showDropdownContentComputed,\n      showDropdown,\n      hideDropdown,\n      hideAndFocus,\n      toggleDropdown,\n      toggleIconColor,\n      onHintedSearch,\n      getText,\n      getTrackBy,\n      getGroupBy,\n      onScrollBottom,\n      clearIconProps,\n      isPlaceholder,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-select {\n  min-width: var(--va-select-min-width);\n}\n\n.va-select-anchor {\n  &__input {\n    cursor: var(--va-select-cursor);\n    flex: 1;\n  }\n\n  &__placeholder {\n    color: var(--va-input-placeholder-text-color);\n  }\n}\n\n.va-select-dropdown {\n  &__content {\n    overflow: hidden;\n    border-bottom-right-radius: var(--va-select-dropdown-border-radius);\n    border-bottom-left-radius: var(--va-select-dropdown-border-radius);\n    border-top-right-radius: 0;\n    border-top-left-radius: 0;\n    box-shadow: var(--va-select-box-shadow);\n    padding: 0;\n  }\n\n  &__content-search-input {\n    min-width: auto;\n    width: 100%;\n  }\n\n  &__options-wrapper {\n    background: var(--va-select-dropdown-background);\n    overflow-y: auto;\n\n    @include va-scroll();\n  }\n}\n</style>\n"],"names":["_createBlock","_withCtx","_createVNode","_createSlots","_openBlock","_mergeProps","_withModifiers","_withKeys","_renderSlot","_createCommentVNode","_createElementBlock","_toDisplayString","_normalizeProps","_createTextVNode","_normalizeStyle","_createElementVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA,MAAK,YAAa,gBAAa;AAAA,EAC7B,MAAM;AAAA,EAEN,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EAEA,OAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAAA,EAEA,OAAO,4GACF,yBACA,qBACA,kBACA,wBACA,oBACA,eANE;AAAA,IAQL,YAAY;AAAA,MACV,MAAM,CAAC,QAAQ,QAAQ,OAAO,MAAM;AAAA,MACpC,SAAS;AAAA,IACX;AAAA,IAGA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW,CAAC,cAAsB,CAAC,OAAO,QAAQ,EAAE,SAAS,SAAS;AAAA,IACxE;AAAA,IAEA,aAAa;AAAA,MACX,MAAM,CAAC,SAAS,MAAM;AAAA,MACtB,SAAS;AAAA,MACT,WAAW,CAAC,SAA2B,CAAC,MAAM,OAAO,QAAQ,EAAE,SAAS,IAAI;AAAA,IAC9E;AAAA,IAEA,OAAO,EAAE,MAAM,QAAQ,SAAS,UAAU;AAAA,IAC1C,UAAU,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1C,YAAY,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IAC5C,WAAW,EAAE,MAAM,QAAQ,SAAS,KAAK;AAAA,IACzC,OAAO,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,IACvC,WAAW,EAAE,MAAM,QAAQ,SAAS,QAAQ;AAAA,IAC5C,eAAe,EAAE,MAAM,QAAQ,SAAS,kBAAkB;AAAA,IAC1D,cAAc,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IAC9C,UAAU,EAAE,MAAM,QAAQ,SAAS,EAAE;AAAA,IACrC,cAAc;AAAA,MACZ,MAAM,CAAC,QAAQ,MAAM;AAAA,MACrB,SAAS,MAA2B;AAAA,QAClC,MAAM;AAAA,QACN,OAAO;AAAA,MAAA;AAAA,MAET,WAAW,CAAC,UAAuC;AAC7C,YAAA,OAAO,UAAU,UAAU;AAAS,iBAAA;AAAA,QAAK;AACvC,cAAA,mBAAmB,OAAO,MAAM,SAAS;AACzC,cAAA,oBAAoB,OAAO,MAAM,UAAU;AACjD,eAAO,oBAAoB;AAAA,MAC7B;AAAA,IACF;AAAA,IAGA,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IACzC,UAAU,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1C,OAAO,EAAE,MAAM,QAAQ,SAAS,GAAG;AAAA,IACnC,aAAa,EAAE,MAAM,QAAQ,SAAS,GAAG;AAAA,IACzC,cAAc,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,EAChD;AAAA,EAEA,MAAO,OAAO,EAAE,QAAQ;AACtB,UAAM,aAAa;AACnB,UAAM,QAAQ;AACd,UAAM,YAAY;AAEZ,UAAA,iBAAiB,aAAa,KAAY;AAChD,UAAM,YAAY,SAAS,MAAM,eAAe,SAAS,oBAAoB,KAAK;AAE5E,UAAA,EAAE,eAAe,aAAa,UAAU;AAC9C,UAAM,EAAE,kBAAkB,UAAU,SAAS,YAAY,eAAe,kBAAkB,KAAK;AAEzF,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,QACE,cAAc,OAAO,MAAM,MAAM,SAAS,MAAM,OAAO;AAE3D,UAAM,gBAAgB,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AACpD,UAAA,kBAAkB,SAAS,MAAM,MAAM,WAAW,cAAc,cAAc,KAAK,IAAI,cAAc,KAAK;AAEhH,UAAM,iBAAiB,MAAM;AAC3B,WAAK,eAAe;AAAA,IAAA;AAGhB,UAAA,cAAc,IAAI,EAAE;AAC1B,UAAM,kBAAkB,SAAS,MAAM,MAAM,cAAc,MAAM,WAAW;AAEtE,UAAA,aAAa,CAAC,UAAU;AAC5B,WAAK,iBAAiB,KAAK;AAC3B,oBAAc,QAAQ;AAAA,IAAA,CACvB;AAID,UAAM,gBAAgB,SAAwC;AAAA,MAC5D,MAAO;AACC,cAAA,QAAQ,iBAAiB,MAAM,UAAU;AAE/C,YAAI,MAAM,UAAU;AAClB,cAAI,CAAC,OAAO;AACV,mBAAO;UACT;AAEA,cAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,mBAAO,CAAC,KAAK;AAAA,UACf;AAEA,iBAAO,MAAM,IAAI,CAAC,MAAM,iBAAiB,CAAC,CAAC;AAAA,QAC7C;AAEI,YAAA,MAAM,QAAQ,KAAK,GAAG;AAGxB,cAAI,MAAM,QAAQ;AACT,mBAAA,MAAM,MAAM,SAAS;AAAA,UAC9B;AAAA,QACF;AAEO,eAAA;AAAA,MACT;AAAA,MAEA,IAAK,OAAsC;AACrC,YAAA,MAAM,QAAQ,KAAK,GAAG;AACxB,eAAK,qBAAqB,MAAM,IAAI,QAAQ,CAAC;AAAA,QAAA,OACxC;AACA,eAAA,qBAAqB,SAAS,KAAK,CAAC;AAAA,QAC3C;AAAA,MACF;AAAA,IAAA,CACD;AAEK,UAAA,sBAAsB,SAAiB,MAAM;AAC7C,UAAA,CAAC,cAAc,OAAO;AAAE,eAAO,MAAM;AAAA,MAAW;AACpD,UAAI,OAAO,cAAc,UAAU,YAAY,OAAO,cAAc,UAAU,UAAU;AAAE,eAAO,cAAc;AAAA,MAAM;AACrH,UAAI,MAAM,QAAQ,cAAc,KAAK,GAAG;AACtC,eAAO,cAAc,MAAM,IAAI,CAAC,UAAU,QAAQ,KAAK,CAAC,EAAE,KAAK,MAAM,SAAS,KAAK,MAAM;AAAA,MAC3F;AAEO,aAAA,QAAQ,cAAc,KAAK;AAAA,IAAA,CACnC;AAED,UAAM,gBAAgB,SAAS,MAAM,MAAM,eAAe,CAAC,oBAAoB,KAAK;AAI9E,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,aAAa,OAAO,aAAa;AAE/B,UAAA,gBAAgB,SAAS,MAAM;AAC/B,UAAA,CAAC,aAAa,OAAO;AAAS,eAAA;AAAA,MAAM;AACxC,UAAI,MAAM,YAAY,MAAM,QAAQ,cAAc,KAAK,GAAG;AAAS,eAAA,CAAC,CAAC,cAAc,MAAM;AAAA,MAAO;AACzF,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,aAAa,SAAS,MAAM;AAC5B,UAAA,CAAC,MAAM,cAAc;AAAS,eAAA;AAAA,MAAG;AAEjC,UAAA,OAAO,MAAM,iBAAiB,UAAU;AAC1C,eAAO,MAAM;AAAA,MACf;AAEA,aAAO,oBAAoB,QAAQ,MAAM,aAAa,QAAQ,MAAM,aAAa;AAAA,IAAA,CAClF;AAIK,UAAA,kBAAkB,SAAS,MAAM;AACjC,UAAA,CAAC,MAAM,SAAS;AAAE,eAAO;MAAG;AAEhC,UAAI,MAAM,cAAc;AACf,eAAA,MAAM,QAAQ,OAAO,CAAC,WAAW,CAAC,sBAAsB,MAAM,CAAC;AAAA,MACxE;AAEA,aAAO,MAAM;AAAA,IAAA,CACd;AAEK,UAAA,wBAAwB,CAAC,WAAyB;AAClD,UAAA,CAAC,cAAc,OAAO;AAAS,eAAA;AAAA,MAAM;AAEzC,UAAI,MAAM,QAAQ,cAAc,KAAK,GAAG;AAC/B,eAAA,CAAC,CAAC,cAAc,MAAM,KAAK,CAAC,cAAc,eAAe,WAAW,MAAM,CAAC;AAAA,MACpF;AAEO,aAAA,eAAe,cAAc,OAAO,MAAM;AAAA,IAAA;AAG7C,UAAA,iBAAiB,CAAC,SAAuB,YAA0B;AACjE,YAAA,MAAM,SAAS,OAAO;AACtB,YAAA,MAAM,SAAS,OAAO;AAG5B,UAAI,QAAQ,KAAK;AACR,eAAA;AAAA,MACT;AACA,UAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU;AACtD,eAAO,QAAQ;AAAA,MACjB;AACI,UAAA,QAAQ,QAAQ,QAAQ,MAAM;AACzB,eAAA;AAAA,MACT;AACA,UAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU;AACtD,eAAO,WAAW,GAAG,MAAM,WAAW,GAAG;AAAA,MAC3C;AAEO,aAAA;AAAA,IAAA;AAGT,UAAM,uBAAuB,CAAC,MAAoE,MAAM,QAAQ,EAAE,KAAK;AAEjH,UAAA,eAAe,CAAC,WAAyB;AACzC,UAAA,cAAc,UAAU,MAAM;AACnB;AACb;AAAA,MACF;AAEA,UAAI,gBAAgB,OAAO;AACzB,oBAAY,QAAQ;AAAA,MACtB;AAEA,UAAI,MAAM,YAAY,qBAAqB,aAAa,GAAG;AACnD,cAAA,EAAE,sBAAsB,cAAc,iBAAiB,eAAe,IAAI,MAAM,aAAa,GAAG,IAAI;AAE1G,cAAM,aAAa,sBAAsB,SAAS,MAAM,CAAC;AAEzD,YAAI,YAAY;AAEd,wBAAc,QAAQ,cAAc,MAAM,OAAO,CAAC,mBAAmB,CAAC,eAAe,SAAS,MAAM,GAAG,SAAS,cAAc,CAAC,CAAC;AAAA,QAAA,OAC3H;AACL,cAAI,wBAAwB;AAAE;AAAA,UAAO;AAC3B,oBAAA,SAAS,MAAM,CAAC;AAAA,QAC5B;AAAA,MAAA,OACK;AACS,sBAAA,QAAQ,OAAO,WAAW,YAAY,OAAO,WAAW,WAAW,SAAS,mBAAK;AAClF;MACf;AAAA,IAAA;AAGF,UAAM,eAAe,MAAM;;AAEnB,YAAA,iBAAiB,YAAM,YAAN,mBAAe,KAAK,CAAC,WAAyB,QAAQ,MAAM,MAAM,YAAY;AAErG,UAAI,CAAE,OAAM,gBAAgB,YAAY,iBAAiB;AAClD,aAAA,cAAc,YAAY,KAAK;AACpC,oBAAY,QAAQ;AAAA,MACtB;AAAA,IAAA;AAKI,UAAA,gBAAgB,IAAyB,IAAI;AAEnD,UAAM,sBAAsB,MAAM;AAC5B,UAAA,CAAC,cAAc,OAAO;AAAE;AAAA,MAAO;AAE/B,UAAA,CAAC,oBAAoB,OAAO;AAEjB;AACb;AAAA,MACF;AAEA,mBAAa,cAAc,KAAK;AAAA,IAAA;AAGlC,UAAM,oBAAoB,MAAM;AAC9B,YAAM,kBAAkB,CAAC,CAAC,MAAM,eAAe,YAAY,UAAU;AAEjE,UAAA,cAAc,UAAU,MAAM;AACZ;iBACX,iBAAiB;AACb;MACf;AAAA,IAAA;AAGF,UAAM,sBAAsB,MAAM;;AAChC,uBAAW,UAAX,mBAAkB;AAAA,IAAoB;AAGxC,UAAM,kBAAkB,MAAM;;AAC5B,uBAAW,UAAX,mBAAkB;AAAA,IAAgB;AAK9B,UAAA,sBAAsB,IAAI,KAAK;AAErC,UAAM,8BAA8B,SAAS;AAAA,MAC3C,KAAK,MAAM,oBAAoB;AAAA,MAC/B,KAAK,CAAC,SAAkB;AACf,eAAA,iBAAiB;MAC1B;AAAA,IAAA,CACD;AAEK,UAAA,sBAAsB,SAAS,MAAM;AACzC,aAAO,CAAE,OAAM,YAAY,MAAM,cAAc,MAAM;AAAA,IAAA,CACtD;AAED,UAAM,eAAe,MAAM;AACrB,UAAA,MAAM,YAAY,MAAM,UAAU;AAAE;AAAA,MAAO;AAE/C,0BAAoB,QAAQ;AACX;AACI;IAAA;AAGvB,UAAM,eAAe,MAAM;AACzB,0BAAoB,QAAQ;AAC5B,kBAAY,QAAQ;AACX;IAAA;AAGX,UAAM,iBAAiB,MAAM;AAC3B,UAAI,oBAAoB,OAAO;AAChB;MAAA,OACR;AACQ;MACf;AAAA,IAAA;AAGF,UAAM,gBAAgB,MAAM;AACtB,UAAA,MAAM,YAAY,MAAM,UAAU;AAAE;AAAA,MAAO;AAChC;IAAA;AAGjB,UAAM,eAAe,MAAM;AACZ;AACb,qBAAe,QAAQ;AAAA,IAAA;AAGzB,UAAM,iBAAiB,MAAM;;AAC3B,sBAAU,UAAV,mBAAiB;AAAA,IAAM;AAGzB,UAAM,kBAAkB,MAAM;;AAC5B,uBAAW,UAAX,mBAAkB;AAClB,OAAC,MAAM,cAAc,kBAAW,UAAX,mBAAkB;AAAA,IAAiB;AAGpD,UAAA,uBAAuB,MAAM,SAAS,MAAM;AAChD,UAAI,gBAAgB,OAAO;AACV;MAAA,OACV;AACW;MAClB;AAAA,IAAA,CACD;AAED,UAAM,eAAe,MAAM;AACzB,qBAAe,QAAQ;AACf;IAAA;AAGV,UAAM,cAAc,MAAM;AACxB,UAAI,4BAA4B,OAAO;AAAE;AAAA,MAAO;AAEzC;AAEP,qBAAe,QACX,eAAe,QAAQ,QACvB,SAAS;AAAA,IAAA;AAIf,UAAM,QAAQ,MAAM;;AAClB,UAAI,MAAM,UAAU;AAAE;AAAA,MAAO;AAC7B,kBAAM,UAAN,mBAAa;AAAA,IAAM;AAIrB,UAAM,OAAO,MAAM;;AACjB,UAAI,4BAA4B,OAAO;AACrC,oCAA4B,QAAQ;AAAA,MACtC;AAES,eAAA,YAAM,UAAN,mBAAa,IAAI;AAAA,IAAA;AAI5B,UAAM,QAAQ,MAAM;AAClB,UAAI,MAAM,UAAU;AACJ,sBAAA,QAAQ,MAAM,QAAQ,MAAM,UAAU,IAAI,MAAM,aAAa;MAAC,OACvE;AACL,sBAAc,QAAQ,MAAM;AAAA,MAC9B;AAEA,kBAAY,QAAQ;AACpB,WAAK,OAAO;AAAA,IAAA;AAGd,UAAM,mBAAmB,SAAS,MAAM,MAAM,WAAW,KAAK,MAAM,QAAQ;AAE5E,UAAM,mBAAmB,MAAM;AAC7B,YAAM,WAAW,cAAc;AACzB,YAAA,kBAAkB,OAAO,aAAa,YAAY,MAAM,QAAQ,QAAQ,KAAK,CAAC,SAAS;AAE7F,UAAI,iBAAiB;AAAE;AAAA,MAAO;AAExB,YAAA,WAAW,MAAM,QAAQ,QAAQ,IAAI,SAAS,SAAS,SAAS,KAAK;AAC3E,oBAAc,QAAQ;AACtB,eAAS,MAAM;;AAAA,gCAAW,UAAX,mBAAkB,eAAe;AAAA,OAAS;AAAA,IAAA;AAK3D,QAAI,oBAAoB;AACpB,QAAA;AACJ,UAAM,iBAAiB,CAAC,WAAW,aAAa,aAAa,cAAc,SAAS,GAAG;AAGjF,UAAA,iBAAiB,CAAC,UAAyB;AAC/C,UAAI,eAAe,KAAK,CAAA,QAAO,QAAQ,MAAM,GAAG,GAAG;AACjD;AAAA,MACF;AAEM,YAAA,WAAoB,MAAM,IAAI,WAAW;AAC/C,YAAM,cAAuB,MAAM,QAAQ,eAAe,MAAM,QAAQ;AAExE,mBAAa,6BAA6B;AAE1C,UAAI,aAAa;AAEf,4BAAoB,oBAAoB,kBAAkB,MAAM,GAAG,EAAE,IAAI;AAAA,iBAChE,UAAU;AAEnB,6BAAqB,MAAM;AAAA,MAC7B;AAEA,UAAI,gBAAgB,OAAO;AACzB,oBAAY,QAAQ;AACpB;AAAA,MACF;AAGA,UAAI,mBAAmB;AACrB,cAAM,oBAAoB,MAAM,QAAQ,KAAK,YAAU,QAAQ,MAAM,EAAE,YAAc,EAAA,WAAW,kBAAkB,YAAA,CAAa,CAAC;AAChI,YAAI,mBAAmB;AACrB,wBAAc,QAAQ;AAAA,QACxB;AAAA,MACF;AAEA,sCAAgC,WAAW,MAAM;AAAsB,4BAAA;AAAA,SAAM,GAAI;AAAA,IAAA;AAG5E,WAAA;AAAA,MACL;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AACF,CAAC;;;EAzlBW,OAAM;;AAwCP,MAAA,aAAA,EAAA,OAAM;;;;;;;;sBAhIfA,YAyJc,wBAAA;AAAA,IAxJZ,KAAI;AAAA,IACJ,OAAM;AAAA,IACL,cAAU,sCAAwC,KAAO,OAAA;AAAA,IACzD,WAAW,KAAO,OAAA;AAAA,IAClB,UAAU,KAAO,OAAA;AAAA,IACjB,cAAY,KAAO,OAAA;AAAA,IACnB,0BAAwB,KAAA;AAAA,IACxB,UAAU;AAAA,IACV,QAAQ,CAAA,GAAA,CAAA;AAAA,IACT,qBAAA;AAAA,IACA,uBAAA;AAAA,IACA,yBAAsB;AAAA,IACb,YAAA,KAAA;AAAA,IAA2B,uBAAA,OAAA,MAAA,QAAA,KAAA,CAAA,WAAA,KAAA,8BAAA;AAAA,IACnC,SAAO,KAAA;AAAA,EAAA,GAAA;AAAA,IAEG,QAAMC,QACf,MAuFmB;AAAA,MAvFnBC,YAuFmB,6BAAA;AAAA,QAtFjB,KAAI;AAAA,QACJ,OAAM;AAAA,QACL,eAAa,KAAA;AAAA,QACb,SAAS,KAAO,OAAA;AAAA,QAChB,OAAO,KAAA;AAAA,QACP,OAAO,KAAO,OAAA;AAAA,QACd,OAAO,KAAO,OAAA;AAAA,QACd,SAAS,KAAO,OAAA;AAAA,QAChB,UAAU,KAAO,OAAA;AAAA,QACjB,SAAS,KAAO,OAAA;AAAA,QAChB,UAAU,KAAO,OAAA;AAAA,QACjB,iBAAe,KAAO,OAAA;AAAA,QACtB,UAAU,KAAO,OAAA;AAAA,QACjB,kBAAgB,KAAA;AAAA,QAChB,SAAS,KAAA;AAAA,QACT,UAAU,KAAA;AAAA,QACV,SAAO,KAAA;AAAA,QACP,QAAM,KAAA;AAAA,MAAA,GAAAC,YAAA;AAAA,QAuBI,MAAIF,QACb,MAUE;AAAA,UATM,KAAA,gBAAAG,WAAA,GADRJ,YAUE,oBAVFK,WAUE;AAAA,YAAA,KAAA;AAAA,YARA,MAAK;AAAA,YACL,eAAY;AAAA,YACZ,cAAW;AAAA,YACX,UAAS;AAAA,UAAA,GACD,KAAc,gBAAA;AAAA,YACrB,SAAKC,cAAO,KAAK,OAAA,CAAA,MAAA,CAAA;AAAA,YACjB,WAAO;AAAA,cAAAC,SAAAD,cAAa,KAAK,OAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AAAA,cAAAC,SAAAD,cACL,KAAK,OAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AAAA,YAAA;AAAA;;QAInB,aAAWL,QACpB,MAGE;AAAA,UAFM,KAAA,OAAO,cADfO,WAGE,KAAA,QAAA,eAAA,EAAA,KAAA,EAAA,CAAA,IAAAC,mBAAA,IAAA,IAAA;AAAA,UACFP,YAGE,oBAAA;AAAA,YAFC,OAAO,KAAA;AAAA,YACP,MAAM,KAAA;AAAA,UAAA,GAAA,MAAA,GAAA,CAAA,SAAA,MAAA,CAAA;AAAA;QAKR,SAAOD,QAER,MAKO;AAAA,UAJC,KAAA,gBAAAG,WAAA,GADRM,mBAKO,QALP,YAKOC,gBADF,KAAO,OAAA,WAAW,SAEvBH,WAUO,KAAA,QAAA,WAAAI,eAAAP,WAAA,EAAA,KAAA,KAAA;AAAA,YAPgC,aAAA,KAAA;AAAA,YAA0C,OAAA,KAAA;AAAA,YAAuC,UAAA,KAAA;AAAA,UAAA,CAAA,CAAA,GAHxH,MAUO;AAAA,YAAAQ,gBAAAF,gBADF,KAAmB,mBAAA,GAAA,CAAA;AAAA,UAAA,CAAA;AAAA;;;QA/DlB,KAAO,OAAA,UAAA;AAAA,UACZ,MAAA;AAAA,UAAA,IAAAV,QAED,MAAuB;AAAA,YAAvBO,WAAuB,KAAA,QAAA,SAAA;AAAA,UAAA,CAAA;AAAA;QAIjB,KAAO,OAAA,SAAA;AAAA,UACZ,MAAA;AAAA,UAAA,IAAAP,QAED,MAAsB;AAAA,YAAtBO,WAAsB,KAAA,QAAA,QAAA;AAAA,UAAA,CAAA;AAAA;QAIhB,KAAO,OAAA,eAAA;AAAA,UACZ,MAAA;AAAA,UAAA,IAAAP,QAED,MAA4B;AAAA,YAA5BO,WAA4B,KAAA,QAAA,cAAA;AAAA,UAAA,CAAA;AAAA;;;qBAqDlC,MA4CsB;AAAA,MA5CtBN,YA4CsB,gCAAA;AAAA,QA3CpB,OAAM;AAAA,QACL,OAAKY,eAAW,EAAA,OAAA,KAAA,OAAO,OAAK;AAAA,MAAA,GAAA;AAAA,yBAE7B,MAeE;AAAA,UAdM,qCADRd,YAeE,qBAAA;AAAA,YAAA,KAAA;AAAA,YAbA,KAAI;AAAA,YACJ,OAAM;AAAA,YACN,aAAY;AAAA,YACZ,cAAW;AAAA,YACV,UAAU,KAAA;AAAA,YACV,UAAU;AAAA,YACF,YAAA,KAAA;AAAA,YAAW,uBAAA,OAAA,MAAA,QAAA,KAAA,CAAA,WAAA,KAAA,cAAA;AAAA,YACnB,WAAO;AAAA,cAAAO,SAAAD,cAAkB,KAAmB,qBAAA,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,IAAA,CAAA;AAAA,cAAAC,SAAAD,cACjB,KAAmB,qBAAA,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA;AAAA,cAAAC,SAAAD,cACnB,KAAe,iBAAA,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA;AAAA,cAAAC,SAAAD,cACd,KAAe,iBAAA,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AAAA,cAAAC,SAAAD,cACpB,KAAiB,mBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AAAA,YAAA;AAAA,YACxC,SAAK,sCAAE,KAAa,gBAAA;AAAA,UAAA,GAAA,MAAA,GAAA,CAAA,YAAA,cAAA,WAAA,CAAA,KAAAG,mBAAA,IAAA,IAAA;AAAA,UAEvBM,mBAuBM,OAvBN,YAuBM;AAAA,YAtBJb,YAqBE,kCAAA;AAAA,cApBA,KAAI;AAAA,cACI,eAAe,KAAA;AAAA,cAAa,0BAAA,OAAA,MAAA,QAAA,KAAA,CAAA,WAAA,KAAA,gBAAA;AAAA,cACnC,OAAKY,eAAe,EAAA,WAAA,KAAA,OAAO,WAAS;AAAA,cACpC,SAAS,KAAA;AAAA,cACT,kBAAgB,KAAA;AAAA,cAChB,sBAAoB,KAAA;AAAA,cACpB,YAAU,KAAA;AAAA,cACV,gBAAc,KAAA;AAAA,cACd,gBAAc,KAAA;AAAA,cACd,QAAQ,KAAA;AAAA,cACR,mBAAiB,KAAO,OAAA;AAAA,cACxB,OAAO,KAAO,OAAA;AAAA,cACd,UAAU,KAAA;AAAA,cACV,gBAAe,KAAA;AAAA,cACf,2BAA6B,KAAA;AAAA,cAC7B,WAAO;AAAA,gBAAAP,SAAAD,cAAqB,KAAmB,qBAAA,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AAAA,gBAAAC,SAAAD,cACnB,KAAmB,qBAAA,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AAAA,gBACrB,OAAA,MAAA,QAAA,KAAAC,SAAAD,cAAA,CAAA,WAAA,KAAA,aAAa,eAAU,MAAK,GAAA,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AAAA,gBAC7C,KAAA;AAAA,cAAA;AAAA,cACT,gBAAe,KAAA;AAAA,YAAA,GAAA,MAAA,GAAA,CAAA,iBAAA,SAAA,WAAA,kBAAA,sBAAA,YAAA,gBAAA,gBAAA,UAAA,mBAAA,SAAA,YAAA,kBAAA,6BAAA,aAAA,gBAAA,CAAA;AAAA;;;;;;;;;;"}