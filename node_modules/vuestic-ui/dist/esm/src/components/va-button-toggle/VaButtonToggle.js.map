{"version":3,"file":"VaButtonToggle.js","sources":["../../../../../src/components/va-button-toggle/VaButtonToggle.vue"],"sourcesContent":["<template>\n  <div class=\"va-button-toggle\">\n    <va-button-group\n      :color=\"color\"\n      :textColor=\"textColor\"\n      :rounded=\"rounded\"\n      :outline=\"outline\"\n      :flat=\"flat\"\n      :gradient=\"gradient\"\n    >\n      <va-button\n        v-for=\"option in options\"\n        :key=\"option.value\"\n        :aria-pressed=\"isToggled(option.value)\"\n        :class=\"getButtonClass(option.value)\"\n        :disabled=\"disabled\"\n        :size=\"size\"\n        v-bind=\"getButtonProps(option)\"\n        @click=\"changeValue(option.value)\"\n      >\n        {{ option.label }}\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport { shiftHSLAColor } from '../../services/color-config/color-functions'\nimport { useColors, useTextColor } from '../../composables'\n\nimport { ButtonOption } from './types'\n\nimport { VaButton } from '../va-button'\nimport { VaButtonGroup } from '../va-button-group'\n\nexport default defineComponent({\n  name: 'VaButtonToggle',\n  components: {\n    VaButtonGroup,\n    VaButton,\n  },\n  emits: ['update:modelValue'],\n  props: {\n    options: {\n      type: Array as PropType<ButtonOption[]>,\n      required: true,\n    },\n    color: { type: String, default: 'primary' },\n    textColor: { type: String, default: undefined },\n    activeButtonTextColor: { type: String },\n    modelValue: { type: [String, Number], default: '' },\n    outline: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    rounded: { type: Boolean, default: true },\n    disabled: { type: Boolean, default: false },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    toggleColor: { type: String, default: '' },\n    gradient: { type: Boolean, default: false },\n  },\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const isFlatOrOutline = computed(() => props.outline || props.flat)\n    const activeButtonColor = computed(() => {\n      if (props.toggleColor) {\n        return getColor(props.toggleColor)\n      } else {\n        return isFlatOrOutline.value ? colorComputed.value : shiftHSLAColor(colorComputed.value, { l: -6 })\n      }\n    })\n\n    const { textColorComputed: activeButtonTextColor } = useTextColor(activeButtonColor)\n\n    const isToggled = (value: any) => value === props.modelValue\n\n    const getButtonProps = (option: ButtonOption = {} as ButtonOption) => {\n      const iconsProps = {\n        icon: option.icon,\n        iconRight: option.iconRight,\n      }\n\n      if (!isToggled(option.value)) { return iconsProps }\n\n      return {\n        color: activeButtonColor.value,\n        textColor: props.activeButtonTextColor ?? activeButtonTextColor.value,\n        ...iconsProps,\n        ...(isFlatOrOutline.value && { outline: false, flat: false }),\n      }\n    }\n\n    const getButtonClass = (buttonValue: any) => ({ 'va-button--active': isToggled(buttonValue) })\n\n    const changeValue = (value: any) => emit('update:modelValue', value)\n\n    return {\n      getButtonProps,\n      getButtonClass,\n      changeValue,\n      isToggled,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-button-toggle {\n  .va-button {\n    &:focus,\n    &:hover {\n      box-shadow: none !important;\n    }\n  }\n}\n</style>\n"],"names":["_openBlock","_createElementBlock","_createVNode","_Fragment","_renderList","_createBlock","_mergeProps","_createTextVNode","_toDisplayString"],"mappings":"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"}