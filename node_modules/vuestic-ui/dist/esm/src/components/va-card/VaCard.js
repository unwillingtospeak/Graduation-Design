var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, normalizeClass, normalizeStyle, withCtx, createElementBlock, createCommentVNode, createElementVNode, renderSlot } from "vue";
import { a as getGradientBackground } from "../../services/color-config/color-functions.js";
import "../../../vendor.js";
import { u as useColors } from "../../composables/useColors.js";
import "../../composables/useDropdown.js";
import { u as useRouterLinkProps, a as useRouterLink } from "../../composables/useRouterLink.js";
import { u as useTextColor } from "../../composables/useTextColor.js";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
var VaCard_vue_vue_type_style_index_0_lang = "";
const _sfc_main = defineComponent({
  name: "VaCard",
  emits: ["click"],
  props: __spreadProps(__spreadValues({}, useRouterLinkProps), {
    tag: { type: String, default: "div" },
    square: { type: Boolean, default: false },
    outlined: { type: Boolean, default: false },
    bordered: { type: Boolean, default: true },
    disabled: { type: Boolean, default: false },
    href: { type: String, default: "" },
    target: { type: String, default: "" },
    stripe: { type: Boolean, default: false },
    stripeColor: { type: String, default: "" },
    gradient: { type: Boolean, default: false },
    textColor: { type: String },
    color: { type: String, default: "white" }
  }),
  setup(props) {
    const { getColor } = useColors();
    const { isLinkTag, tagComputed, hrefComputed } = useRouterLink(props);
    const { textColorComputed } = useTextColor();
    const stripeStyles = computed(() => ({ background: getColor(props.stripeColor) }));
    const cardClasses = computed(() => ({
      "va-card--square": props.square,
      "va-card--outlined": props.outlined,
      "va-card--no-border": !props.bordered,
      "va-card--disabled": props.disabled,
      "va-card--link": isLinkTag.value
    }));
    const cardStyles = computed(() => {
      if (props.gradient && props.color) {
        return {
          background: getGradientBackground(getColor(props.color)),
          color: textColorComputed.value
        };
      }
      return { background: getColor(props.color), color: textColorComputed.value };
    });
    return {
      cardClasses,
      cardStyles,
      stripeStyles,
      tagComputed,
      hrefComputed
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createBlock(resolveDynamicComponent(_ctx.tagComputed), {
    class: normalizeClass(["va-card", _ctx.cardClasses]),
    style: normalizeStyle(_ctx.cardStyles),
    href: _ctx.hrefComputed,
    target: _ctx.target,
    to: _ctx.to,
    replace: _ctx.replace,
    exact: _ctx.exact,
    "active-class": _ctx.activeClass,
    "exact-active-class": _ctx.exactActiveClass
  }, {
    default: withCtx(() => [
      _ctx.stripe ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: "va-card__stripe",
        style: normalizeStyle(_ctx.stripeStyles)
      }, null, 4)) : createCommentVNode("", true),
      createElementVNode("div", {
        class: "va-card__inner",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("click", $event))
      }, [
        renderSlot(_ctx.$slots, "default")
      ])
    ]),
    _: 3
  }, 8, ["class", "style", "href", "target", "to", "replace", "exact", "active-class", "exact-active-class"]);
}
var _VaCard = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaCard as _ };

import './VaCard.css';
//# sourceMappingURL=VaCard.js.map
