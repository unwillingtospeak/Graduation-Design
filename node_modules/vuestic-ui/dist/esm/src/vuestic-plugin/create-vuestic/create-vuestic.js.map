{"version":3,"file":"create-vuestic.js","sources":["../../../../../src/vuestic-plugin/create-vuestic/create-vuestic.ts"],"sourcesContent":["import type { GlobalConfig } from '../../services/global-config/global-config'\nimport { defineVuesticPlugin, usePlugin } from '../utils'\nimport { GlobalConfigPlugin, VaDropdownPlugin, VaToastPlugin, VaModalPlugin, ColorConfigPlugin } from '../vuestic-plugins'\nimport * as vuesticComponents from '../vuestic-components'\nimport type { VuesticComponents } from '../global-components'\n\n// Declare all components globally\ndeclare module 'vue' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  export interface GlobalComponents extends VuesticComponents {}\n}\n\n/**\n * Globally register all vuestic components and plugins\n * @notice using this method will bundle all vuestic components.\n * Use `createVuesticEssential` if you want tree shaking to work.\n */\nexport const createVuestic = defineVuesticPlugin((options: { config?: GlobalConfig } = {}) => ({\n  install (app) {\n    const { config } = options\n\n    Object.entries(vuesticComponents).forEach(([name, component]) => {\n      app.component(name, component)\n    })\n\n    usePlugin(app, GlobalConfigPlugin(config))\n    usePlugin(app, ColorConfigPlugin)\n    usePlugin(app, VaDropdownPlugin)\n    usePlugin(app, VaToastPlugin)\n    usePlugin(app, VaModalPlugin)\n  },\n}))\n"],"names":["vuesticComponents"],"mappings":";;;;;;;;AAiBO,MAAM,gBAAgB,oBAAoB,CAAC,UAAqC,OAAQ;AAAA,EAC7F,QAAS,KAAK;AACZ,UAAM,EAAE,WAAW;AAEnB,WAAO,QAAQA,mBAAiB,EAAE,QAAQ,CAAC,CAAC,MAAM,eAAe;AAC3D,UAAA,UAAU,MAAM,SAAS;AAAA,IAAA,CAC9B;AAES,cAAA,KAAK,mBAAmB,MAAM,CAAC;AACzC,cAAU,KAAK,iBAAiB;AAChC,cAAU,KAAK,gBAAgB;AAC/B,cAAU,KAAK,aAAa;AAC5B,cAAU,KAAK,aAAa;AAAA,EAC9B;AACF,EAAE;;"}